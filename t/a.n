type Slice T =
  data :T
  size :Size
  capacity :Size

fun bar x:I32 = I32
  return x - 1

fun bar2 x:U32 = U32, U32
  let y :U32 = 0
    y = neg 1

  return x + 1, y

fun bar3 x:.(Slice .U32) z:!(Slice .U32) = [].U32
  let y :(Slice .U32)
    y!data = x.data
    z! = x.
  return y

type A =
  x :U32
  v :[].U32
  method! setter x:U32 = Void
    let y:U32 = 1
      y = 0
    this.x = x + y

fun main = I32
  #? 0 == 0
  return bar (neg -1)
