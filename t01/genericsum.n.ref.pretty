from nlang import *
type container = `trivial_ctor <root>.nlang.builtins.`trivial_ctor
  final = t01.genericsum.container
  this = t01.genericsum.container
  x:t
  inline container method add x:t = _nretval:void 
  noop
  _Ngensymc = @!self!x
  _Ngensymd = @x
  noop
  nlang.builtins.`arithmetic.operator_assign_plus _Ngensymc _Ngensymd

  container method <root>.nlang.builtins.`trivial_ctor.ctor = _nretval:void 

  fun <root>.nlang.builtins.`trivial_ctor.mk = r:final 

  fun <root>.nlang.builtins.`trivial_ctor.new = _nretval:@#final 


export fun main = _nretval:i32 
  block
    noop
    _Ngensym1 = 0
    v = { x=_Ngensym1 }
    _Ngensym4 = { }
    block
      _Ngensym2 = 1
      _Ngensymb = @!v
      noop
      _Ngensym4 = t01.genericsum.container.add _Ngensymb _Ngensym2
    _Ngensym4
  noop
  _Ngensym6 = 1
  _Ngensym7 = v.x - _Ngensym6
  return _Ngensym7
