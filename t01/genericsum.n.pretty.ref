from nlang import *
type container = `trivial_ctor <root>.nlang.builtins.`trivial_ctor
  alias this = t01.genericsum.container
  alias final = t01.genericsum.container
  x:t
  inline container method add x:t = void 
  nlang.builtins.`arithmetic.operator_assign_plus @!self!x @x

  container method <root>.nlang.builtins.`trivial_ctor.ctor = void 

  fun <root>.nlang.builtins.`trivial_ctor.mk = r:final 

  fun <root>.nlang.builtins.`trivial_ctor.new = @#final 


export fun main = i32 
  and v = { x=0 }  such
    t01.genericsum.container.add @!v 1
  return v.x - 1
