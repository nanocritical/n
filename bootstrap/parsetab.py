
# bootstrap/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xee\xd5\xee\xdc\x88\x01\xae<5\xf2\x02\x1c\x02=5\xf5'
    
_lr_action_items = {'EOB':([169,171,208,258,263,277,304,316,333,335,352,355,364,371,372,],[-13,265,272,-7,-14,-11,-8,-12,351,-131,-9,-129,-10,-126,-127,]),'ELIF':([335,347,371,],[353,353,353,]),'RSHIFT':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,88,-52,-56,-53,-62,-61,-90,-137,-55,-91,88,-54,-38,-21,-24,-22,-95,-58,-57,-51,None,-88,None,88,-72,88,88,88,-71,88,-75,-74,88,-73,88,88,88,88,88,88,88,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,88,-60,-59,]),'NEG':([16,32,34,36,38,39,40,41,44,45,46,48,49,51,53,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[33,-20,-43,-47,-44,-45,-89,-19,-48,-18,33,-46,-49,-50,33,-52,-56,-53,-62,-61,33,-90,-137,-55,33,-91,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-54,-38,-21,-24,-22,-95,-58,33,-57,33,33,33,33,33,33,33,33,33,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,33,33,33,33,-29,-28,-27,-39,-37,-36,33,-96,33,33,33,-4,33,-23,-26,-25,-60,-59,33,33,33,33,33,-131,33,33,-129,-126,-127,]),'IN':([115,116,122,127,221,227,228,230,231,232,233,259,260,281,285,286,],[-38,-21,-24,-22,-29,-28,-27,-39,-37,-36,-108,305,306,-23,-26,-25,]),'NUMBER':([16,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[34,-20,34,-43,34,-47,34,-44,-45,-89,-19,-48,-18,34,34,-46,-49,-50,34,34,-52,-56,-53,-62,-61,34,-90,-137,-55,34,-91,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-54,-38,-21,-24,-22,-95,-58,34,-57,34,34,34,34,34,34,34,34,34,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,34,34,34,34,-29,-28,-27,-39,-37,-36,34,-96,34,34,34,-4,34,-23,-26,-25,-60,-59,34,34,34,34,34,-131,34,34,-129,-126,-127,]),'REFBANG':([16,32,34,36,38,39,40,41,44,45,46,48,49,51,53,58,62,71,74,75,76,78,79,80,81,82,84,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,121,122,123,124,127,129,130,145,146,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,226,227,228,230,231,232,235,237,247,248,250,255,258,264,265,268,273,276,281,283,284,285,286,292,294,295,300,301,305,306,313,315,320,322,324,332,335,337,339,341,353,355,371,372,],[35,-20,-43,-47,-44,-45,-89,-19,-48,-18,35,-46,-49,-50,35,125,125,125,-52,-56,-53,-62,-61,35,-90,-137,-55,35,-91,35,125,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-54,125,125,-38,-21,125,-24,125,125,-22,125,125,125,125,-95,-58,35,-57,35,35,35,35,35,35,35,35,35,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,35,35,35,35,-29,125,-28,-27,-39,-37,-36,125,125,125,35,-96,35,35,35,-4,35,125,125,-23,125,125,-26,-25,125,125,125,-60,-59,35,35,35,35,125,125,125,35,-131,35,125,125,35,-129,-126,-127,]),'EOL':([1,5,9,10,11,13,14,17,25,26,31,32,34,36,38,39,40,41,42,44,45,48,49,50,51,53,74,75,76,78,79,81,82,84,85,87,93,106,111,112,115,116,117,118,122,123,127,131,132,133,134,140,141,142,143,144,150,154,156,158,162,163,166,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,207,209,214,215,216,217,218,220,221,222,224,225,226,227,228,229,230,231,232,233,234,236,243,244,245,246,250,253,254,257,265,266,267,269,271,272,274,276,277,278,281,282,284,285,286,287,288,289,295,296,297,298,300,301,303,308,309,310,311,312,314,317,318,319,323,325,326,327,328,329,334,336,338,340,342,343,344,345,346,348,349,351,356,357,358,359,360,361,363,366,368,369,370,],[-201,-203,27,-200,-205,-204,-202,-113,-197,-195,-97,-20,-43,-47,-44,-45,-89,-19,-98,-48,-18,-46,-49,-109,-50,-99,-52,-56,-53,-62,-61,-90,-137,-55,-111,-91,-84,-82,-54,-153,-38,-21,-193,-15,-24,-106,-22,-165,-21,-169,-166,-196,-16,-199,-198,-177,-95,-58,-57,-119,-116,258,-115,-118,-124,-125,-51,-110,-76,-88,-77,-81,-72,-63,-87,-85,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-83,-66,-67,-80,-65,-157,-154,-144,-146,-143,-148,-1,277,-147,-2,-145,-142,-3,-29,-194,-40,-41,-42,-28,-27,-107,-39,-37,-36,-108,-170,-173,-17,-181,-178,-185,-96,-120,-134,-135,-4,-136,-112,-158,-149,-6,-151,-138,-15,-150,-23,-35,-33,-26,-25,-174,-167,-168,-155,-182,-189,-186,-60,-59,-121,-133,335,-117,-86,-114,-140,-30,-32,-34,-179,-171,-159,-156,-190,347,352,-152,-139,-187,-180,-183,-172,-175,-160,-122,-123,-5,-141,-31,-191,-188,-184,-176,-132,-130,-192,371,-128,]),'WHILE':([80,159,161,169,174,206,219,258,335,355,371,372,],[160,160,160,160,160,160,160,160,-131,-129,-126,-127,]),'IDENT':([3,4,7,12,15,16,18,19,21,22,23,24,29,30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,57,58,59,62,63,64,68,70,71,73,74,75,76,77,78,79,80,81,82,84,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,119,121,122,123,125,126,127,129,130,135,137,138,139,141,145,146,148,149,150,152,154,155,156,157,158,159,160,161,164,165,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,202,206,211,212,213,219,221,226,227,228,230,231,232,233,235,237,239,240,241,247,248,250,255,258,264,265,268,273,276,277,279,280,281,283,284,285,286,290,292,294,295,299,300,301,305,306,313,315,320,322,324,332,335,337,339,341,353,355,371,372,],[19,21,26,26,29,45,19,57,60,57,57,57,60,73,-20,45,-43,45,-47,45,-44,-45,-89,-19,-48,-18,45,45,-46,-49,-50,45,45,57,116,60,132,60,57,26,141,132,60,-52,-56,-53,151,45,45,45,-90,-137,-55,45,-91,45,116,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-54,116,116,-38,-21,141,116,116,-24,116,116,116,-22,116,132,60,240,241,19,141,132,132,45,45,-95,151,-58,45,-57,45,45,45,45,45,60,60,45,45,45,45,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,57,45,45,45,276,45,-29,116,116,116,-39,-37,-36,-108,132,132,290,60,60,132,45,-96,45,45,45,-4,45,116,116,141,116,116,-23,116,116,-26,-25,60,132,132,116,-92,-60,-59,45,45,45,45,132,132,132,45,-131,45,116,132,45,-129,-126,-127,]),'LSHIFT':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,90,-52,-56,-53,-62,-61,-90,-137,-55,-91,90,-54,-38,-21,-24,-22,-95,-58,-57,-51,None,-88,None,90,-72,90,90,90,-71,90,-75,-74,90,-73,90,90,90,90,90,90,90,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,90,-60,-59,]),'FUN':([0,6,27,118,277,],[4,23,4,4,4,]),'RETURN':([80,159,161,169,174,206,219,258,335,355,371,372,],[158,158,158,158,158,158,158,158,-131,-129,-126,-127,]),'SIZEOF':([16,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[44,-20,44,-43,44,-47,44,-44,-45,-89,-19,-48,-18,44,44,-46,-49,-50,44,44,-52,-56,-53,-62,-61,44,-90,-137,-55,44,-91,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-54,-38,-21,-24,-22,-95,-58,44,-57,44,44,44,44,44,44,44,44,44,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,44,44,44,44,-29,-28,-27,-39,-37,-36,44,-96,44,44,44,-4,44,-23,-26,-25,-60,-59,44,44,44,44,44,-131,44,44,-129,-126,-127,]),'NULL':([16,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[36,-20,36,-43,36,-47,36,-44,-45,-89,-19,-48,-18,36,36,-46,-49,-50,36,36,-52,-56,-53,-62,-61,36,-90,-137,-55,36,-91,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-54,-38,-21,-24,-22,-95,-58,36,-57,36,36,36,36,36,36,36,36,36,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,36,36,36,36,-29,-28,-27,-39,-37,-36,36,-96,36,36,36,-4,36,-23,-26,-25,-60,-59,36,36,36,36,36,-131,36,36,-129,-126,-127,]),'TRUE':([16,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[39,-20,39,-43,39,-47,39,-44,-45,-89,-19,-48,-18,39,39,-46,-49,-50,39,39,-52,-56,-53,-62,-61,39,-90,-137,-55,39,-91,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-54,-38,-21,-24,-22,-95,-58,39,-57,39,39,39,39,39,39,39,39,39,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,39,39,39,39,-29,-28,-27,-39,-37,-36,39,-96,39,39,39,-4,39,-23,-26,-25,-60,-59,39,39,39,39,39,-131,39,39,-129,-126,-127,]),'UBWNOT':([16,32,34,36,38,39,40,41,44,45,46,48,49,51,53,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[37,-20,-43,-47,-44,-45,-89,-19,-48,-18,37,-46,-49,-50,37,-52,-56,-53,-62,-61,37,-90,-137,-55,37,-91,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-54,-38,-21,-24,-22,-95,-58,37,-57,37,37,37,37,37,37,37,37,37,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,37,37,37,37,-29,-28,-27,-39,-37,-36,37,-96,37,37,37,-4,37,-23,-26,-25,-60,-59,37,37,37,37,37,-131,37,37,-129,-126,-127,]),'BLOCK':([16,32,34,36,38,39,40,41,44,45,46,48,49,51,53,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[43,-20,-43,-47,-44,-45,-89,-19,-48,-18,43,-46,-49,-50,43,-52,-56,-53,-62,-61,43,-90,-137,-55,43,-91,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-54,-38,-21,-24,-22,-95,-58,43,-57,43,43,43,43,43,43,43,43,43,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,43,43,43,43,-29,-28,-27,-39,-37,-36,43,-96,43,43,43,-4,43,-23,-26,-25,-60,-59,43,43,43,43,43,-131,43,43,-129,-126,-127,]),'DIVIDE':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,100,-52,-56,-53,-62,-61,-90,-137,-55,-91,100,-54,-38,-21,-24,-22,-95,-58,-57,-51,100,-88,100,100,100,100,100,100,100,100,None,None,100,-73,100,100,100,100,100,100,100,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,100,-60,-59,]),'SOB':([31,32,34,36,38,39,40,41,42,43,44,45,48,49,50,51,52,53,58,74,75,76,78,79,81,82,84,87,93,106,111,112,115,116,120,122,123,127,131,132,133,134,144,150,154,156,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,221,227,228,229,230,231,232,233,234,245,246,250,256,261,262,265,281,285,286,288,289,295,298,300,301,302,311,323,325,327,330,331,340,342,344,350,354,359,365,367,],[-97,-20,-43,-47,-44,-45,-89,-19,-98,80,-48,-18,-46,-49,80,-50,80,-99,118,-52,-56,-53,-62,-61,-90,-137,-55,-91,-84,-82,-54,118,-38,-21,118,-24,-106,-22,-165,-21,80,-166,80,-95,-58,-57,-51,80,-76,-88,-77,-81,-72,-63,-87,-85,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-83,-66,-67,-80,-65,118,-29,-28,-27,-107,-39,-37,-36,-108,80,80,80,-96,80,307,80,-4,-23,-26,-25,-167,-168,118,80,-60,-59,80,-86,80,80,118,80,80,80,80,80,80,80,80,80,80,]),'SLICEBRAKETS':([58,62,71,89,112,114,115,116,119,121,122,123,125,126,127,129,130,145,146,221,226,227,228,230,231,232,235,237,247,273,276,279,280,281,283,284,285,286,292,294,295,320,322,324,339,341,],[119,119,119,119,119,119,-38,-21,119,119,-24,119,119,119,-22,119,119,119,119,-29,119,-28,-27,-39,-37,-36,119,119,119,119,119,119,119,-23,119,119,-26,-25,119,119,119,119,119,119,119,119,]),'LGE':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,107,-52,-56,-53,-62,-61,-90,-137,-55,-91,107,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,107,-72,None,107,107,-71,None,-75,-74,-78,-73,107,107,-79,None,107,-80,None,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,107,-60,-59,]),')':([31,32,34,36,38,39,40,41,42,44,45,48,49,51,53,57,65,66,67,74,75,76,78,79,81,82,83,84,87,93,106,111,113,115,116,122,127,136,150,154,156,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,221,223,224,225,226,227,228,230,231,232,250,265,270,281,282,284,285,286,300,301,311,317,318,319,357,],[-97,-20,-43,-47,-44,-45,-89,-19,-98,-48,-18,-46,-49,-50,-99,-100,137,138,139,-52,-56,-53,-62,-61,-90,-137,175,-55,-91,-84,-82,-54,-101,-38,-21,-24,-22,239,-95,-58,-57,-51,-76,-88,-77,-81,-72,-63,-87,-85,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-83,-66,-67,-80,-65,-102,-29,281,-40,-41,-42,-28,-27,-39,-37,-36,-96,-4,-103,-23,-35,-33,-26,-25,-60,-59,-86,-30,-32,-34,-31,]),'(':([0,16,27,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,58,62,71,74,75,76,78,79,80,81,82,84,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,119,121,122,123,125,126,127,129,130,145,146,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,226,227,228,230,231,232,235,237,247,248,250,255,258,264,265,268,273,276,277,279,280,281,283,284,285,286,292,294,295,300,301,305,306,313,315,320,322,324,332,335,337,339,341,353,355,371,372,],[6,46,6,-20,46,-43,46,-47,46,-44,-45,-89,-19,-48,-18,46,46,-46,-49,-50,46,46,121,121,121,-52,-56,-53,-62,-61,46,-90,-137,-55,46,-91,46,121,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-54,121,121,-38,-21,6,121,121,-24,121,121,121,-22,121,121,121,121,-95,-58,46,-57,46,46,46,46,46,46,46,46,46,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,46,46,46,46,-29,121,-28,-27,-39,-37,-36,121,121,121,46,-96,46,46,46,-4,46,121,121,6,121,121,-23,121,121,-26,-25,121,121,121,-60,-59,46,46,46,46,121,121,121,46,-131,46,121,121,46,-129,-126,-127,]),'CTX_SEMASSERT':([80,118,159,161,169,174,206,219,258,277,335,355,371,372,],[161,206,161,161,161,161,161,161,161,206,-131,-129,-126,-127,]),'MINUS':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,92,-52,-56,-53,-62,-61,-90,-137,-55,-91,92,-54,-38,-21,-24,-22,-95,-58,-57,-51,92,-88,92,92,-72,92,92,92,-71,92,-75,-74,92,-73,92,92,92,92,92,92,92,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,92,-60,-59,]),'CONTINUE':([80,159,161,169,174,206,219,258,335,355,371,372,],[173,173,173,173,173,173,173,173,-131,-129,-126,-127,]),'COLON':([32,34,36,38,39,40,41,44,45,48,49,51,53,57,60,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,132,141,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,210,221,227,228,230,231,232,243,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,89,114,129,-52,-56,-53,-62,-61,-90,-137,-55,-91,89,-54,-38,-21,-24,-22,129,-16,-95,-58,-57,-51,89,-88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,273,-29,-28,-27,-39,-37,-36,-17,-96,-4,-23,-26,-25,89,-60,-59,]),'DOT':([26,32,34,36,38,39,40,41,44,45,48,49,51,74,75,76,84,111,116,122,127,132,154,156,175,221,231,232,281,285,286,300,301,],[68,-20,-43,-47,-44,-45,79,-19,-48,-18,-46,-49,-50,149,149,149,149,149,-21,228,-22,-21,-58,-57,-51,280,280,280,-23,-26,-25,-60,-59,]),'LNE':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,96,-52,-56,-53,-62,-61,-90,-137,-55,-91,96,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,-81,-72,-63,96,None,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,None,-80,-65,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,96,-60,-59,]),'IMPORT':([0,26,27,28,140,],[7,-195,7,70,-196,]),'BWXOR':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,109,-52,-56,-53,-62,-61,-90,-137,-55,-91,109,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,109,-72,109,109,109,-71,109,-75,-74,-78,-73,109,109,109,109,109,-80,109,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,109,-60,-59,]),'IF':([80,159,161,169,174,206,219,258,335,355,371,372,],[168,255,255,168,255,255,255,168,-131,-129,-126,-127,]),'METHOD':([0,6,27,118,277,],[15,22,15,15,15,]),'?':([21,29,58,59,62,71,73,89,112,114,115,116,121,122,123,127,129,130,135,145,146,221,226,227,228,230,231,232,233,235,237,240,241,247,273,276,281,283,284,285,286,290,292,294,295,320,322,324,339,341,],[63,63,124,63,124,124,63,124,124,124,-38,-21,124,-24,124,-22,124,124,63,124,124,-29,124,-28,-27,-39,-37,-36,-108,124,124,63,63,124,124,124,-23,124,124,-26,-25,63,124,124,124,124,124,124,124,124,]),'$end':([0,2,8,27,69,],[-15,0,-206,-15,-207,]),'PLUS':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,97,-52,-56,-53,-62,-61,-90,-137,-55,-91,97,-54,-38,-21,-24,-22,-95,-58,-57,-51,97,-88,97,97,-72,97,97,97,-71,97,-75,-74,97,-73,97,97,97,97,97,97,97,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,97,-60,-59,]),'INTF':([0,27,118,277,],[3,3,3,3,]),'MODULO':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,99,-52,-56,-53,-62,-61,-90,-137,-55,-91,99,-54,-38,-21,-24,-22,-95,-58,-57,-51,99,-88,99,99,99,99,99,99,99,99,None,None,99,-73,99,99,99,99,99,99,99,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,99,-60,-59,]),'STRING':([16,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[38,-20,38,-43,38,-47,38,-44,-45,-89,-19,-48,-18,38,38,-46,-49,-50,38,38,-52,-56,-53,-62,-61,38,-90,-137,-55,38,-91,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-54,-38,-21,-24,-22,-95,-58,38,-57,38,38,38,38,38,38,38,38,38,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,38,38,38,38,-29,-28,-27,-39,-37,-36,38,-96,38,38,38,-4,38,-23,-26,-25,-60,-59,38,38,38,38,38,-131,38,38,-129,-126,-127,]),'FOR':([80,159,161,169,174,206,219,258,335,355,371,372,],[164,164,164,164,164,164,164,164,-131,-129,-126,-127,]),'BWAND':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,101,-52,-56,-53,-62,-61,-90,-137,-55,-91,101,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,101,-72,101,101,101,-71,101,-75,-74,-78,-73,101,101,101,101,101,101,101,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,101,-60,-59,]),'INHERIT':([31,32,34,36,38,39,40,41,42,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,93,106,111,115,116,118,122,127,150,154,156,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,221,227,228,230,231,232,250,265,275,277,281,285,286,300,301,311,],[-97,-20,-43,-47,-44,-45,-89,-19,-98,-48,-18,-46,-49,-50,-99,-52,-56,-53,-62,-61,-90,-137,-55,-91,-84,-82,-54,-38,-21,211,-24,-22,-95,-58,-57,-51,-76,-88,-77,-81,-72,-63,-87,-85,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-83,-66,-67,-80,-65,-29,-28,-27,-39,-37,-36,-96,-4,313,211,-23,-26,-25,-60,-59,-86,]),'TIMES':([32,34,36,38,39,40,41,44,45,48,49,51,53,70,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,102,143,-52,-56,-53,-62,-61,-90,-137,-55,-91,102,-54,-38,-21,-24,-22,-95,-58,-57,-51,102,-88,102,102,102,102,102,102,102,102,102,102,102,-73,102,102,102,102,102,102,102,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,102,-60,-59,]),'PFOR':([80,159,161,169,174,206,219,258,335,355,371,372,],[165,165,165,165,165,165,165,165,-131,-129,-126,-127,]),'BANG':([15,22,32,34,36,38,39,40,41,44,45,48,49,51,74,75,76,84,111,116,122,127,132,154,156,175,221,231,232,281,285,286,300,301,],[30,64,-20,-43,-47,-44,-45,78,-19,-48,-18,-46,-49,-50,148,148,148,148,148,-21,227,-22,-21,-58,-57,-51,279,279,279,-23,-26,-25,-60,-59,]),'CTX_ASSERT':([80,159,161,169,174,206,219,258,335,355,371,372,],[159,159,159,159,159,159,159,159,-131,-129,-126,-127,]),'PASS':([80,159,161,169,174,206,219,258,335,355,371,372,],[166,166,166,166,166,166,166,166,-131,-129,-126,-127,]),'FALSE':([16,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[48,-20,48,-43,48,-47,48,-44,-45,-89,-19,-48,-18,48,48,-46,-49,-50,48,48,-52,-56,-53,-62,-61,48,-90,-137,-55,48,-91,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-54,-38,-21,-24,-22,-95,-58,48,-57,48,48,48,48,48,48,48,48,48,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,48,48,48,48,-29,-28,-27,-39,-37,-36,48,-96,48,48,48,-4,48,-23,-26,-25,-60,-59,48,48,48,48,48,-131,48,48,-129,-126,-127,]),'[':([78,79,148,149,],[155,157,155,157,]),'ELSE':([335,347,355,362,371,372,],[354,354,367,367,-126,-127,]),']':([31,32,34,36,38,39,40,41,42,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,93,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,221,227,228,230,231,232,250,251,252,265,281,285,286,300,301,311,],[-97,-20,-43,-47,-44,-45,-89,-19,-98,-48,-18,-46,-49,-50,-99,-52,-56,-53,-62,-61,-90,-137,-55,-91,-84,-82,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,-81,-72,-63,-87,-85,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-83,-66,-67,-80,-65,-29,-28,-27,-39,-37,-36,-96,300,301,-4,-23,-26,-25,-60,-59,-86,]),'REFDOT':([16,32,34,36,38,39,40,41,44,45,46,48,49,51,53,58,62,71,74,75,76,78,79,80,81,82,84,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,121,122,123,124,127,129,130,145,146,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,226,227,228,230,231,232,235,237,247,248,250,255,258,264,265,268,273,276,281,283,284,285,286,292,294,295,300,301,305,306,313,315,320,322,324,332,335,337,339,341,353,355,371,372,],[47,-20,-43,-47,-44,-45,-89,-19,-48,-18,47,-46,-49,-50,47,126,126,126,-52,-56,-53,-62,-61,47,-90,-137,-55,47,-91,47,126,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-54,126,126,-38,-21,126,-24,126,126,-22,126,126,126,126,-95,-58,47,-57,47,47,47,47,47,47,47,47,47,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,47,47,47,47,-29,126,-28,-27,-39,-37,-36,126,126,126,47,-96,47,47,47,-4,47,126,126,-23,126,126,-26,-25,126,126,126,-60,-59,47,47,47,47,126,126,126,47,-131,47,126,126,47,-129,-126,-127,]),'OR':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,103,-52,-56,-53,-62,-61,-90,-137,-55,-91,103,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,-81,-72,-63,103,103,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,103,-80,-65,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,103,-60,-59,]),'AND':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,104,-52,-56,-53,-62,-61,-90,-137,-55,-91,104,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,-81,-72,-63,104,104,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,104,-80,-65,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,104,-60,-59,]),'RINIT':([32,34,36,38,39,40,41,44,45,48,49,51,74,75,76,77,78,79,81,82,84,87,111,115,116,122,127,150,152,153,154,156,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,249,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,-52,-56,-53,150,-62,-61,-90,-137,-55,-91,-54,-38,-21,-24,-22,-95,-93,250,-58,-57,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,-29,-28,-27,-39,-37,-36,-94,-96,-4,-23,-26,-25,-92,-60,-59,]),'BWOR':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,118,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,277,281,285,286,299,300,301,307,352,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,105,-52,-56,-53,-62,-61,-90,-137,-55,-91,105,-54,-38,-21,213,-24,-22,-95,-58,-57,-51,-76,-88,-77,105,-72,105,105,105,-71,105,-75,-74,-78,-73,105,105,-79,105,105,-80,105,-29,-28,-27,-39,-37,-36,-96,-4,213,-23,-26,-25,105,-60,-59,332,332,]),'FROM':([0,27,118,277,],[12,12,212,212,]),'LINIT':([32,34,36,38,39,40,41,44,45,48,49,51,154,156,175,300,301,],[-20,-43,-47,-44,-45,77,-19,-48,-18,-46,-49,-50,-58,-57,-51,-60,-59,]),'THIS':([16,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,51,53,54,58,62,71,74,75,76,78,79,80,81,82,84,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,119,121,122,123,125,126,127,129,130,145,146,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,226,227,228,230,231,232,235,237,247,248,250,255,258,264,265,268,273,276,279,280,281,283,284,285,286,292,294,295,300,301,305,306,313,315,320,322,324,332,335,337,339,341,353,355,371,372,],[49,-20,49,-43,49,-47,49,-44,-45,-89,-19,-48,-18,49,49,-46,-49,-50,49,49,127,127,127,-52,-56,-53,-62,-61,49,-90,-137,-55,49,-91,49,127,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-54,127,127,-38,-21,127,127,-24,127,127,127,-22,127,127,127,127,-95,-58,49,-57,49,49,49,49,49,49,49,49,49,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,49,49,49,49,-29,127,-28,-27,-39,-37,-36,127,127,127,49,-96,49,49,49,-4,49,127,127,127,127,-23,127,127,-26,-25,127,127,127,-60,-59,49,49,49,49,127,127,127,49,-131,49,127,127,49,-129,-126,-127,]),'ISA':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,91,-52,-56,-53,-62,-61,-90,-137,-55,-91,91,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,None,-72,-63,91,91,-71,-64,-75,-74,-78,-73,91,91,-79,-66,91,-80,-65,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,91,-60,-59,]),'ASSIGN':([19,20,21,29,31,32,34,36,38,39,40,41,42,44,45,48,49,50,51,53,55,56,57,59,61,72,73,74,75,76,78,79,81,82,84,87,93,106,111,113,115,116,122,127,128,135,147,150,151,154,156,170,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,221,227,228,230,231,232,233,238,240,241,242,250,265,270,276,281,285,286,290,291,293,300,301,311,314,321,],[-105,58,62,71,-97,-20,-43,-47,-44,-45,-89,-19,-98,-48,-18,-46,-49,86,-50,-99,112,-104,-100,-161,130,145,146,-52,-56,-53,-62,-61,-90,-137,-55,-91,-84,-82,-54,-101,-38,-21,-24,-22,-162,-163,247,-95,248,-58,-57,264,-51,-76,-88,-77,-81,-72,-63,-87,-85,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-83,-66,-67,-80,-65,-102,-29,-28,-27,-39,-37,-36,-108,-164,292,294,295,-96,-4,-103,315,-23,-26,-25,320,322,324,-60,-59,-86,337,341,]),'BREAK':([80,159,161,169,174,206,219,258,335,355,371,372,],[172,172,172,172,172,172,172,172,-131,-129,-126,-127,]),'LEQ':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,108,-52,-56,-53,-62,-61,-90,-137,-55,-91,108,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,-81,-72,-63,108,None,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,None,-80,-65,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,108,-60,-59,]),'FUTURE':([16,32,34,36,38,39,40,41,44,45,46,48,49,51,53,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[52,-20,-43,-47,-44,-45,-89,-19,-48,-18,52,-46,-49,-50,52,-52,-56,-53,-62,-61,52,-90,-137,-55,52,-91,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-54,-38,-21,-24,-22,-95,-58,52,-57,52,52,52,52,52,52,52,52,52,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,52,52,52,52,-29,-28,-27,-39,-37,-36,52,-96,52,52,52,-4,52,-23,-26,-25,-60,-59,52,52,52,52,52,-131,52,52,-129,-126,-127,]),'LET':([0,27,80,118,159,161,169,174,206,219,258,277,335,355,371,372,],[16,16,16,16,16,16,16,16,16,16,16,16,-131,-129,-126,-127,]),'LLE':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,98,-52,-56,-53,-62,-61,-90,-137,-55,-91,98,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,98,-72,None,98,98,-71,None,-75,-74,-78,-73,98,98,-79,None,98,-80,None,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,98,-60,-59,]),'NOT':([16,32,34,36,38,39,40,41,44,45,46,48,49,51,53,74,75,76,78,79,80,81,82,84,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,122,127,150,154,155,156,157,158,159,160,161,167,168,169,174,175,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,196,197,198,199,206,211,212,219,221,227,228,230,231,232,248,250,255,258,264,265,268,281,285,286,300,301,305,306,313,315,332,335,337,353,355,371,372,],[54,-20,-43,-47,-44,-45,-89,-19,-48,-18,54,-46,-49,-50,54,-52,-56,-53,-62,-61,54,-90,-137,-55,54,-91,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-54,-38,-21,-24,-22,-95,-58,54,-57,54,54,54,54,54,54,54,54,54,-51,-76,-88,-77,-81,-72,-63,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,54,54,54,54,-29,-28,-27,-39,-37,-36,54,-96,54,54,54,-4,54,-23,-26,-25,-60,-59,54,54,54,54,54,-131,54,54,-129,-126,-127,]),'CTX_SEMCLAIM':([80,118,159,161,169,174,206,219,258,277,335,355,371,372,],[174,219,174,174,174,174,174,174,174,219,-131,-129,-126,-127,]),'COMMA':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,111,115,116,122,127,131,132,134,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,226,227,228,230,231,232,233,250,265,281,285,286,300,301,317,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,95,-52,-56,-53,-62,-61,-90,-137,-55,-91,-54,-38,-21,-24,-22,235,-21,237,-95,-58,-57,-51,-76,-88,-77,-81,-72,-63,268,-68,-71,-64,-75,-74,-78,-73,-70,-69,-79,-66,-67,-80,-65,-29,283,-28,-27,-39,-37,-36,-108,-96,-4,-23,-26,-25,-60,-59,339,]),'TYPE':([0,6,27,118,277,],[18,24,18,18,18,]),'LLT':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,94,-52,-56,-53,-62,-61,-90,-137,-55,-91,94,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,94,-72,None,94,94,-71,None,-75,-74,-78,-73,94,94,-79,None,94,-80,None,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,94,-60,-59,]),'LGT':([32,34,36,38,39,40,41,44,45,48,49,51,53,74,75,76,78,79,81,82,84,87,106,111,115,116,122,127,150,154,156,175,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,221,227,228,230,231,232,250,265,281,285,286,299,300,301,],[-20,-43,-47,-44,-45,-89,-19,-48,-18,-46,-49,-50,110,-52,-56,-53,-62,-61,-90,-137,-55,-91,110,-54,-38,-21,-24,-22,-95,-58,-57,-51,-76,-88,-77,110,-72,None,110,110,-71,None,-75,-74,-78,-73,110,110,-79,None,110,-80,None,-29,-28,-27,-39,-37,-36,-96,-4,-23,-26,-25,110,-60,-59,]),'MATCH':([80,159,161,169,174,206,219,258,335,355,371,372,],[167,167,167,167,167,167,167,167,-131,-129,-126,-127,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_call':([16,46,80,86,155,157,158,159,160,161,167,168,169,174,206,211,212,219,255,258,264,305,306,313,315,332,337,353,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'statements_block':([43,50,52,133,144,176,234,245,246,256,262,298,302,323,325,330,331,340,342,344,350,354,359,365,367,],[81,85,87,236,244,267,287,296,297,303,309,328,329,343,345,348,349,358,360,361,363,366,368,369,370,]),'typedecl':([0,27,118,277,],[1,1,203,203,]),'elif_list':([335,347,371,],[355,362,372,]),'type_top':([121,273,],[223,312,]),'matchers_block_blocklist':([307,352,],[333,364,]),'funargs':([21,29,59,73,135,240,241,290,],[61,72,128,147,238,291,293,321,]),'module':([0,27,],[2,69,]),'static_pattern':([0,27,],[11,11,]),'_statements_block_blocklist':([80,169,258,],[171,263,304,]),'expr_tuple_list':([95,268,],[183,311,]),'typedeclname':([3,18,139,],[20,55,242,]),'inherit':([118,277,],[218,218,]),'typedecl_block':([58,112,120,201,295,327,],[117,200,222,269,326,346,]),'methoddecl':([0,27,118,277,],[5,5,204,204,]),'expr_call_list':([53,106,],[93,195,]),'isalist':([58,112,123,295,],[120,201,229,327,]),'pattern':([0,27,80,118,159,161,169,174,206,219,258,277,],[17,17,162,207,162,162,162,162,162,162,162,207,]),'type_app_list':([226,284,],[282,319,]),'expr_postfix':([16,33,35,37,46,47,53,54,80,86,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,155,157,158,159,160,161,167,168,169,174,206,211,212,219,248,255,258,264,268,305,306,313,315,332,337,353,],[40,74,75,76,40,84,40,111,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'typedecl_block_blocklist':([118,277,],[208,316,]),'value_3':([16,33,35,37,46,47,53,54,78,79,80,86,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,148,149,155,157,158,159,160,161,167,168,169,174,206,211,212,219,248,255,258,264,268,305,306,313,315,332,337,353,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'value_2':([16,33,35,37,46,47,53,54,78,79,80,86,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,148,149,155,157,158,159,160,161,167,168,169,174,206,211,212,219,248,255,258,264,268,305,306,313,315,332,337,353,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'expr_tuple':([16,46,80,86,155,157,158,159,160,161,167,168,169,174,206,211,212,219,255,258,264,305,306,313,315,332,337,353,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'_statements_block':([43,50,52,133,144,176,234,245,246,256,262,298,302,323,325,330,331,340,342,344,350,354,359,365,367,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'type_tuple_list':([283,339,],[318,357,]),'statement':([80,159,161,169,174,206,219,258,],[163,254,257,163,266,271,278,163,]),'initializer_pair':([77,152,],[152,152,]),'import':([0,27,],[10,10,]),'type_postfix':([58,62,71,89,112,114,119,121,123,125,126,129,130,145,146,226,227,228,235,237,247,273,276,279,280,283,284,292,294,295,320,322,324,339,341,],[122,122,122,122,122,122,221,122,122,231,232,122,122,122,122,122,285,286,122,122,122,122,122,285,286,122,122,122,122,122,122,122,122,122,122,]),'type':([58,62,71,89,112,114,121,123,129,130,145,146,226,235,237,247,273,276,283,284,292,294,295,320,322,324,339,341,],[123,134,134,178,123,202,226,123,233,134,134,134,284,134,134,134,226,314,317,284,134,134,123,134,134,134,317,134,]),'empty':([0,27,118,277,],[8,8,209,209,]),'typedident':([21,29,59,62,63,71,73,130,135,145,146,164,165,235,237,240,241,247,290,292,294,320,322,324,341,],[59,59,59,131,135,131,59,131,59,131,131,259,260,131,131,59,59,131,59,131,131,131,131,131,131,]),'funretvals':([62,71,130,145,146,235,237,247,292,294,320,322,324,341,],[133,144,234,245,246,288,289,298,323,325,340,342,344,359,]),'idents':([70,118,141,277,],[142,210,243,210,]),'matcher':([307,352,],[334,334,]),'initializer_list':([77,152,],[153,249,]),'type_app':([121,273,],[224,224,]),'toplevel':([0,27,],[9,9,]),'type_ref':([58,62,71,89,112,114,121,123,124,129,130,145,146,226,235,237,247,273,276,283,284,292,294,295,320,322,324,339,341,],[115,115,115,115,115,115,115,115,230,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'typedeclname_list':([19,22,23,24,57,64,202,],[56,65,66,67,113,136,270,]),'matchers_block':([261,],[308,]),'modname':([7,12,68,],[25,28,140,]),'statement_witheol':([80,169,258,],[169,169,169,]),'typedecl_statement':([118,277,],[214,214,]),'fieldchoicedecl':([118,277,],[205,205,]),'intfdecl':([0,27,118,277,],[13,13,215,215,]),'expr_top':([16,46,80,86,155,157,158,159,160,161,167,168,169,174,206,211,212,219,255,258,264,305,306,313,315,332,337,353,],[50,83,170,176,251,252,253,170,256,170,261,262,170,170,170,274,275,170,302,170,310,330,331,336,338,350,356,365,]),'choicedecl':([118,277,],[216,216,]),'fundecl':([0,27,118,277,],[14,14,217,217,]),'value':([16,33,35,37,46,47,53,54,78,79,80,86,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,148,149,155,157,158,159,160,161,167,168,169,174,206,211,212,219,248,255,258,264,268,305,306,313,315,332,337,353,],[51,51,51,51,51,51,51,51,154,156,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,154,156,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'fielddecl':([118,277,],[220,220,]),'type_tuple':([121,273,],[225,225,]),'expr':([16,46,53,80,86,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,155,157,158,159,160,161,167,168,169,174,206,211,212,219,248,255,258,264,268,305,306,313,315,332,337,353,],[53,53,106,53,53,177,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,106,196,197,198,199,53,53,53,53,53,53,53,53,53,53,53,53,53,53,299,53,53,53,184,53,53,53,53,53,53,53,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('fieldchoicedecl -> empty','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',174),
  ('fieldchoicedecl -> choicedecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',175),
  ('fieldchoicedecl -> fielddecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',176),
  ('_statements_block -> SOB _statements_block_blocklist EOB','_statements_block',3,'p__statements_block','/home/e/nc/n/bootstrap/parser.py',187),
  ('matchers_block -> SOB matchers_block_blocklist EOB','matchers_block',3,'p_matchers_block','/home/e/nc/n/bootstrap/parser.py',187),
  ('typedecl_block -> SOB typedecl_block_blocklist EOB','typedecl_block',3,'p_typedecl_block','/home/e/nc/n/bootstrap/parser.py',187),
  ('_statements_block_blocklist -> statement EOL','_statements_block_blocklist',2,'p__statements_block_blocklist','/home/e/nc/n/bootstrap/parser.py',192),
  ('_statements_block_blocklist -> statement EOL _statements_block_blocklist','_statements_block_blocklist',3,'p__statements_block_blocklist','/home/e/nc/n/bootstrap/parser.py',193),
  ('matchers_block_blocklist -> matcher EOL','matchers_block_blocklist',2,'p_matchers_block_blocklist','/home/e/nc/n/bootstrap/parser.py',192),
  ('matchers_block_blocklist -> matcher EOL matchers_block_blocklist','matchers_block_blocklist',3,'p_matchers_block_blocklist','/home/e/nc/n/bootstrap/parser.py',193),
  ('typedecl_block_blocklist -> typedecl_statement EOL','typedecl_block_blocklist',2,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/parser.py',192),
  ('typedecl_block_blocklist -> typedecl_statement EOL typedecl_block_blocklist','typedecl_block_blocklist',3,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/parser.py',193),
  ('_statements_block_blocklist -> statement_witheol','_statements_block_blocklist',1,'p__statements_block_blocklist_1','/home/e/nc/n/bootstrap/parser.py',206),
  ('_statements_block_blocklist -> statement_witheol _statements_block_blocklist','_statements_block_blocklist',2,'p__statements_block_blocklist_1','/home/e/nc/n/bootstrap/parser.py',207),
  ('empty -> <empty>','empty',0,'p_empty','/home/e/nc/n/bootstrap/parser.py',241),
  ('idents -> IDENT','idents',1,'p_idents','/home/e/nc/n/bootstrap/parser.py',245),
  ('idents -> IDENT idents','idents',2,'p_idents','/home/e/nc/n/bootstrap/parser.py',246),
  ('value_3 -> IDENT','value_3',1,'p_value_ident','/home/e/nc/n/bootstrap/parser.py',253),
  ('value_2 -> value_3','value_2',1,'p_value_2','/home/e/nc/n/bootstrap/parser.py',258),
  ('value -> value_2','value',1,'p_value','/home/e/nc/n/bootstrap/parser.py',262),
  ('type_postfix -> IDENT','type_postfix',1,'p_type_name','/home/e/nc/n/bootstrap/parser.py',266),
  ('type_postfix -> THIS','type_postfix',1,'p_type_this','/home/e/nc/n/bootstrap/parser.py',270),
  ('type_postfix -> ( type_top )','type_postfix',3,'p_type_postfix_top','/home/e/nc/n/bootstrap/parser.py',274),
  ('type -> type_postfix','type',1,'p_type_postfix','/home/e/nc/n/bootstrap/parser.py',278),
  ('type_postfix -> type_postfix DOT type_postfix','type_postfix',3,'p_type_field','/home/e/nc/n/bootstrap/parser.py',282),
  ('type_postfix -> type_postfix BANG type_postfix','type_postfix',3,'p_type_field','/home/e/nc/n/bootstrap/parser.py',283),
  ('type -> type_postfix DOT','type',2,'p_type_deref','/home/e/nc/n/bootstrap/parser.py',287),
  ('type -> type_postfix BANG','type',2,'p_type_deref','/home/e/nc/n/bootstrap/parser.py',288),
  ('type_postfix -> SLICEBRAKETS type_postfix','type_postfix',2,'p_type_slice','/home/e/nc/n/bootstrap/parser.py',292),
  ('type_tuple_list -> type','type_tuple_list',1,'p_type_tuple_list','/home/e/nc/n/bootstrap/parser.py',296),
  ('type_tuple_list -> type COMMA type_tuple_list','type_tuple_list',3,'p_type_tuple_list','/home/e/nc/n/bootstrap/parser.py',297),
  ('type_tuple -> type COMMA type_tuple_list','type_tuple',3,'p_type_tuple_only','/home/e/nc/n/bootstrap/parser.py',304),
  ('type_app_list -> type','type_app_list',1,'p_type_app_list','/home/e/nc/n/bootstrap/parser.py',308),
  ('type_app_list -> type type_app_list','type_app_list',2,'p_type_app_list','/home/e/nc/n/bootstrap/parser.py',309),
  ('type_app -> type type_app_list','type_app',2,'p_type_app_only','/home/e/nc/n/bootstrap/parser.py',316),
  ('type_ref -> REFDOT type_postfix','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/parser.py',320),
  ('type_ref -> REFBANG type_postfix','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/parser.py',321),
  ('type -> type_ref','type',1,'p_type_ref','/home/e/nc/n/bootstrap/parser.py',329),
  ('type -> ? type_ref','type',2,'p_type_nullable','/home/e/nc/n/bootstrap/parser.py',333),
  ('type_top -> type_app','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',338),
  ('type_top -> type_tuple','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',339),
  ('type_top -> type','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',340),
  ('expr_postfix -> NUMBER','expr_postfix',1,'p_expr_postfix_literal_number','/home/e/nc/n/bootstrap/parser.py',344),
  ('expr_postfix -> STRING','expr_postfix',1,'p_expr_postfix_string','/home/e/nc/n/bootstrap/parser.py',348),
  ('expr_postfix -> TRUE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/parser.py',352),
  ('expr_postfix -> FALSE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/parser.py',353),
  ('expr_postfix -> NULL','expr_postfix',1,'p_expr_postfix_null','/home/e/nc/n/bootstrap/parser.py',360),
  ('expr_postfix -> SIZEOF','expr_postfix',1,'p_expr_postfix_sizeof','/home/e/nc/n/bootstrap/parser.py',364),
  ('expr_postfix -> THIS','expr_postfix',1,'p_expr_postfix_this','/home/e/nc/n/bootstrap/parser.py',368),
  ('expr_postfix -> value','expr_postfix',1,'p_expr_postfix_value','/home/e/nc/n/bootstrap/parser.py',372),
  ('expr_postfix -> ( expr_top )','expr_postfix',3,'p_expr_postfix_group','/home/e/nc/n/bootstrap/parser.py',376),
  ('expr -> NEG expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',380),
  ('expr -> UBWNOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',381),
  ('expr -> NOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',382),
  ('expr -> REFDOT expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/parser.py',386),
  ('expr -> REFBANG expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/parser.py',387),
  ('expr_postfix -> expr_postfix DOT value','expr_postfix',3,'p_expr_field','/home/e/nc/n/bootstrap/parser.py',391),
  ('expr_postfix -> expr_postfix BANG value','expr_postfix',3,'p_expr_field','/home/e/nc/n/bootstrap/parser.py',392),
  ('expr_postfix -> expr_postfix DOT [ expr_top ]','expr_postfix',5,'p_expr_element','/home/e/nc/n/bootstrap/parser.py',398),
  ('expr_postfix -> expr_postfix BANG [ expr_top ]','expr_postfix',5,'p_expr_element','/home/e/nc/n/bootstrap/parser.py',399),
  ('expr -> expr_postfix DOT','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/parser.py',403),
  ('expr -> expr_postfix BANG','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/parser.py',404),
  ('expr -> expr LLT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',408),
  ('expr -> expr LLE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',409),
  ('expr -> expr LGT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',410),
  ('expr -> expr LGE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',411),
  ('expr -> expr LEQ expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',412),
  ('expr -> expr LNE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',413),
  ('expr -> expr AND expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/parser.py',417),
  ('expr -> expr OR expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/parser.py',418),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',422),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',423),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',424),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',425),
  ('expr -> expr MODULO expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',426),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',427),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',428),
  ('expr -> expr BWAND expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',429),
  ('expr -> expr BWOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',430),
  ('expr -> expr BWXOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',431),
  ('expr -> expr ISA expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',432),
  ('expr_call_list -> expr','expr_call_list',1,'p_expr_call_list','/home/e/nc/n/bootstrap/parser.py',436),
  ('expr_call_list -> expr expr_call_list','expr_call_list',2,'p_expr_call_list','/home/e/nc/n/bootstrap/parser.py',437),
  ('expr_call -> expr expr_call_list','expr_call',2,'p_expr_call_only','/home/e/nc/n/bootstrap/parser.py',445),
  ('expr_tuple_list -> expr','expr_tuple_list',1,'p_expr_tuple_list','/home/e/nc/n/bootstrap/parser.py',450),
  ('expr_tuple_list -> expr COMMA expr_tuple_list','expr_tuple_list',3,'p_expr_tuple_list','/home/e/nc/n/bootstrap/parser.py',451),
  ('expr_tuple -> expr COMMA expr_tuple_list','expr_tuple',3,'p_expr_tuple_only','/home/e/nc/n/bootstrap/parser.py',458),
  ('expr -> expr COLON type','expr',3,'p_expr_constrained','/home/e/nc/n/bootstrap/parser.py',463),
  ('expr -> expr_postfix','expr',1,'p_expr_postfix','/home/e/nc/n/bootstrap/parser.py',467),
  ('expr -> BLOCK statements_block','expr',2,'p_expr_block','/home/e/nc/n/bootstrap/parser.py',471),
  ('expr -> FUTURE statements_block','expr',2,'p_expr_future','/home/e/nc/n/bootstrap/parser.py',474),
  ('initializer_pair -> IDENT ASSIGN expr','initializer_pair',3,'p_expr_initializer_pair','/home/e/nc/n/bootstrap/parser.py',477),
  ('initializer_list -> initializer_pair','initializer_list',1,'p_expr_initializer_list','/home/e/nc/n/bootstrap/parser.py',481),
  ('initializer_list -> initializer_pair initializer_list','initializer_list',2,'p_expr_initializer_list','/home/e/nc/n/bootstrap/parser.py',482),
  ('expr -> expr_postfix LINIT RINIT','expr',3,'p_expr_initializer','/home/e/nc/n/bootstrap/parser.py',489),
  ('expr -> expr_postfix LINIT initializer_list RINIT','expr',4,'p_expr_initializer','/home/e/nc/n/bootstrap/parser.py',490),
  ('expr_top -> expr_call','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',497),
  ('expr_top -> expr_tuple','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',498),
  ('expr_top -> expr','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',499),
  ('typedeclname_list -> IDENT','typedeclname_list',1,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',503),
  ('typedeclname_list -> IDENT typedeclname_list','typedeclname_list',2,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',504),
  ('typedeclname_list -> IDENT COLON type','typedeclname_list',3,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',505),
  ('typedeclname_list -> IDENT COLON type typedeclname_list','typedeclname_list',4,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',506),
  ('typedeclname -> IDENT typedeclname_list','typedeclname',2,'p_typedeclname_generic','/home/e/nc/n/bootstrap/parser.py',517),
  ('typedeclname -> IDENT','typedeclname',1,'p_typedeclname','/home/e/nc/n/bootstrap/parser.py',521),
  ('isalist -> type','isalist',1,'p_isalist','/home/e/nc/n/bootstrap/parser.py',525),
  ('isalist -> type isalist','isalist',2,'p_isalist','/home/e/nc/n/bootstrap/parser.py',526),
  ('typedident -> IDENT COLON type','typedident',3,'p_typedident','/home/e/nc/n/bootstrap/parser.py',533),
  ('pattern -> LET expr_top','pattern',2,'p_pattern','/home/e/nc/n/bootstrap/parser.py',537),
  ('pattern -> LET expr_top ASSIGN expr_top','pattern',4,'p_pattern_expr','/home/e/nc/n/bootstrap/parser.py',541),
  ('pattern -> LET expr_top statements_block','pattern',3,'p_pattern_mutating','/home/e/nc/n/bootstrap/parser.py',545),
  ('pattern -> LET expr_top ASSIGN expr_top statements_block','pattern',5,'p_pattern_expr_mutating','/home/e/nc/n/bootstrap/parser.py',551),
  ('static_pattern -> pattern','static_pattern',1,'p_static_pattern','/home/e/nc/n/bootstrap/parser.py',557),
  ('fielddecl -> idents COLON type_top','fielddecl',3,'p_fielddecl','/home/e/nc/n/bootstrap/parser.py',562),
  ('statement -> PASS','statement',1,'p_statement_pass','/home/e/nc/n/bootstrap/parser.py',566),
  ('statement -> pattern','statement',1,'p_statement_pattern','/home/e/nc/n/bootstrap/parser.py',570),
  ('statement -> expr_top ASSIGN expr_top','statement',3,'p_statement_assign','/home/e/nc/n/bootstrap/parser.py',574),
  ('statement -> expr_top','statement',1,'p_statement_expr','/home/e/nc/n/bootstrap/parser.py',583),
  ('statement -> RETURN','statement',1,'p_statement_return','/home/e/nc/n/bootstrap/parser.py',587),
  ('statement -> RETURN expr_top','statement',2,'p_statement_return','/home/e/nc/n/bootstrap/parser.py',588),
  ('statement -> WHILE expr_top statements_block','statement',3,'p_statement_while','/home/e/nc/n/bootstrap/parser.py',595),
  ('statement -> FOR typedident IN expr_top statements_block','statement',5,'p_statement_for','/home/e/nc/n/bootstrap/parser.py',599),
  ('statement -> PFOR typedident IN expr_top statements_block','statement',5,'p_statement_pfor','/home/e/nc/n/bootstrap/parser.py',603),
  ('statement -> BREAK','statement',1,'p_statement_break','/home/e/nc/n/bootstrap/parser.py',607),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','/home/e/nc/n/bootstrap/parser.py',611),
  ('elif_list -> ELIF expr_top statements_block EOL','elif_list',4,'p_statement_elif_list','/home/e/nc/n/bootstrap/parser.py',615),
  ('elif_list -> ELIF expr_top statements_block EOL elif_list','elif_list',5,'p_statement_elif_list','/home/e/nc/n/bootstrap/parser.py',616),
  ('statement -> IF expr_top statements_block EOL elif_list ELSE statements_block','statement',7,'p_statement_if_elif_else','/home/e/nc/n/bootstrap/parser.py',623),
  ('statement_witheol -> IF expr_top statements_block EOL elif_list','statement_witheol',5,'p_statement_if_elif','/home/e/nc/n/bootstrap/parser.py',627),
  ('statement -> IF expr_top statements_block EOL ELSE statements_block','statement',6,'p_statement_if_else','/home/e/nc/n/bootstrap/parser.py',631),
  ('statement_witheol -> IF expr_top statements_block EOL','statement_witheol',4,'p_statement_if','/home/e/nc/n/bootstrap/parser.py',635),
  ('matcher -> BWOR expr_top statements_block','matcher',3,'p_matchers','/home/e/nc/n/bootstrap/parser.py',639),
  ('statement -> MATCH expr_top matchers_block','statement',3,'p_match','/home/e/nc/n/bootstrap/parser.py',643),
  ('statement -> CTX_ASSERT statement','statement',2,'p_statement_assert','/home/e/nc/n/bootstrap/parser.py',647),
  ('statement -> CTX_SEMASSERT statement','statement',2,'p_statement_semanticassert','/home/e/nc/n/bootstrap/parser.py',651),
  ('statement -> CTX_SEMCLAIM statement','statement',2,'p_statement_semanticclaim','/home/e/nc/n/bootstrap/parser.py',655),
  ('statements_block -> _statements_block','statements_block',1,'p_statements_block','/home/e/nc/n/bootstrap/parser.py',659),
  ('choicedecl -> BWOR IDENT','choicedecl',2,'p_choicedecl','/home/e/nc/n/bootstrap/parser.py',663),
  ('choicedecl -> BWOR IDENT ASSIGN expr_top','choicedecl',4,'p_choicedecl_value','/home/e/nc/n/bootstrap/parser.py',667),
  ('choicedecl -> BWOR IDENT type','choicedecl',3,'p_choicedecl_type','/home/e/nc/n/bootstrap/parser.py',671),
  ('choicedecl -> BWOR IDENT type ASSIGN expr_top','choicedecl',5,'p_choicedecl_type_value','/home/e/nc/n/bootstrap/parser.py',675),
  ('typedecl_statement -> inherit','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',679),
  ('typedecl_statement -> fieldchoicedecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',680),
  ('typedecl_statement -> typedecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',681),
  ('typedecl_statement -> fundecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',682),
  ('typedecl_statement -> methoddecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',683),
  ('typedecl_statement -> intfdecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',684),
  ('typedecl_statement -> pattern','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',685),
  ('typedecl_statement -> CTX_SEMASSERT statement','typedecl_statement',2,'p_typedecl_semanticassert','/home/e/nc/n/bootstrap/parser.py',689),
  ('typedecl_statement -> CTX_SEMCLAIM statement','typedecl_statement',2,'p_typedecl_semanticclaim','/home/e/nc/n/bootstrap/parser.py',693),
  ('inherit -> INHERIT expr_top','inherit',2,'p_inherit','/home/e/nc/n/bootstrap/parser.py',697),
  ('inherit -> FROM expr_top INHERIT expr_top','inherit',4,'p_inherit','/home/e/nc/n/bootstrap/parser.py',698),
  ('typedecl -> TYPE typedeclname ASSIGN','typedecl',3,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',726),
  ('typedecl -> TYPE typedeclname ASSIGN isalist','typedecl',4,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',727),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN','typedecl',6,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',728),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN isalist','typedecl',7,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',729),
  ('typedecl -> TYPE typedeclname ASSIGN typedecl_block','typedecl',4,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',749),
  ('typedecl -> TYPE typedeclname ASSIGN isalist typedecl_block','typedecl',5,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',750),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN typedecl_block','typedecl',7,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',751),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN isalist typedecl_block','typedecl',8,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',752),
  ('funargs -> typedident','funargs',1,'p_funargs','/home/e/nc/n/bootstrap/parser.py',778),
  ('funargs -> typedident funargs','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/parser.py',779),
  ('funargs -> ? typedident','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/parser.py',780),
  ('funargs -> ? typedident funargs','funargs',3,'p_funargs','/home/e/nc/n/bootstrap/parser.py',781),
  ('funretvals -> typedident','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',794),
  ('funretvals -> type','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',795),
  ('funretvals -> typedident COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',796),
  ('funretvals -> type COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',797),
  ('fundecl -> FUN IDENT ASSIGN funretvals','fundecl',4,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',804),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals','fundecl',5,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',805),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals','fundecl',7,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',806),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals','fundecl',8,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',807),
  ('fundecl -> FUN IDENT ASSIGN funretvals statements_block','fundecl',5,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',818),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals statements_block','fundecl',6,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',819),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals statements_block','fundecl',8,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',820),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','fundecl',9,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',821),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals','methoddecl',4,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',832),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals','methoddecl',5,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',833),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals','methoddecl',7,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',834),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals','methoddecl',8,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',835),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals statements_block','methoddecl',5,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',846),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',847),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',8,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',848),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',849),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals','methoddecl',5,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',860),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals','methoddecl',6,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',861),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals','methoddecl',8,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',862),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals','methoddecl',9,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',863),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',874),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals statements_block','methoddecl',7,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',875),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',876),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',10,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',877),
  ('intfdecl -> INTF typedeclname ASSIGN typedecl_block','intfdecl',4,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',888),
  ('intfdecl -> INTF typedeclname ASSIGN isalist typedecl_block','intfdecl',5,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',889),
  ('modname -> IDENT','modname',1,'p_modname','/home/e/nc/n/bootstrap/parser.py',902),
  ('modname -> IDENT DOT modname','modname',3,'p_modname','/home/e/nc/n/bootstrap/parser.py',903),
  ('import -> IMPORT modname','import',2,'p_import','/home/e/nc/n/bootstrap/parser.py',910),
  ('import -> FROM modname IMPORT TIMES','import',4,'p_import','/home/e/nc/n/bootstrap/parser.py',911),
  ('import -> FROM modname IMPORT idents','import',4,'p_import','/home/e/nc/n/bootstrap/parser.py',912),
  ('toplevel -> import','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',923),
  ('toplevel -> typedecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',924),
  ('toplevel -> fundecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',925),
  ('toplevel -> methoddecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',926),
  ('toplevel -> intfdecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',927),
  ('toplevel -> static_pattern','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',928),
  ('module -> empty','module',1,'p_module','/home/e/nc/n/bootstrap/parser.py',932),
  ('module -> toplevel EOL module','module',3,'p_module','/home/e/nc/n/bootstrap/parser.py',933),
]
