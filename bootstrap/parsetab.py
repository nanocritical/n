
# bootstrap/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xbc\x1c\xf0\xb3\x08^\xa9\xac\x975\xfe\xb9\x10\xa9\x82\xf3'
    
_lr_action_items = {'EOB':([176,178,216,267,272,286,314,326,345,347,365,368,377,384,385,],[-13,274,281,-7,-14,-11,-8,-12,364,-133,-9,-131,-10,-128,-129,]),'ELIF':([347,360,384,],[366,366,366,]),'RSHIFT':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,93,-55,-52,-63,-62,93,-91,-139,-54,-92,93,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,None,-89,None,93,-73,93,93,93,-72,93,-76,-75,93,-74,93,93,93,93,93,93,93,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,93,-61,-60,]),'IN':([120,121,127,132,229,235,236,238,239,240,241,268,269,290,294,295,],[-38,-21,-24,-22,-29,-28,-27,-39,-37,-36,-110,315,316,-23,-26,-25,]),'NUMBER':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[34,-20,-43,34,-45,34,-44,-47,34,-90,-19,34,-48,-18,34,-46,-49,-50,34,34,-55,-52,-63,-62,34,-91,-139,34,34,-54,34,-92,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-53,-38,-21,-24,-22,-51,-96,-59,34,-58,34,34,34,34,34,34,34,34,34,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,34,34,34,34,-29,-28,-27,-39,-37,-36,34,-97,34,34,34,-4,34,-23,-26,-25,-61,-60,34,34,34,34,34,-133,34,34,-131,-128,-129,]),'REFBANG':([16,33,34,36,38,39,40,41,42,43,46,47,48,50,51,53,55,60,64,74,77,78,81,82,84,85,86,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,126,127,128,129,132,134,135,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,238,239,240,243,245,256,257,259,264,267,273,274,277,282,285,290,292,293,294,295,301,302,304,305,310,311,315,316,323,325,330,332,336,344,347,349,351,353,366,368,384,385,],[35,-20,-43,-45,-44,-47,35,-90,-19,35,87,-48,-18,-46,-49,-50,35,130,130,130,-55,-52,-63,-62,35,-91,-139,-54,35,-92,35,130,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-53,130,130,-38,-21,130,-24,130,130,-22,130,130,130,130,-51,-96,-59,35,-58,35,35,35,35,35,35,35,35,35,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,35,35,35,35,-29,130,-28,-27,-39,-37,-36,130,130,130,35,-97,35,35,35,-4,35,130,130,-23,130,130,-26,-25,130,130,130,130,-61,-60,35,35,35,35,130,130,130,35,-133,35,130,130,35,-131,-128,-129,]),'EOL':([1,5,9,10,11,13,14,17,26,27,32,33,34,36,38,39,41,42,44,47,48,50,51,52,53,55,60,77,78,81,82,83,85,86,89,90,92,98,111,116,117,120,121,122,123,125,127,128,132,136,137,138,139,146,147,148,149,150,156,157,161,163,165,169,170,173,177,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,215,217,222,223,224,225,226,228,229,230,232,233,234,235,236,237,238,239,240,241,242,244,252,253,254,255,259,262,263,266,274,275,276,278,280,281,283,285,286,287,290,291,293,294,295,296,297,298,302,305,306,307,308,310,311,313,318,319,320,321,322,324,327,328,329,333,334,335,337,338,339,340,341,346,348,350,352,354,355,356,357,358,359,361,362,364,369,370,371,372,373,374,376,379,381,382,383,],[-209,-211,28,-208,-213,-212,-210,-115,-205,-203,-98,-20,-43,-45,-44,-47,-90,-19,-99,-48,-18,-46,-49,-111,-50,-100,-195,-55,-52,-63,-62,-101,-91,-139,-54,-113,-92,-85,-83,-53,-155,-38,-21,-199,-15,-196,-24,-108,-22,-167,-21,-171,-168,-204,-16,-207,-206,-179,-51,-96,-59,-58,-121,-118,267,-117,-120,-126,-127,-57,-56,-112,-77,-89,-78,-82,-73,-64,-88,-86,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-84,-67,-68,-81,-66,-159,-156,-146,-148,-145,-150,-1,286,-149,-2,-147,-144,-3,-29,-200,-40,-41,-42,-28,-27,-109,-39,-37,-36,-110,-172,-175,-17,-183,-180,-187,-97,-122,-136,-137,-4,-138,-114,-160,-151,-6,-153,-140,-15,-152,-23,-35,-33,-26,-25,-176,-169,-170,-197,-157,-184,-191,-188,-61,-60,-123,-135,347,-119,-87,-116,-142,-30,-32,-34,-181,-201,-198,-173,-161,-158,-192,360,365,-154,-141,-189,-182,-185,-202,-174,-177,-162,-124,-125,-5,-143,-31,-193,-190,-186,-178,-134,-132,-194,384,-130,]),'WHILE':([84,166,168,176,181,214,227,267,347,368,384,385,],[167,167,167,167,167,167,167,167,-133,-131,-128,-129,]),'IDENT':([3,4,7,12,15,16,18,19,21,22,23,24,25,30,31,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,59,60,61,64,65,66,71,73,74,76,77,78,80,81,82,84,85,86,87,88,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,124,126,127,128,130,131,132,134,135,140,142,143,144,145,147,151,152,154,155,156,157,159,161,162,163,164,165,166,167,168,171,172,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,210,214,219,220,221,227,229,234,235,236,238,239,240,241,243,245,247,248,250,256,257,259,264,267,273,274,277,282,285,286,288,289,290,292,293,294,295,299,301,302,304,305,309,310,311,315,316,323,325,330,332,336,344,347,349,351,353,366,368,384,385,],[19,21,27,27,30,48,19,59,62,59,59,59,59,62,76,-20,-43,48,-45,48,-44,-47,48,-90,-19,48,-48,-18,48,-46,-49,-50,48,48,59,121,62,137,62,59,27,147,137,62,-55,-52,158,48,48,48,-91,-139,48,48,-54,48,-92,48,121,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-53,121,121,-38,-21,147,121,121,-24,121,121,121,-22,121,137,62,248,19,250,19,147,137,137,48,48,-51,-96,158,-59,48,-58,48,48,48,48,48,62,62,48,48,48,48,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,59,48,48,48,285,48,-29,121,121,121,-39,-37,-36,-110,137,137,299,62,62,137,48,-97,48,48,48,-4,48,121,121,147,121,121,-23,121,121,-26,-25,62,137,121,137,121,-93,-61,-60,48,48,48,48,137,137,137,48,-133,48,121,137,48,-131,-128,-129,]),'LSHIFT':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,95,-55,-52,-63,-62,95,-91,-139,-54,-92,95,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,None,-89,None,95,-73,95,95,95,-72,95,-76,-75,95,-74,95,95,95,95,95,95,95,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,95,-61,-60,]),'FUN':([0,6,28,123,286,],[4,24,4,4,4,]),'RETURN':([84,166,168,176,181,214,227,267,347,368,384,385,],[165,165,165,165,165,165,165,165,-133,-131,-128,-129,]),'SIZEOF':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[47,-20,-43,47,-45,47,-44,-47,47,-90,-19,47,-48,-18,47,-46,-49,-50,47,47,-55,-52,-63,-62,47,-91,-139,47,47,-54,47,-92,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-53,-38,-21,-24,-22,-51,-96,-59,47,-58,47,47,47,47,47,47,47,47,47,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,47,47,47,47,-29,-28,-27,-39,-37,-36,47,-97,47,47,47,-4,47,-23,-26,-25,-61,-60,47,47,47,47,47,-133,47,47,-131,-128,-129,]),'NULL':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[39,-20,-43,39,-45,39,-44,-47,39,-90,-19,39,-48,-18,39,-46,-49,-50,39,39,-55,-52,-63,-62,39,-91,-139,39,39,-54,39,-92,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-53,-38,-21,-24,-22,-51,-96,-59,39,-58,39,39,39,39,39,39,39,39,39,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,39,39,39,39,-29,-28,-27,-39,-37,-36,39,-97,39,39,39,-4,39,-23,-26,-25,-61,-60,39,39,39,39,39,-133,39,39,-131,-128,-129,]),'TRUE':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[36,-20,-43,36,-45,36,-44,-47,36,-90,-19,36,-48,-18,36,-46,-49,-50,36,36,-55,-52,-63,-62,36,-91,-139,36,36,-54,36,-92,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-53,-38,-21,-24,-22,-51,-96,-59,36,-58,36,36,36,36,36,36,36,36,36,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,36,36,36,36,-29,-28,-27,-39,-37,-36,36,-97,36,36,36,-4,36,-23,-26,-25,-61,-60,36,36,36,36,36,-133,36,36,-131,-128,-129,]),'UBWNOT':([16,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,77,78,81,82,84,85,86,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[37,-20,-43,-45,-44,-47,37,-90,-19,37,-48,-18,-46,-49,-50,37,-55,-52,-63,-62,37,-91,-139,-54,37,-92,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-53,-38,-21,-24,-22,-51,-96,-59,37,-58,37,37,37,37,37,37,37,37,37,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,37,37,37,37,-29,-28,-27,-39,-37,-36,37,-97,37,37,37,-4,37,-23,-26,-25,-61,-60,37,37,37,37,37,-133,37,37,-131,-128,-129,]),'BLOCK':([16,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,77,78,81,82,84,85,86,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[45,-20,-43,-45,-44,-47,45,-90,-19,45,-48,-18,-46,-49,-50,45,-55,-52,-63,-62,45,-91,-139,-54,45,-92,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-53,-38,-21,-24,-22,-51,-96,-59,45,-58,45,45,45,45,45,45,45,45,45,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,45,45,45,45,-29,-28,-27,-39,-37,-36,45,-97,45,45,45,-4,45,-23,-26,-25,-61,-60,45,45,45,45,45,-133,45,45,-131,-128,-129,]),'DIVIDE':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,105,-55,-52,-63,-62,105,-91,-139,-54,-92,105,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,105,-89,105,105,105,105,105,105,105,105,None,None,105,-74,105,105,105,105,105,105,105,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,105,-61,-60,]),'SOB':([32,33,34,36,38,39,41,42,44,45,47,48,50,51,52,53,54,55,60,77,78,81,82,83,85,86,89,92,98,111,116,117,120,121,125,127,128,132,136,137,138,139,150,156,157,161,163,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,229,235,236,237,238,239,240,241,242,254,255,259,265,270,271,274,290,294,295,297,298,302,305,308,310,311,312,321,333,335,337,339,342,343,352,354,357,363,367,372,378,380,],[-98,-20,-43,-45,-44,-47,-90,-19,-99,84,-48,-18,-46,-49,84,-50,84,-100,123,-55,-52,-63,-62,-101,-91,-139,-54,-92,-85,-83,-53,123,-38,-21,123,-24,-108,-22,-167,-21,84,-168,84,-51,-96,-59,-58,-57,-56,84,-77,-89,-78,-82,-73,-64,-88,-86,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-84,-67,-68,-81,-66,123,-29,-28,-27,-109,-39,-37,-36,-110,84,84,84,-97,84,317,84,-4,-23,-26,-25,-169,-170,123,123,84,-61,-60,84,-87,84,123,84,123,84,84,84,84,84,84,84,84,84,84,]),'SLICEBRAKETS':([60,64,74,94,117,119,120,121,124,126,127,128,130,131,132,134,135,151,152,229,234,235,236,238,239,240,243,245,256,282,285,288,289,290,292,293,294,295,301,302,304,305,330,332,336,351,353,],[124,124,124,124,124,124,-38,-21,124,124,-24,124,124,124,-22,124,124,124,124,-29,124,-28,-27,-39,-37,-36,124,124,124,124,124,124,124,-23,124,124,-26,-25,124,124,124,124,124,124,124,124,124,]),'LGE':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,112,-55,-52,-63,-62,112,-91,-139,-54,-92,112,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,112,-73,None,112,112,-72,None,-76,-75,-79,-74,112,112,-80,None,112,-81,None,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,112,-61,-60,]),')':([32,33,34,36,38,39,41,42,44,47,48,50,51,53,55,59,67,68,69,70,77,78,79,81,82,83,85,86,89,92,98,111,116,118,120,121,127,132,141,156,157,161,163,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,229,231,232,233,234,235,236,238,239,240,259,274,279,290,291,293,294,295,310,311,321,327,328,329,370,],[-98,-20,-43,-45,-44,-47,-90,-19,-99,-48,-18,-46,-49,-50,-100,-102,142,143,144,145,-55,-52,156,-63,-62,-101,-91,-139,-54,-92,-85,-83,-53,-103,-38,-21,-24,-22,247,-51,-96,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,-88,-86,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-84,-67,-68,-81,-66,-104,-29,290,-40,-41,-42,-28,-27,-39,-37,-36,-97,-4,-105,-23,-35,-33,-26,-25,-61,-60,-87,-30,-32,-34,-31,]),'(':([0,16,28,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,60,64,74,77,78,81,82,84,85,86,87,88,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,124,126,127,128,130,131,132,134,135,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,238,239,240,243,245,256,257,259,264,267,273,274,277,282,285,286,288,289,290,292,293,294,295,301,302,304,305,310,311,315,316,323,325,330,332,336,344,347,349,351,353,366,368,384,385,],[6,40,6,-20,-43,40,-45,40,-44,-47,40,-90,-19,40,-48,-18,40,-46,-49,-50,40,40,126,126,126,-55,-52,-63,-62,40,-91,-139,40,40,-54,40,-92,40,126,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-53,126,126,-38,-21,6,126,126,-24,126,126,126,-22,126,126,126,126,-51,-96,-59,40,-58,40,40,40,40,40,40,40,40,40,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,40,40,40,40,-29,126,-28,-27,-39,-37,-36,126,126,126,40,-97,40,40,40,-4,40,126,126,6,126,126,-23,126,126,-26,-25,126,126,126,126,-61,-60,40,40,40,40,126,126,126,40,-133,40,126,126,40,-131,-128,-129,]),'CTX_SEMASSERT':([84,123,166,168,176,181,214,227,267,286,347,368,384,385,],[168,214,168,168,168,168,168,168,168,214,-133,-131,-128,-129,]),'MINUS':([16,33,34,36,38,39,40,41,42,47,48,50,51,53,55,77,78,81,82,83,84,85,86,89,91,92,111,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,259,264,267,273,274,290,294,295,309,310,311,315,316,323,325,344,347,349,366,368,384,385,],[43,-20,-43,-45,-44,-47,43,-90,-19,-48,-18,-46,-49,-50,97,-55,-52,-63,-62,97,43,-91,-139,-54,43,-92,97,-53,-38,-21,-24,-22,-51,-96,-59,43,-58,43,43,43,43,43,43,43,43,43,-57,-56,97,-89,97,97,-73,97,97,97,-72,97,-76,-75,97,-74,97,97,97,97,97,97,97,43,43,43,43,-29,-28,-27,-39,-37,-36,-97,43,43,43,-4,-23,-26,-25,97,-61,-60,43,43,43,43,43,-133,43,43,-131,-128,-129,]),'CONTINUE':([84,166,168,176,181,214,227,267,347,368,384,385,],[180,180,180,180,180,180,180,180,-133,-131,-128,-129,]),'COLON':([33,34,36,38,39,41,42,47,48,50,51,53,55,59,62,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,137,147,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,218,229,235,236,238,239,240,252,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,94,119,134,-55,-52,-63,-62,94,-91,-139,-54,-92,94,-53,-38,-21,-24,-22,134,-16,-51,-96,-59,-58,-57,-56,94,-89,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,282,-29,-28,-27,-39,-37,-36,-17,-97,-4,-23,-26,-25,94,-61,-60,]),'DOT':([27,33,34,36,38,39,41,42,47,48,50,51,53,77,78,89,116,121,127,132,137,156,161,163,182,183,229,239,240,290,294,295,310,311,],[71,-20,-43,-45,-44,-47,82,-19,-48,-18,-46,-49,-50,155,155,155,155,-21,236,-22,-21,-51,-59,-58,155,155,289,289,289,-23,-26,-25,-61,-60,]),'LNE':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,101,-55,-52,-63,-62,101,-91,-139,-54,-92,101,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,101,None,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,None,-81,-66,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,101,-61,-60,]),'IMPORT':([0,27,28,29,146,],[7,-203,7,73,-204,]),'BWXOR':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,114,-55,-52,-63,-62,114,-91,-139,-54,-92,114,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,114,-73,114,114,114,-72,114,-76,-75,-79,-74,114,114,114,114,114,-81,114,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,114,-61,-60,]),'IF':([84,166,168,176,181,214,227,267,347,368,384,385,],[175,264,264,175,264,264,264,175,-133,-131,-128,-129,]),'METHOD':([0,6,28,123,286,],[15,22,15,15,15,]),'?':([16,21,30,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,60,61,64,74,76,77,78,81,82,84,85,86,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,126,127,128,132,134,135,140,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,238,239,240,241,243,245,248,250,256,257,259,264,267,273,274,277,282,285,290,292,293,294,295,299,301,302,304,305,310,311,315,316,323,325,330,332,336,344,347,349,351,353,366,368,384,385,],[46,65,65,-20,-43,-45,-44,-47,46,-90,-19,46,-48,-18,-46,-49,-50,46,129,65,129,129,65,-55,-52,-63,-62,46,-91,-139,-54,46,-92,46,129,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-53,129,129,-38,-21,129,-24,129,-22,129,129,65,129,129,-51,-96,-59,46,-58,46,46,46,46,46,46,46,46,46,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,46,46,46,46,-29,129,-28,-27,-39,-37,-36,-110,129,129,65,65,129,46,-97,46,46,46,-4,46,129,129,-23,129,129,-26,-25,65,129,129,129,129,-61,-60,46,46,46,46,129,129,129,46,-133,46,129,129,46,-131,-128,-129,]),'$end':([0,2,8,28,72,],[-15,0,-214,-15,-215,]),'PLUS':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,102,-55,-52,-63,-62,102,-91,-139,-54,-92,102,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,102,-89,102,102,-73,102,102,102,-72,102,-76,-75,102,-74,102,102,102,102,102,102,102,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,102,-61,-60,]),'INTF':([0,6,28,123,286,],[3,23,3,3,3,]),'MODULO':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,104,-55,-52,-63,-62,104,-91,-139,-54,-92,104,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,104,-89,104,104,104,104,104,104,104,104,None,None,104,-74,104,104,104,104,104,104,104,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,104,-61,-60,]),'STRING':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[38,-20,-43,38,-45,38,-44,-47,38,-90,-19,38,-48,-18,38,-46,-49,-50,38,38,-55,-52,-63,-62,38,-91,-139,38,38,-54,38,-92,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-53,-38,-21,-24,-22,-51,-96,-59,38,-58,38,38,38,38,38,38,38,38,38,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,38,38,38,38,-29,-28,-27,-39,-37,-36,38,-97,38,38,38,-4,38,-23,-26,-25,-61,-60,38,38,38,38,38,-133,38,38,-131,-128,-129,]),'FOR':([84,166,168,176,181,214,227,267,347,368,384,385,],[171,171,171,171,171,171,171,171,-133,-131,-128,-129,]),'BWAND':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,106,-55,-52,-63,-62,106,-91,-139,-54,-92,106,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,106,-73,106,106,106,-72,106,-76,-75,-79,-74,106,106,106,106,106,106,106,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,106,-61,-60,]),'INHERIT':([32,33,34,36,38,39,41,42,44,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,98,111,116,120,121,123,127,132,156,157,161,163,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,229,235,236,238,239,240,259,274,284,286,290,294,295,310,311,321,],[-98,-20,-43,-45,-44,-47,-90,-19,-99,-48,-18,-46,-49,-50,-100,-55,-52,-63,-62,-101,-91,-139,-54,-92,-85,-83,-53,-38,-21,219,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,-88,-86,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-84,-67,-68,-81,-66,-29,-28,-27,-39,-37,-36,-97,-4,323,219,-23,-26,-25,-61,-60,-87,]),'TIMES':([33,34,36,38,39,41,42,47,48,50,51,53,55,73,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,107,149,-55,-52,-63,-62,107,-91,-139,-54,-92,107,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,107,-89,107,107,107,107,107,107,107,107,107,107,107,-74,107,107,107,107,107,107,107,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,107,-61,-60,]),'PFOR':([84,166,168,176,181,214,227,267,347,368,384,385,],[172,172,172,172,172,172,172,172,-133,-131,-128,-129,]),'BANG':([15,22,33,34,36,38,39,41,42,47,48,50,51,53,77,78,89,116,121,127,132,137,156,161,163,182,183,229,239,240,290,294,295,310,311,],[31,66,-20,-43,-45,-44,-47,81,-19,-48,-18,-46,-49,-50,154,154,154,154,-21,235,-22,-21,-51,-59,-58,154,154,288,288,288,-23,-26,-25,-61,-60,]),'CTX_ASSERT':([84,166,168,176,181,214,227,267,347,368,384,385,],[166,166,166,166,166,166,166,166,-133,-131,-128,-129,]),'PASS':([84,166,168,176,181,214,227,267,347,368,384,385,],[173,173,173,173,173,173,173,173,-133,-131,-128,-129,]),'FALSE':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[50,-20,-43,50,-45,50,-44,-47,50,-90,-19,50,-48,-18,50,-46,-49,-50,50,50,-55,-52,-63,-62,50,-91,-139,50,50,-54,50,-92,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-53,-38,-21,-24,-22,-51,-96,-59,50,-58,50,50,50,50,50,50,50,50,50,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,50,50,50,50,-29,-28,-27,-39,-37,-36,50,-97,50,50,50,-4,50,-23,-26,-25,-61,-60,50,50,50,50,50,-133,50,50,-131,-128,-129,]),'[':([81,82,154,155,],[162,164,162,164,]),'ELSE':([347,360,368,375,384,385,],[367,367,380,380,-128,-129,]),']':([32,33,34,36,38,39,41,42,44,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,98,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,229,235,236,238,239,240,259,260,261,274,290,294,295,310,311,321,],[-98,-20,-43,-45,-44,-47,-90,-19,-99,-48,-18,-46,-49,-50,-100,-55,-52,-63,-62,-101,-91,-139,-54,-92,-85,-83,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,-88,-86,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-84,-67,-68,-81,-66,-29,-28,-27,-39,-37,-36,-97,310,311,-4,-23,-26,-25,-61,-60,-87,]),'REFDOT':([16,33,34,36,38,39,40,41,42,43,46,47,48,50,51,53,55,60,64,74,77,78,81,82,84,85,86,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,126,127,128,129,132,134,135,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,238,239,240,243,245,256,257,259,264,267,273,274,277,282,285,290,292,293,294,295,301,302,304,305,310,311,315,316,323,325,330,332,336,344,347,349,351,353,366,368,384,385,],[49,-20,-43,-45,-44,-47,49,-90,-19,49,88,-48,-18,-46,-49,-50,49,131,131,131,-55,-52,-63,-62,49,-91,-139,-54,49,-92,49,131,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-53,131,131,-38,-21,131,-24,131,131,-22,131,131,131,131,-51,-96,-59,49,-58,49,49,49,49,49,49,49,49,49,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,49,49,49,49,-29,131,-28,-27,-39,-37,-36,131,131,131,49,-97,49,49,49,-4,49,131,131,-23,131,131,-26,-25,131,131,131,131,-61,-60,49,49,49,49,131,131,131,49,-133,49,131,131,49,-131,-128,-129,]),'OR':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,108,-55,-52,-63,-62,108,-91,-139,-54,-92,108,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,108,108,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,108,-81,-66,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,108,-61,-60,]),'AND':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,109,-55,-52,-63,-62,109,-91,-139,-54,-92,109,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,109,109,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,109,-81,-66,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,109,-61,-60,]),'RINIT':([33,34,36,38,39,41,42,47,48,50,51,53,77,78,80,81,82,85,86,89,92,116,120,121,127,132,156,157,159,160,161,163,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,258,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,-55,-52,157,-63,-62,-91,-139,-54,-92,-53,-38,-21,-24,-22,-51,-96,-94,259,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,-29,-28,-27,-39,-37,-36,-95,-97,-4,-23,-26,-25,-93,-61,-60,]),'BWOR':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,123,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,286,290,294,295,309,310,311,317,365,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,110,-55,-52,-63,-62,110,-91,-139,-54,-92,110,-53,-38,-21,221,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,110,-73,110,110,110,-72,110,-76,-75,-79,-74,110,110,-80,110,110,-81,110,-29,-28,-27,-39,-37,-36,-97,-4,221,-23,-26,-25,110,-61,-60,344,344,]),'FROM':([0,28,123,286,],[12,12,220,220,]),'LINIT':([33,34,36,38,39,41,42,47,48,50,51,53,156,161,163,310,311,],[-20,-43,-45,-44,-47,80,-19,-48,-18,-46,-49,-50,-51,-59,-58,-61,-60,]),'THIS':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,60,64,74,77,78,81,82,84,85,86,87,88,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,124,126,127,128,130,131,132,134,135,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,238,239,240,243,245,256,257,259,264,267,273,274,277,282,285,288,289,290,292,293,294,295,301,302,304,305,310,311,315,316,323,325,330,332,336,344,347,349,351,353,366,368,384,385,],[51,-20,-43,51,-45,51,-44,-47,51,-90,-19,51,-48,-18,51,-46,-49,-50,51,51,132,132,132,-55,-52,-63,-62,51,-91,-139,51,51,-54,51,-92,51,132,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-53,132,132,-38,-21,132,132,-24,132,132,132,-22,132,132,132,132,-51,-96,-59,51,-58,51,51,51,51,51,51,51,51,51,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,51,51,51,51,-29,132,-28,-27,-39,-37,-36,132,132,132,51,-97,51,51,51,-4,51,132,132,132,132,-23,132,132,-26,-25,132,132,132,132,-61,-60,51,51,51,51,132,132,132,51,-133,51,132,132,51,-131,-128,-129,]),'ISA':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,96,-55,-52,-63,-62,96,-91,-139,-54,-92,96,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,None,-73,-64,96,96,-72,-65,-76,-75,-79,-74,96,96,-80,-67,96,-81,-66,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,96,-61,-60,]),'ASSIGN':([19,20,21,30,32,33,34,36,38,39,41,42,44,47,48,50,51,52,53,55,57,58,59,61,63,75,76,77,78,81,82,83,85,86,89,92,98,111,116,118,120,121,127,132,133,140,153,156,157,158,161,163,177,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,229,235,236,238,239,240,241,246,248,249,250,251,259,274,279,285,290,294,295,299,300,303,310,311,321,324,331,],[-107,60,64,74,-98,-20,-43,-45,-44,-47,-90,-19,-99,-48,-18,-46,-49,91,-50,-100,117,-106,-102,-163,135,151,152,-55,-52,-63,-62,-101,-91,-139,-54,-92,-85,-83,-53,-103,-38,-21,-24,-22,-164,-165,256,-51,-96,257,-59,-58,273,-57,-56,-77,-89,-78,-82,-73,-64,-88,-86,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-84,-67,-68,-81,-66,-104,-29,-28,-27,-39,-37,-36,-110,-166,301,302,304,305,-97,-4,-105,325,-23,-26,-25,330,332,336,-61,-60,-87,349,353,]),'BREAK':([84,166,168,176,181,214,227,267,347,368,384,385,],[179,179,179,179,179,179,179,179,-133,-131,-128,-129,]),'LEQ':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,113,-55,-52,-63,-62,113,-91,-139,-54,-92,113,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,113,None,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,None,-81,-66,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,113,-61,-60,]),'FUTURE':([16,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,77,78,81,82,84,85,86,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[54,-20,-43,-45,-44,-47,54,-90,-19,54,-48,-18,-46,-49,-50,54,-55,-52,-63,-62,54,-91,-139,-54,54,-92,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-53,-38,-21,-24,-22,-51,-96,-59,54,-58,54,54,54,54,54,54,54,54,54,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,54,54,54,54,-29,-28,-27,-39,-37,-36,54,-97,54,54,54,-4,54,-23,-26,-25,-61,-60,54,54,54,54,54,-133,54,54,-131,-128,-129,]),'LET':([0,28,84,123,166,168,176,181,214,227,267,286,347,368,384,385,],[16,16,16,16,16,16,16,16,16,16,16,16,-133,-131,-128,-129,]),'LLE':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,103,-55,-52,-63,-62,103,-91,-139,-54,-92,103,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,103,-73,None,103,103,-72,None,-76,-75,-79,-74,103,103,-80,None,103,-81,None,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,103,-61,-60,]),'NOT':([16,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,77,78,81,82,84,85,86,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,238,239,240,257,259,264,267,273,274,277,290,294,295,310,311,315,316,323,325,344,347,349,366,368,384,385,],[56,-20,-43,-45,-44,-47,56,-90,-19,56,-48,-18,-46,-49,-50,56,-55,-52,-63,-62,56,-91,-139,-54,56,-92,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-53,-38,-21,-24,-22,-51,-96,-59,56,-58,56,56,56,56,56,56,56,56,56,-57,-56,-77,-89,-78,-82,-73,-64,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,56,56,56,56,-29,-28,-27,-39,-37,-36,56,-97,56,56,56,-4,56,-23,-26,-25,-61,-60,56,56,56,56,56,-133,56,56,-131,-128,-129,]),'CTX_SEMCLAIM':([84,123,166,168,176,181,214,227,267,286,347,368,384,385,],[181,227,181,181,181,181,181,181,181,227,-133,-131,-128,-129,]),'COMMA':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,85,86,89,92,116,120,121,127,132,136,137,139,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,234,235,236,238,239,240,241,259,274,290,294,295,310,311,327,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,100,-55,-52,-63,-62,-91,-139,-54,-92,-53,-38,-21,-24,-22,243,-21,245,-51,-96,-59,-58,-57,-56,-77,-89,-78,-82,-73,-64,277,-69,-72,-65,-76,-75,-79,-74,-71,-70,-80,-67,-68,-81,-66,-29,292,-28,-27,-39,-37,-36,-110,-97,-4,-23,-26,-25,-61,-60,351,]),'TYPE':([0,6,28,123,286,],[18,25,18,18,18,]),'LLT':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,99,-55,-52,-63,-62,99,-91,-139,-54,-92,99,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,99,-73,None,99,99,-72,None,-76,-75,-79,-74,99,99,-80,None,99,-81,None,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,99,-61,-60,]),'LGT':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,238,239,240,259,274,290,294,295,309,310,311,],[-20,-43,-45,-44,-47,-90,-19,-48,-18,-46,-49,-50,115,-55,-52,-63,-62,115,-91,-139,-54,-92,115,-53,-38,-21,-24,-22,-51,-96,-59,-58,-57,-56,-77,-89,-78,115,-73,None,115,115,-72,None,-76,-75,-79,-74,115,115,-80,None,115,-81,None,-29,-28,-27,-39,-37,-36,-97,-4,-23,-26,-25,115,-61,-60,]),'MATCH':([84,166,168,176,181,214,227,267,347,368,384,385,],[174,174,174,174,174,174,174,174,-133,-131,-128,-129,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_call':([16,40,84,91,162,164,165,166,167,168,174,175,176,181,214,219,220,227,264,267,273,315,316,323,325,344,349,366,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'statements_block':([45,52,54,138,150,184,242,254,255,265,271,308,312,333,337,342,343,352,354,357,363,367,372,378,380,],[85,90,92,244,253,276,296,306,307,313,319,340,341,355,358,361,362,371,373,374,376,379,381,382,383,]),'typedecl':([0,28,123,286,],[1,1,211,211,]),'elif_list':([347,360,384,],[368,375,385,]),'type_top':([126,282,],[231,322,]),'matchers_block_blocklist':([317,365,],[345,377,]),'funargs':([21,30,61,76,140,248,250,299,],[63,75,133,153,246,300,303,331,]),'module':([0,28,],[2,72,]),'static_pattern':([0,28,],[11,11,]),'_statements_block_blocklist':([84,176,267,],[178,272,314,]),'expr_tuple_list':([100,277,],[191,321,]),'typedeclname':([3,18,143,145,],[20,57,249,251,]),'inherit':([123,286,],[226,226,]),'typedecl_block':([60,117,125,209,302,305,335,339,],[122,208,230,278,334,338,356,359,]),'methoddecl':([0,28,123,286,],[5,5,212,212,]),'expr_call_list':([55,111,],[98,203,]),'isalist':([60,117,128,302,305,],[125,209,237,335,339,]),'pattern':([0,28,84,123,166,168,176,181,214,227,267,286,],[17,17,169,215,169,169,169,169,169,169,169,215,]),'type_app_list':([234,293,],[291,329,]),'expr_postfix':([16,35,37,40,43,49,55,56,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,162,164,165,166,167,168,174,175,176,181,214,219,220,227,257,264,267,273,277,315,316,323,325,344,349,366,],[41,77,78,41,41,89,41,116,41,182,183,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'typedecl_block_blocklist':([123,286,],[216,326,]),'value_3':([16,35,37,40,43,49,55,56,81,82,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,154,155,162,164,165,166,167,168,174,175,176,181,214,219,220,227,257,264,267,273,277,315,316,323,325,344,349,366,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'value_2':([16,35,37,40,43,49,55,56,81,82,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,154,155,162,164,165,166,167,168,174,175,176,181,214,219,220,227,257,264,267,273,277,315,316,323,325,344,349,366,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'expr_tuple':([16,40,84,91,162,164,165,166,167,168,174,175,176,181,214,219,220,227,264,267,273,315,316,323,325,344,349,366,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'_statements_block':([45,52,54,138,150,184,242,254,255,265,271,308,312,333,337,342,343,352,354,357,363,367,372,378,380,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'type_tuple_list':([292,351,],[328,370,]),'statement':([84,166,168,176,181,214,227,267,],[170,263,266,170,275,280,287,170,]),'initializer_pair':([80,159,],[159,159,]),'import':([0,28,],[10,10,]),'type_postfix':([60,64,74,94,117,119,124,126,128,130,131,134,135,151,152,234,235,236,243,245,256,282,285,288,289,292,293,301,302,304,305,330,332,336,351,353,],[127,127,127,127,127,127,229,127,127,239,240,127,127,127,127,127,294,295,127,127,127,127,127,294,295,127,127,127,127,127,127,127,127,127,127,127,]),'type':([60,64,74,94,117,119,126,128,134,135,151,152,234,243,245,256,282,285,292,293,301,302,304,305,330,332,336,351,353,],[128,139,139,186,128,210,234,128,241,139,139,139,293,139,139,139,234,324,327,293,139,128,139,128,139,139,139,327,139,]),'empty':([0,28,123,286,],[8,8,217,217,]),'typedident':([21,30,61,64,65,74,76,135,140,151,152,171,172,243,245,248,250,256,299,301,304,330,332,336,353,],[61,61,61,136,140,136,61,136,61,136,136,268,269,136,136,61,61,136,61,136,136,136,136,136,136,]),'funretvals':([64,74,135,151,152,243,245,256,301,304,330,332,336,353,],[138,150,242,254,255,297,298,308,333,337,352,354,357,372,]),'idents':([73,123,147,286,],[148,218,252,218,]),'matcher':([317,365,],[346,346,]),'initializer_list':([80,159,],[160,258,]),'type_app':([126,282,],[232,232,]),'toplevel':([0,28,],[9,9,]),'type_ref':([60,64,74,94,117,119,126,128,129,134,135,151,152,234,243,245,256,282,285,292,293,301,302,304,305,330,332,336,351,353,],[120,120,120,120,120,120,120,120,238,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'typedeclname_list':([19,22,23,24,25,59,66,210,],[58,67,68,69,70,118,141,279,]),'matchers_block':([270,],[318,]),'modname':([7,12,71,],[26,29,146,]),'statement_witheol':([84,176,267,],[176,176,176,]),'typedecl_statement':([123,286,],[222,222,]),'fieldchoicedecl':([123,286,],[213,213,]),'intfdecl':([0,28,123,286,],[13,13,223,223,]),'expr_top':([16,40,84,91,162,164,165,166,167,168,174,175,176,181,214,219,220,227,264,267,273,315,316,323,325,344,349,366,],[52,79,177,184,260,261,262,177,265,177,270,271,177,177,177,283,284,177,312,177,320,342,343,348,350,363,369,378,]),'choicedecl':([123,286,],[224,224,]),'fundecl':([0,28,123,286,],[14,14,225,225,]),'value':([16,35,37,40,43,49,55,56,81,82,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,154,155,162,164,165,166,167,168,174,175,176,181,214,219,220,227,257,264,267,273,277,315,316,323,325,344,349,366,],[53,53,53,53,53,53,53,53,161,163,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,161,163,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'fielddecl':([123,286,],[228,228,]),'type_tuple':([126,282,],[233,233,]),'expr':([16,40,43,55,84,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,162,164,165,166,167,168,174,175,176,181,214,219,220,227,257,264,267,273,277,315,316,323,325,344,349,366,],[55,55,83,111,55,55,185,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,111,204,205,206,207,55,55,55,55,55,55,55,55,55,55,55,55,55,55,309,55,55,55,192,55,55,55,55,55,55,55,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('fieldchoicedecl -> empty','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',174),
  ('fieldchoicedecl -> choicedecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',175),
  ('fieldchoicedecl -> fielddecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',176),
  ('_statements_block -> SOB _statements_block_blocklist EOB','_statements_block',3,'p__statements_block','/home/e/nc/n/bootstrap/parser.py',187),
  ('matchers_block -> SOB matchers_block_blocklist EOB','matchers_block',3,'p_matchers_block','/home/e/nc/n/bootstrap/parser.py',187),
  ('typedecl_block -> SOB typedecl_block_blocklist EOB','typedecl_block',3,'p_typedecl_block','/home/e/nc/n/bootstrap/parser.py',187),
  ('_statements_block_blocklist -> statement EOL','_statements_block_blocklist',2,'p__statements_block_blocklist','/home/e/nc/n/bootstrap/parser.py',192),
  ('_statements_block_blocklist -> statement EOL _statements_block_blocklist','_statements_block_blocklist',3,'p__statements_block_blocklist','/home/e/nc/n/bootstrap/parser.py',193),
  ('matchers_block_blocklist -> matcher EOL','matchers_block_blocklist',2,'p_matchers_block_blocklist','/home/e/nc/n/bootstrap/parser.py',192),
  ('matchers_block_blocklist -> matcher EOL matchers_block_blocklist','matchers_block_blocklist',3,'p_matchers_block_blocklist','/home/e/nc/n/bootstrap/parser.py',193),
  ('typedecl_block_blocklist -> typedecl_statement EOL','typedecl_block_blocklist',2,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/parser.py',192),
  ('typedecl_block_blocklist -> typedecl_statement EOL typedecl_block_blocklist','typedecl_block_blocklist',3,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/parser.py',193),
  ('_statements_block_blocklist -> statement_witheol','_statements_block_blocklist',1,'p__statements_block_blocklist_1','/home/e/nc/n/bootstrap/parser.py',206),
  ('_statements_block_blocklist -> statement_witheol _statements_block_blocklist','_statements_block_blocklist',2,'p__statements_block_blocklist_1','/home/e/nc/n/bootstrap/parser.py',207),
  ('empty -> <empty>','empty',0,'p_empty','/home/e/nc/n/bootstrap/parser.py',240),
  ('idents -> IDENT','idents',1,'p_idents','/home/e/nc/n/bootstrap/parser.py',244),
  ('idents -> IDENT idents','idents',2,'p_idents','/home/e/nc/n/bootstrap/parser.py',245),
  ('value_3 -> IDENT','value_3',1,'p_value_ident','/home/e/nc/n/bootstrap/parser.py',252),
  ('value_2 -> value_3','value_2',1,'p_value_2','/home/e/nc/n/bootstrap/parser.py',257),
  ('value -> value_2','value',1,'p_value','/home/e/nc/n/bootstrap/parser.py',261),
  ('type_postfix -> IDENT','type_postfix',1,'p_type_name','/home/e/nc/n/bootstrap/parser.py',265),
  ('type_postfix -> THIS','type_postfix',1,'p_type_this','/home/e/nc/n/bootstrap/parser.py',269),
  ('type_postfix -> ( type_top )','type_postfix',3,'p_type_postfix_top','/home/e/nc/n/bootstrap/parser.py',273),
  ('type -> type_postfix','type',1,'p_type_postfix','/home/e/nc/n/bootstrap/parser.py',277),
  ('type_postfix -> type_postfix DOT type_postfix','type_postfix',3,'p_type_field','/home/e/nc/n/bootstrap/parser.py',281),
  ('type_postfix -> type_postfix BANG type_postfix','type_postfix',3,'p_type_field','/home/e/nc/n/bootstrap/parser.py',282),
  ('type -> type_postfix DOT','type',2,'p_type_deref','/home/e/nc/n/bootstrap/parser.py',286),
  ('type -> type_postfix BANG','type',2,'p_type_deref','/home/e/nc/n/bootstrap/parser.py',287),
  ('type_postfix -> SLICEBRAKETS type_postfix','type_postfix',2,'p_type_slice','/home/e/nc/n/bootstrap/parser.py',291),
  ('type_tuple_list -> type','type_tuple_list',1,'p_type_tuple_list','/home/e/nc/n/bootstrap/parser.py',295),
  ('type_tuple_list -> type COMMA type_tuple_list','type_tuple_list',3,'p_type_tuple_list','/home/e/nc/n/bootstrap/parser.py',296),
  ('type_tuple -> type COMMA type_tuple_list','type_tuple',3,'p_type_tuple_only','/home/e/nc/n/bootstrap/parser.py',303),
  ('type_app_list -> type','type_app_list',1,'p_type_app_list','/home/e/nc/n/bootstrap/parser.py',307),
  ('type_app_list -> type type_app_list','type_app_list',2,'p_type_app_list','/home/e/nc/n/bootstrap/parser.py',308),
  ('type_app -> type type_app_list','type_app',2,'p_type_app_only','/home/e/nc/n/bootstrap/parser.py',315),
  ('type_ref -> REFDOT type_postfix','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/parser.py',319),
  ('type_ref -> REFBANG type_postfix','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/parser.py',320),
  ('type -> type_ref','type',1,'p_type_ref','/home/e/nc/n/bootstrap/parser.py',324),
  ('type -> ? type_ref','type',2,'p_type_nullable','/home/e/nc/n/bootstrap/parser.py',328),
  ('type_top -> type_app','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',333),
  ('type_top -> type_tuple','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',334),
  ('type_top -> type','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',335),
  ('expr_postfix -> NUMBER','expr_postfix',1,'p_expr_postfix_literal_number','/home/e/nc/n/bootstrap/parser.py',339),
  ('expr_postfix -> STRING','expr_postfix',1,'p_expr_postfix_string','/home/e/nc/n/bootstrap/parser.py',343),
  ('expr_postfix -> TRUE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/parser.py',347),
  ('expr_postfix -> FALSE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/parser.py',348),
  ('expr_postfix -> NULL','expr_postfix',1,'p_expr_postfix_null','/home/e/nc/n/bootstrap/parser.py',355),
  ('expr_postfix -> SIZEOF','expr_postfix',1,'p_expr_postfix_sizeof','/home/e/nc/n/bootstrap/parser.py',359),
  ('expr_postfix -> THIS','expr_postfix',1,'p_expr_postfix_this','/home/e/nc/n/bootstrap/parser.py',363),
  ('expr_postfix -> value','expr_postfix',1,'p_expr_postfix_value','/home/e/nc/n/bootstrap/parser.py',367),
  ('expr_postfix -> ( expr_top )','expr_postfix',3,'p_expr_postfix_group','/home/e/nc/n/bootstrap/parser.py',371),
  ('expr -> UBWNOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',375),
  ('expr -> NOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',376),
  ('expr -> REFDOT expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/parser.py',380),
  ('expr -> REFBANG expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/parser.py',381),
  ('expr -> ? REFDOT expr_postfix','expr',3,'p_expr_ref_nullable','/home/e/nc/n/bootstrap/parser.py',385),
  ('expr -> ? REFBANG expr_postfix','expr',3,'p_expr_ref_nullable','/home/e/nc/n/bootstrap/parser.py',386),
  ('expr_postfix -> expr_postfix DOT value','expr_postfix',3,'p_expr_field','/home/e/nc/n/bootstrap/parser.py',390),
  ('expr_postfix -> expr_postfix BANG value','expr_postfix',3,'p_expr_field','/home/e/nc/n/bootstrap/parser.py',391),
  ('expr_postfix -> expr_postfix DOT [ expr_top ]','expr_postfix',5,'p_expr_element','/home/e/nc/n/bootstrap/parser.py',397),
  ('expr_postfix -> expr_postfix BANG [ expr_top ]','expr_postfix',5,'p_expr_element','/home/e/nc/n/bootstrap/parser.py',398),
  ('expr -> expr_postfix DOT','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/parser.py',402),
  ('expr -> expr_postfix BANG','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/parser.py',403),
  ('expr -> expr LLT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',407),
  ('expr -> expr LLE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',408),
  ('expr -> expr LGT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',409),
  ('expr -> expr LGE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',410),
  ('expr -> expr LEQ expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',411),
  ('expr -> expr LNE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',412),
  ('expr -> expr AND expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/parser.py',416),
  ('expr -> expr OR expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/parser.py',417),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',421),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',422),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',423),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',424),
  ('expr -> expr MODULO expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',425),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',426),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',427),
  ('expr -> expr BWAND expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',428),
  ('expr -> expr BWOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',429),
  ('expr -> expr BWXOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',430),
  ('expr -> expr ISA expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',431),
  ('expr_call_list -> expr','expr_call_list',1,'p_expr_call_list','/home/e/nc/n/bootstrap/parser.py',435),
  ('expr_call_list -> expr expr_call_list','expr_call_list',2,'p_expr_call_list','/home/e/nc/n/bootstrap/parser.py',436),
  ('expr_call -> expr expr_call_list','expr_call',2,'p_expr_call_only','/home/e/nc/n/bootstrap/parser.py',443),
  ('expr_tuple_list -> expr','expr_tuple_list',1,'p_expr_tuple_list','/home/e/nc/n/bootstrap/parser.py',448),
  ('expr_tuple_list -> expr COMMA expr_tuple_list','expr_tuple_list',3,'p_expr_tuple_list','/home/e/nc/n/bootstrap/parser.py',449),
  ('expr_tuple -> expr COMMA expr_tuple_list','expr_tuple',3,'p_expr_tuple_only','/home/e/nc/n/bootstrap/parser.py',456),
  ('expr -> expr COLON type','expr',3,'p_expr_constrained','/home/e/nc/n/bootstrap/parser.py',461),
  ('expr -> expr_postfix','expr',1,'p_expr_postfix','/home/e/nc/n/bootstrap/parser.py',465),
  ('expr -> BLOCK statements_block','expr',2,'p_expr_block','/home/e/nc/n/bootstrap/parser.py',469),
  ('expr -> FUTURE statements_block','expr',2,'p_expr_future','/home/e/nc/n/bootstrap/parser.py',472),
  ('initializer_pair -> IDENT ASSIGN expr','initializer_pair',3,'p_expr_initializer_pair','/home/e/nc/n/bootstrap/parser.py',475),
  ('initializer_list -> initializer_pair','initializer_list',1,'p_expr_initializer_list','/home/e/nc/n/bootstrap/parser.py',479),
  ('initializer_list -> initializer_pair initializer_list','initializer_list',2,'p_expr_initializer_list','/home/e/nc/n/bootstrap/parser.py',480),
  ('expr -> expr_postfix LINIT RINIT','expr',3,'p_expr_initializer','/home/e/nc/n/bootstrap/parser.py',487),
  ('expr -> expr_postfix LINIT initializer_list RINIT','expr',4,'p_expr_initializer','/home/e/nc/n/bootstrap/parser.py',488),
  ('expr_top -> expr_call','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',495),
  ('expr_top -> expr_tuple','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',496),
  ('expr_top -> expr','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',497),
  ('expr_top -> MINUS expr','expr_top',2,'p_expr_top_unary','/home/e/nc/n/bootstrap/parser.py',501),
  ('typedeclname_list -> IDENT','typedeclname_list',1,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',505),
  ('typedeclname_list -> IDENT typedeclname_list','typedeclname_list',2,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',506),
  ('typedeclname_list -> IDENT COLON type','typedeclname_list',3,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',507),
  ('typedeclname_list -> IDENT COLON type typedeclname_list','typedeclname_list',4,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',508),
  ('typedeclname -> IDENT typedeclname_list','typedeclname',2,'p_typedeclname_generic','/home/e/nc/n/bootstrap/parser.py',519),
  ('typedeclname -> IDENT','typedeclname',1,'p_typedeclname','/home/e/nc/n/bootstrap/parser.py',523),
  ('isalist -> type','isalist',1,'p_isalist','/home/e/nc/n/bootstrap/parser.py',527),
  ('isalist -> type isalist','isalist',2,'p_isalist','/home/e/nc/n/bootstrap/parser.py',528),
  ('typedident -> IDENT COLON type','typedident',3,'p_typedident','/home/e/nc/n/bootstrap/parser.py',535),
  ('pattern -> LET expr_top','pattern',2,'p_pattern','/home/e/nc/n/bootstrap/parser.py',539),
  ('pattern -> LET expr_top ASSIGN expr_top','pattern',4,'p_pattern_expr','/home/e/nc/n/bootstrap/parser.py',543),
  ('pattern -> LET expr_top statements_block','pattern',3,'p_pattern_mutating','/home/e/nc/n/bootstrap/parser.py',547),
  ('pattern -> LET expr_top ASSIGN expr_top statements_block','pattern',5,'p_pattern_expr_mutating','/home/e/nc/n/bootstrap/parser.py',553),
  ('static_pattern -> pattern','static_pattern',1,'p_static_pattern','/home/e/nc/n/bootstrap/parser.py',559),
  ('fielddecl -> idents COLON type_top','fielddecl',3,'p_fielddecl','/home/e/nc/n/bootstrap/parser.py',564),
  ('statement -> PASS','statement',1,'p_statement_pass','/home/e/nc/n/bootstrap/parser.py',568),
  ('statement -> pattern','statement',1,'p_statement_pattern','/home/e/nc/n/bootstrap/parser.py',572),
  ('statement -> expr_top ASSIGN expr_top','statement',3,'p_statement_assign','/home/e/nc/n/bootstrap/parser.py',576),
  ('statement -> expr_top','statement',1,'p_statement_expr','/home/e/nc/n/bootstrap/parser.py',585),
  ('statement -> RETURN','statement',1,'p_statement_return','/home/e/nc/n/bootstrap/parser.py',589),
  ('statement -> RETURN expr_top','statement',2,'p_statement_return','/home/e/nc/n/bootstrap/parser.py',590),
  ('statement -> WHILE expr_top statements_block','statement',3,'p_statement_while','/home/e/nc/n/bootstrap/parser.py',597),
  ('statement -> FOR typedident IN expr_top statements_block','statement',5,'p_statement_for','/home/e/nc/n/bootstrap/parser.py',601),
  ('statement -> PFOR typedident IN expr_top statements_block','statement',5,'p_statement_pfor','/home/e/nc/n/bootstrap/parser.py',605),
  ('statement -> BREAK','statement',1,'p_statement_break','/home/e/nc/n/bootstrap/parser.py',609),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','/home/e/nc/n/bootstrap/parser.py',613),
  ('elif_list -> ELIF expr_top statements_block EOL','elif_list',4,'p_statement_elif_list','/home/e/nc/n/bootstrap/parser.py',617),
  ('elif_list -> ELIF expr_top statements_block EOL elif_list','elif_list',5,'p_statement_elif_list','/home/e/nc/n/bootstrap/parser.py',618),
  ('statement -> IF expr_top statements_block EOL elif_list ELSE statements_block','statement',7,'p_statement_if_elif_else','/home/e/nc/n/bootstrap/parser.py',625),
  ('statement_witheol -> IF expr_top statements_block EOL elif_list','statement_witheol',5,'p_statement_if_elif','/home/e/nc/n/bootstrap/parser.py',629),
  ('statement -> IF expr_top statements_block EOL ELSE statements_block','statement',6,'p_statement_if_else','/home/e/nc/n/bootstrap/parser.py',633),
  ('statement_witheol -> IF expr_top statements_block EOL','statement_witheol',4,'p_statement_if','/home/e/nc/n/bootstrap/parser.py',637),
  ('matcher -> BWOR expr_top statements_block','matcher',3,'p_matchers','/home/e/nc/n/bootstrap/parser.py',641),
  ('statement -> MATCH expr_top matchers_block','statement',3,'p_match','/home/e/nc/n/bootstrap/parser.py',645),
  ('statement -> CTX_ASSERT statement','statement',2,'p_statement_assert','/home/e/nc/n/bootstrap/parser.py',649),
  ('statement -> CTX_SEMASSERT statement','statement',2,'p_statement_semanticassert','/home/e/nc/n/bootstrap/parser.py',653),
  ('statement -> CTX_SEMCLAIM statement','statement',2,'p_statement_semanticclaim','/home/e/nc/n/bootstrap/parser.py',657),
  ('statements_block -> _statements_block','statements_block',1,'p_statements_block','/home/e/nc/n/bootstrap/parser.py',661),
  ('choicedecl -> BWOR IDENT','choicedecl',2,'p_choicedecl','/home/e/nc/n/bootstrap/parser.py',665),
  ('choicedecl -> BWOR IDENT ASSIGN expr_top','choicedecl',4,'p_choicedecl_value','/home/e/nc/n/bootstrap/parser.py',669),
  ('choicedecl -> BWOR IDENT type','choicedecl',3,'p_choicedecl_type','/home/e/nc/n/bootstrap/parser.py',673),
  ('choicedecl -> BWOR IDENT type ASSIGN expr_top','choicedecl',5,'p_choicedecl_type_value','/home/e/nc/n/bootstrap/parser.py',677),
  ('typedecl_statement -> inherit','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',681),
  ('typedecl_statement -> fieldchoicedecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',682),
  ('typedecl_statement -> typedecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',683),
  ('typedecl_statement -> fundecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',684),
  ('typedecl_statement -> methoddecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',685),
  ('typedecl_statement -> intfdecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',686),
  ('typedecl_statement -> pattern','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',687),
  ('typedecl_statement -> CTX_SEMASSERT statement','typedecl_statement',2,'p_typedecl_semanticassert','/home/e/nc/n/bootstrap/parser.py',691),
  ('typedecl_statement -> CTX_SEMCLAIM statement','typedecl_statement',2,'p_typedecl_semanticclaim','/home/e/nc/n/bootstrap/parser.py',695),
  ('inherit -> INHERIT expr_top','inherit',2,'p_inherit','/home/e/nc/n/bootstrap/parser.py',699),
  ('inherit -> FROM expr_top INHERIT expr_top','inherit',4,'p_inherit','/home/e/nc/n/bootstrap/parser.py',700),
  ('typedecl -> TYPE typedeclname ASSIGN','typedecl',3,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',728),
  ('typedecl -> TYPE typedeclname ASSIGN isalist','typedecl',4,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',729),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN','typedecl',6,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',730),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN isalist','typedecl',7,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',731),
  ('typedecl -> TYPE typedeclname ASSIGN typedecl_block','typedecl',4,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',751),
  ('typedecl -> TYPE typedeclname ASSIGN isalist typedecl_block','typedecl',5,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',752),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN typedecl_block','typedecl',7,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',753),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN isalist typedecl_block','typedecl',8,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',754),
  ('funargs -> typedident','funargs',1,'p_funargs','/home/e/nc/n/bootstrap/parser.py',780),
  ('funargs -> typedident funargs','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/parser.py',781),
  ('funargs -> ? typedident','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/parser.py',782),
  ('funargs -> ? typedident funargs','funargs',3,'p_funargs','/home/e/nc/n/bootstrap/parser.py',783),
  ('funretvals -> typedident','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',796),
  ('funretvals -> type','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',797),
  ('funretvals -> typedident COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',798),
  ('funretvals -> type COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',799),
  ('fundecl -> FUN IDENT ASSIGN funretvals','fundecl',4,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',806),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals','fundecl',5,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',807),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals','fundecl',7,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',808),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals','fundecl',8,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',809),
  ('fundecl -> FUN IDENT ASSIGN funretvals statements_block','fundecl',5,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',820),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals statements_block','fundecl',6,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',821),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals statements_block','fundecl',8,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',822),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','fundecl',9,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',823),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals','methoddecl',4,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',834),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals','methoddecl',5,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',835),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals','methoddecl',7,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',836),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals','methoddecl',8,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',837),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals statements_block','methoddecl',5,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',848),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',849),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',8,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',850),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',851),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals','methoddecl',5,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',862),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals','methoddecl',6,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',863),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals','methoddecl',8,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',864),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals','methoddecl',9,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',865),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',876),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals statements_block','methoddecl',7,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',877),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',878),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',10,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',879),
  ('intfdecl -> INTF typedeclname ASSIGN','intfdecl',3,'p_intfdecl_empty','/home/e/nc/n/bootstrap/parser.py',890),
  ('intfdecl -> INTF typedeclname ASSIGN isalist','intfdecl',4,'p_intfdecl_empty','/home/e/nc/n/bootstrap/parser.py',891),
  ('intfdecl -> ( INTF typedeclname_list ) typedeclname ASSIGN','intfdecl',6,'p_intfdecl_empty','/home/e/nc/n/bootstrap/parser.py',892),
  ('intfdecl -> ( INTF typedeclname_list ) typedeclname ASSIGN isalist','intfdecl',7,'p_intfdecl_empty','/home/e/nc/n/bootstrap/parser.py',893),
  ('intfdecl -> INTF typedeclname ASSIGN typedecl_block','intfdecl',4,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',913),
  ('intfdecl -> INTF typedeclname ASSIGN isalist typedecl_block','intfdecl',5,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',914),
  ('intfdecl -> ( INTF typedeclname_list ) typedeclname ASSIGN typedecl_block','intfdecl',7,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',915),
  ('intfdecl -> ( INTF typedeclname_list ) typedeclname ASSIGN isalist typedecl_block','intfdecl',8,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',916),
  ('modname -> IDENT','modname',1,'p_modname','/home/e/nc/n/bootstrap/parser.py',942),
  ('modname -> IDENT DOT modname','modname',3,'p_modname','/home/e/nc/n/bootstrap/parser.py',943),
  ('import -> IMPORT modname','import',2,'p_import','/home/e/nc/n/bootstrap/parser.py',950),
  ('import -> FROM modname IMPORT TIMES','import',4,'p_import','/home/e/nc/n/bootstrap/parser.py',951),
  ('import -> FROM modname IMPORT idents','import',4,'p_import','/home/e/nc/n/bootstrap/parser.py',952),
  ('toplevel -> import','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',963),
  ('toplevel -> typedecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',964),
  ('toplevel -> fundecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',965),
  ('toplevel -> methoddecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',966),
  ('toplevel -> intfdecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',967),
  ('toplevel -> static_pattern','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',968),
  ('module -> empty','module',1,'p_module','/home/e/nc/n/bootstrap/parser.py',972),
  ('module -> toplevel EOL module','module',3,'p_module','/home/e/nc/n/bootstrap/parser.py',973),
]
