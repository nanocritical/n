
# bootstrap/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = ':L\x0c\x0c\xcc\x03\xb3\x9f\x0fLk{@\xd2g7'
    
_lr_action_items = {'EOB':([112,137,180,222,247,284,],[186,220,-6,-8,-7,-9,]),'ELIF':([306,335,],[320,320,]),'RETURN':([52,94,100,123,136,144,180,],[89,89,89,89,89,89,89,]),'NEG':([52,54,56,61,65,89,92,93,94,95,97,98,100,101,102,104,105,109,110,113,117,118,120,123,124,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[91,91,91,-37,-25,91,-44,-42,91,91,-43,-46,91,91,-85,-23,-24,-22,-13,-47,91,-45,-48,91,91,-48,-36,91,91,-35,-38,-13,-50,91,-51,91,-54,-53,-87,-86,91,-15,-14,-4,-56,-55,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,91,91,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,91,-91,-20,-19,91,-84,91,]),'NUMBER':([52,54,56,61,65,89,91,92,93,94,95,96,97,98,100,101,102,104,105,109,110,113,115,116,117,118,120,123,124,125,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[93,93,93,-37,-25,93,93,-44,-42,93,93,93,-43,-46,93,93,-85,-23,-24,-22,-13,-47,93,93,93,-45,-48,93,93,93,-48,-36,93,93,-35,-38,-13,-50,93,-51,93,-54,-53,-87,-86,93,-15,-14,-4,-56,-55,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,93,93,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,93,-91,-20,-19,93,-84,93,]),'CTX_ASSERT':([52,94,100,123,136,144,180,],[94,94,94,94,94,94,94,]),'EOL':([1,6,8,9,12,13,15,16,26,27,32,53,61,63,65,68,71,81,82,83,84,89,90,92,93,97,98,99,102,103,104,105,108,109,110,113,118,119,120,121,122,124,126,127,128,129,131,132,134,135,138,140,141,142,143,146,151,152,155,160,161,165,166,167,169,171,172,176,177,178,179,182,184,186,188,189,192,197,210,215,216,217,218,219,220,222,223,224,225,226,227,229,230,231,239,240,243,244,245,246,248,249,253,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,286,287,288,295,296,298,300,302,303,308,313,315,316,318,319,322,323,324,325,327,328,330,332,333,334,336,],[-164,-166,-169,-168,28,-163,-167,-165,-160,-158,-102,-104,-37,-10,-25,-154,-156,-159,-11,-162,-161,-112,-92,-44,-42,-43,-46,-93,-85,-109,-23,-24,180,-22,-13,-47,-45,-111,-48,-117,-118,-94,-103,-48,-101,-106,-134,-155,-36,-130,-1,-131,222,-2,-3,-35,-38,-157,-142,-12,-146,-113,-13,-50,-125,-51,-126,-54,-53,-87,-86,-15,-14,-4,-56,-55,-127,-78,-76,-52,-105,-107,-135,-132,-5,-10,-133,-128,-34,-30,-33,-31,-26,-143,-147,-150,-114,-79,-83,-49,-21,-16,-17,306,-110,-70,-71,-75,-66,-57,-82,-80,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-77,-60,-61,-74,-59,-108,-39,-40,-41,-27,-29,-32,-151,-49,-18,-91,-20,-19,-129,-148,-144,-84,-115,-116,-122,-81,-28,-152,-149,-145,-123,-153,335,-121,-120,]),'WHILE':([52,94,100,123,136,144,180,],[95,95,95,95,95,95,95,]),'IDENT':([3,4,5,10,14,17,18,19,20,23,24,25,30,31,36,37,38,39,42,43,46,48,49,51,52,54,55,56,57,60,61,62,63,64,65,66,69,73,79,80,82,86,87,89,91,92,93,94,95,96,97,98,100,101,102,104,105,109,110,111,113,114,115,116,117,118,120,123,124,125,127,128,134,136,144,145,146,149,151,154,156,157,158,159,164,166,167,168,171,175,176,177,178,179,180,181,182,183,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,221,222,225,226,228,229,230,234,236,238,244,245,246,248,249,252,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,283,285,289,291,293,296,297,298,299,300,302,303,307,309,311,316,317,320,],[20,20,23,27,27,30,33,20,36,40,36,36,40,51,36,65,65,40,75,36,27,82,75,40,110,110,65,110,65,65,-37,65,82,65,-25,65,65,75,158,159,82,75,75,110,166,-44,-42,110,110,166,-43,-46,110,110,-85,-23,-24,-22,-13,40,-47,40,166,166,110,-45,-48,110,110,166,-48,-101,-36,110,110,224,-35,65,-38,75,75,234,40,40,75,-13,-50,110,-51,110,-54,-53,-87,-86,110,248,249,250,253,-4,-56,-55,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-52,65,82,-34,-30,65,65,-26,40,75,75,-79,-83,-49,-21,-16,250,-17,110,110,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,65,65,75,75,75,-49,65,-18,110,-91,-20,-19,110,65,75,-84,-88,110,]),'LLE':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,202,-48,-36,-35,-38,-13,-50,-51,202,-54,-53,-87,-86,-15,-14,-4,-56,-55,202,-52,-34,-30,-26,202,-79,-83,-49,-21,-16,-17,-70,-71,202,-66,None,202,202,-65,None,-69,-68,-72,-67,202,202,-73,None,202,-74,None,-49,-18,-91,-20,-19,-84,202,]),'DYNINTF':([0,28,63,222,],[4,4,4,4,]),'LSHIFT':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,194,-48,-36,-35,-38,-13,-50,-51,194,-54,-53,-87,-86,-15,-14,-4,-56,-55,194,-52,-34,-30,-26,194,-79,-83,-49,-21,-16,-17,None,None,194,-66,194,194,194,-65,194,-69,-68,194,-67,194,194,194,194,194,194,194,-49,-18,-91,-20,-19,-84,194,]),'FUN':([0,7,28,63,222,],[5,25,5,5,5,]),'RSHIFT':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,193,-48,-36,-35,-38,-13,-50,-51,193,-54,-53,-87,-86,-15,-14,-4,-56,-55,193,-52,-34,-30,-26,193,-79,-83,-49,-21,-16,-17,None,None,193,-66,193,193,193,-65,193,-69,-68,193,-67,193,193,193,193,193,193,193,-49,-18,-91,-20,-19,-84,193,]),'SIZEOF':([52,54,56,61,65,89,91,92,93,94,95,96,97,98,100,101,102,104,105,109,110,113,115,116,117,118,120,123,124,125,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[113,113,113,-37,-25,113,113,-44,-42,113,113,113,-43,-46,113,113,-85,-23,-24,-22,-13,-47,113,113,113,-45,-48,113,113,113,-48,-36,113,113,-35,-38,-13,-50,113,-51,113,-54,-53,-87,-86,113,-15,-14,-4,-56,-55,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,113,113,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,113,-91,-20,-19,113,-84,113,]),'NULL':([52,54,56,61,65,89,91,92,93,94,95,96,97,98,100,101,102,104,105,109,110,113,115,116,117,118,120,123,124,125,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[98,98,98,-37,-25,98,98,-44,-42,98,98,98,-43,-46,98,98,-85,-23,-24,-22,-13,-47,98,98,98,-45,-48,98,98,98,-48,-36,98,98,-35,-38,-13,-50,98,-51,98,-54,-53,-87,-86,98,-15,-14,-4,-56,-55,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,98,98,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,98,-91,-20,-19,98,-84,98,]),'TRUE':([52,54,56,61,65,89,91,92,93,94,95,96,97,98,100,101,102,104,105,109,110,113,115,116,117,118,120,123,124,125,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[92,92,92,-37,-25,92,92,-44,-42,92,92,92,-43,-46,92,92,-85,-23,-24,-22,-13,-47,92,92,92,-45,-48,92,92,92,-48,-36,92,92,-35,-38,-13,-50,92,-51,92,-54,-53,-87,-86,92,-15,-14,-4,-56,-55,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,92,92,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,92,-91,-20,-19,92,-84,92,]),'UBWNOT':([52,54,56,61,65,89,92,93,94,95,97,98,100,101,102,104,105,109,110,113,117,118,120,123,124,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[96,96,96,-37,-25,96,-44,-42,96,96,-43,-46,96,96,-85,-23,-24,-22,-13,-47,96,-45,-48,96,96,-48,-36,96,96,-35,-38,-13,-50,96,-51,96,-54,-53,-87,-86,96,-15,-14,-4,-56,-55,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,96,96,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,96,-91,-20,-19,96,-84,96,]),'DOT':([27,37,38,42,49,55,57,60,61,62,64,65,66,69,73,86,87,92,93,97,98,102,104,105,109,110,113,118,120,127,134,146,149,150,151,154,156,164,166,182,184,221,225,226,228,229,230,236,238,246,248,249,253,283,285,289,291,293,297,298,302,303,309,311,],[46,64,64,64,64,64,64,64,-37,64,64,-25,64,64,64,64,64,-44,-42,-43,-46,177,-23,-24,181,184,-47,-45,-48,-48,-36,-35,64,64,-38,64,64,64,184,-15,-14,64,-34,-30,64,64,-26,64,64,-49,-21,-16,303,64,64,64,64,64,64,-18,-20,-19,64,64,]),'DIVIDE':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,204,-48,-36,-35,-38,-13,-50,-51,204,-54,-53,-87,-86,-15,-14,-4,-56,-55,204,-52,-34,-30,-26,204,-79,-83,-49,-21,-16,-17,204,204,204,204,204,204,204,204,204,None,None,204,-67,204,204,204,204,204,204,204,-49,-18,-91,-20,-19,-84,204,]),'SOB':([32,37,38,57,59,60,61,65,70,74,75,76,77,85,90,92,93,97,98,99,102,104,105,106,107,109,110,113,118,124,126,127,128,129,130,133,134,146,151,153,162,163,166,167,170,171,176,177,178,179,182,184,186,188,189,190,197,210,215,225,226,230,232,233,241,244,245,246,248,249,253,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,292,294,296,298,300,302,303,304,305,310,312,314,316,321,323,326,329,331,],[52,63,63,63,63,-99,-37,-25,63,-138,-25,52,-139,52,-92,-44,-42,-43,-46,-93,-85,-23,-24,52,52,-22,-13,-47,-45,-94,52,-48,-101,52,63,-100,-36,-35,-38,52,52,52,-13,-50,52,-51,-54,-53,-87,-86,-15,-14,-4,-56,-55,52,-78,-76,-52,-34,-30,-26,-140,-141,52,-79,-83,-49,-21,-16,-17,-70,-71,-75,-66,-57,-82,-80,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-77,-60,-61,-74,-59,52,52,-49,-18,-91,-20,-19,52,52,52,52,52,-84,52,-81,52,52,52,]),'LGE':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,211,-48,-36,-35,-38,-13,-50,-51,211,-54,-53,-87,-86,-15,-14,-4,-56,-55,211,-52,-34,-30,-26,211,-79,-83,-49,-21,-16,-17,-70,-71,211,-66,None,211,211,-65,None,-69,-68,-72,-67,211,211,-73,None,211,-74,None,-49,-18,-91,-20,-19,-84,211,]),')':([36,44,45,58,61,65,78,92,93,97,98,102,104,105,109,110,113,118,127,134,146,147,148,151,166,167,171,173,174,175,176,177,178,179,182,184,186,188,189,197,210,215,225,226,227,229,230,242,244,245,246,248,249,253,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,287,288,296,298,300,302,303,316,323,324,],[-95,79,80,-96,-37,-25,157,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,-36,-35,225,226,-38,-13,-50,-51,244,245,246,-54,-53,-87,-86,-15,-14,-4,-56,-55,-78,-76,-52,-34,-30,-33,-31,-26,296,-79,-83,-49,-21,-16,-17,-70,-71,-75,-66,-57,-82,-80,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-77,-60,-61,-74,-59,-27,-29,-32,-49,-18,-91,-20,-19,-84,-81,-28,]),'(':([0,28,37,38,42,49,52,54,55,56,57,60,61,62,63,64,65,66,69,73,86,87,89,91,92,93,94,95,96,97,98,100,101,102,104,105,109,110,113,115,116,117,118,120,123,124,125,127,134,136,144,146,149,151,154,156,164,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,221,222,225,226,228,229,230,236,238,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,283,285,289,291,293,296,297,298,299,300,302,303,307,309,311,316,320,],[7,7,66,66,66,66,101,101,66,101,66,66,-37,66,7,66,-25,66,66,66,66,66,101,168,-44,-42,101,101,168,-43,-46,101,101,-85,-23,-24,-22,-13,-47,168,168,101,-45,-48,101,101,168,-48,-36,101,101,-35,66,-38,66,66,66,-13,-50,101,-51,101,-54,-53,-87,-86,101,-15,-14,-4,-56,-55,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-52,66,7,-34,-30,66,66,-26,66,66,-79,-83,-49,-21,-16,-17,101,101,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,66,66,66,66,66,-49,66,-18,101,-91,-20,-19,101,66,66,-84,101,]),'*':([48,],[84,]),'MINUS':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,196,-48,-36,-35,-38,-13,-50,-51,196,-54,-53,-87,-86,-15,-14,-4,-56,-55,196,-52,-34,-30,-26,196,-79,-83,-49,-21,-16,-17,196,196,196,-66,196,196,196,-65,196,-69,-68,196,-67,196,196,196,196,196,196,196,-49,-18,-91,-20,-19,-84,196,]),'FUTURE':([52,54,56,61,65,89,92,93,94,95,97,98,100,101,102,104,105,109,110,113,117,118,120,123,124,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[106,106,106,-37,-25,106,-44,-42,106,106,-43,-46,106,106,-85,-23,-24,-22,-13,-47,106,-45,-48,106,106,-48,-36,106,106,-35,-38,-13,-50,106,-51,106,-54,-53,-87,-86,106,-15,-14,-4,-56,-55,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,106,106,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,106,-91,-20,-19,106,-84,106,]),'COMMA':([61,65,74,75,77,92,93,97,98,102,104,105,109,110,113,118,120,124,127,128,134,146,149,151,166,167,171,175,176,177,178,179,182,184,186,188,189,215,225,226,230,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,283,286,296,298,300,302,303,316,],[-37,-25,154,-25,156,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,199,-48,-101,-36,-35,228,-38,-13,-50,-51,199,-54,-53,-87,-86,-15,-14,-4,-56,-55,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,-70,-71,-75,-66,-57,307,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,228,309,-49,-18,-91,-20,-19,-84,]),'BLOCK':([52,54,56,61,65,89,92,93,94,95,97,98,100,101,102,104,105,109,110,113,117,118,120,123,124,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[107,107,107,-37,-25,107,-44,-42,107,107,-43,-46,107,107,-85,-23,-24,-22,-13,-47,107,-45,-48,107,107,-48,-36,107,107,-35,-38,-13,-50,107,-51,107,-54,-53,-87,-86,107,-15,-14,-4,-56,-55,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,107,107,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,107,-91,-20,-19,107,-84,107,]),'LNE':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,200,-48,-36,-35,-38,-13,-50,-51,200,-54,-53,-87,-86,-15,-14,-4,-56,-55,200,-52,-34,-30,-26,200,-79,-83,-49,-21,-16,-17,-70,-71,-75,-66,-57,200,None,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,None,-74,-59,-49,-18,-91,-20,-19,-84,200,]),'IMPORT':([0,27,28,29,63,81,222,],[10,-158,10,48,10,-159,10,]),':':([33,40,75,82,139,160,246,],[55,55,55,-11,221,-12,297,]),'ASSIGN':([20,21,22,23,30,32,33,34,35,36,39,41,50,51,58,61,65,72,88,104,105,109,110,120,128,134,146,151,158,159,182,184,225,226,230,234,235,237,248,249,250,253,290,298,302,303,],[-98,37,38,42,49,54,56,57,-97,-95,-136,73,86,87,-96,-37,-25,-137,164,-23,-24,-22,-13,191,-101,-36,-35,-38,236,238,-15,-14,-34,-30,-26,289,291,293,-21,-16,299,-17,311,-18,-20,-19,]),'?':([37,38,42,49,55,57,60,61,62,64,65,66,69,73,86,87,134,146,149,151,154,156,164,221,225,226,228,229,230,236,238,283,285,289,291,293,297,309,311,],[69,69,69,69,69,69,69,-37,69,69,-25,69,69,69,69,69,-36,-35,69,-38,69,69,69,69,-34,-30,69,69,-26,69,69,69,69,69,69,69,69,69,69,]),'$end':([0,2,11,28,47,],[-10,0,-170,-10,-171,]),'PLUS':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,201,-48,-36,-35,-38,-13,-50,-51,201,-54,-53,-87,-86,-15,-14,-4,-56,-55,201,-52,-34,-30,-26,201,-79,-83,-49,-21,-16,-17,201,201,201,-66,201,201,201,-65,201,-69,-68,201,-67,201,201,201,201,201,201,201,-49,-18,-91,-20,-19,-84,201,]),'INTF':([0,28,63,222,],[3,3,3,3,]),'MODULO':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,203,-48,-36,-35,-38,-13,-50,-51,203,-54,-53,-87,-86,-15,-14,-4,-56,-55,203,-52,-34,-30,-26,203,-79,-83,-49,-21,-16,-17,203,203,203,203,203,203,203,203,203,None,None,203,-67,203,203,203,203,203,203,203,-49,-18,-91,-20,-19,-84,203,]),'STRING':([52,54,56,61,65,89,91,92,93,94,95,96,97,98,100,101,102,104,105,109,110,113,115,116,117,118,120,123,124,125,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[97,97,97,-37,-25,97,97,-44,-42,97,97,97,-43,-46,97,97,-85,-23,-24,-22,-13,-47,97,97,97,-45,-48,97,97,97,-48,-36,97,97,-35,-38,-13,-50,97,-51,97,-54,-53,-87,-86,97,-15,-14,-4,-56,-55,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,97,97,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,97,-91,-20,-19,97,-84,97,]),'FOR':([52,94,100,123,136,144,180,],[111,111,111,111,111,111,111,]),'BWAND':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,205,-48,-36,-35,-38,-13,-50,-51,205,-54,-53,-87,-86,-15,-14,-4,-56,-55,205,-52,-34,-30,-26,205,-79,-83,-49,-21,-16,-17,-70,-71,205,-66,205,205,205,-65,205,-69,-68,-72,-67,205,205,205,205,205,205,205,-49,-18,-91,-20,-19,-84,205,]),'TIMES':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,206,-48,-36,-35,-38,-13,-50,-51,206,-54,-53,-87,-86,-15,-14,-4,-56,-55,206,-52,-34,-30,-26,206,-79,-83,-49,-21,-16,-17,206,206,206,206,206,206,206,206,206,206,206,206,-67,206,206,206,206,206,206,206,-49,-18,-91,-20,-19,-84,206,]),'PFOR':([52,94,100,123,136,144,180,],[114,114,114,114,114,114,114,]),'BANG':([17,24,37,38,42,49,55,57,60,61,62,64,65,66,69,73,86,87,92,93,97,98,102,104,105,109,110,113,118,120,127,134,146,149,150,151,154,156,164,166,182,184,221,225,226,228,229,230,236,238,246,248,249,253,283,285,289,291,293,297,298,302,303,309,311,],[31,43,62,62,62,62,62,62,62,-37,62,62,-25,62,62,62,62,62,-44,-42,-43,-46,176,-23,-24,-22,182,-47,-45,-48,-48,-36,-35,62,62,-38,62,62,62,182,-15,-14,62,-34,-30,62,62,-26,62,62,-49,-21,298,302,62,62,62,62,62,62,-18,-20,-19,62,62,]),'REFBANG':([52,54,56,61,65,89,92,93,94,95,97,98,100,101,102,104,105,109,110,113,117,118,120,123,124,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[115,115,115,-37,-25,115,-44,-42,115,115,-43,-46,115,115,-85,-23,-24,-22,-13,-47,115,-45,-48,115,115,-48,-36,115,115,-35,-38,-13,-50,115,-51,115,-54,-53,-87,-86,115,-15,-14,-4,-56,-55,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,115,115,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,115,-91,-20,-19,115,-84,115,]),'ARROW':([224,],[285,]),'IN':([61,65,128,134,146,151,185,187,225,226,230,],[-37,-25,-101,-36,-35,-38,254,255,-34,-30,-26,]),'FALSE':([52,54,56,61,65,89,91,92,93,94,95,96,97,98,100,101,102,104,105,109,110,113,115,116,117,118,120,123,124,125,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[118,118,118,-37,-25,118,118,-44,-42,118,118,118,-43,-46,118,118,-85,-23,-24,-22,-13,-47,118,118,118,-45,-48,118,118,118,-48,-36,118,118,-35,-38,-13,-50,118,-51,118,-54,-53,-87,-86,118,-15,-14,-4,-56,-55,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,118,118,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,118,-91,-20,-19,118,-84,118,]),'[':([37,38,42,49,55,57,60,61,62,64,65,66,69,73,86,87,134,146,149,151,154,156,164,221,225,226,228,229,230,236,238,283,285,289,291,293,297,309,311,],[67,67,67,67,67,67,67,-37,67,67,-25,67,67,67,67,67,-36,-35,67,-38,67,67,67,67,-34,-30,67,67,-26,67,67,67,67,67,67,67,67,67,67,]),'ELSE':([186,306,322,333,336,],[-4,321,331,-119,-120,]),']':([67,],[150,]),'REFDOT':([52,54,56,61,65,89,92,93,94,95,97,98,100,101,102,104,105,109,110,113,117,118,120,123,124,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[116,116,116,-37,-25,116,-44,-42,116,116,-43,-46,116,116,-85,-23,-24,-22,-13,-47,116,-45,-48,116,116,-48,-36,116,116,-35,-38,-13,-50,116,-51,116,-54,-53,-87,-86,116,-15,-14,-4,-56,-55,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,116,116,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,116,-91,-20,-19,116,-84,116,]),'IF':([52,94,100,123,136,144,180,],[117,117,117,117,117,117,117,]),'AND':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,208,-48,-36,-35,-38,-13,-50,-51,208,-54,-53,-87,-86,-15,-14,-4,-56,-55,208,-52,-34,-30,-26,208,-79,-83,-49,-21,-16,-17,-70,-71,-75,-66,-57,208,208,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,208,-74,-59,-49,-18,-91,-20,-19,-84,208,]),'LLT':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,198,-48,-36,-35,-38,-13,-50,-51,198,-54,-53,-87,-86,-15,-14,-4,-56,-55,198,-52,-34,-30,-26,198,-79,-83,-49,-21,-16,-17,-70,-71,198,-66,None,198,198,-65,None,-69,-68,-72,-67,198,198,-73,None,198,-74,None,-49,-18,-91,-20,-19,-84,198,]),'BWOR':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,209,-48,-36,-35,-38,-13,-50,-51,209,-54,-53,-87,-86,-15,-14,-4,-56,-55,209,-52,-34,-30,-26,209,-79,-83,-49,-21,-16,-17,-70,-71,209,-66,209,209,209,-65,209,-69,-68,-72,-67,209,209,-73,209,209,-74,209,-49,-18,-91,-20,-19,-84,209,]),'FROM':([0,28,63,222,],[14,14,14,14,]),'}':([61,65,92,93,97,98,102,104,105,109,110,113,118,127,134,146,151,166,167,171,176,177,178,179,182,184,186,188,189,215,225,226,230,244,245,246,248,249,251,252,253,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,301,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,-36,-35,-38,-13,-50,-51,-54,-53,-87,-86,-15,-14,-4,-56,-55,-52,-34,-30,-26,-79,-83,-49,-21,-16,300,-89,-17,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,-91,-90,-20,-19,-84,-88,]),'ISA':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,195,-48,-36,-35,-38,-13,-50,-51,195,-54,-53,-87,-86,-15,-14,-4,-56,-55,195,-52,-34,-30,-26,195,-79,-83,-49,-21,-16,-17,-70,-71,None,-66,-57,195,195,-65,-58,-69,-68,-72,-67,195,195,-73,-60,195,-74,-59,-49,-18,-91,-20,-19,-84,195,]),'OR':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,207,-48,-36,-35,-38,-13,-50,-51,207,-54,-53,-87,-86,-15,-14,-4,-56,-55,207,-52,-34,-30,-26,207,-79,-83,-49,-21,-16,-17,-70,-71,-75,-66,-57,207,207,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,207,-74,-59,-49,-18,-91,-20,-19,-84,207,]),'METHOD':([0,7,28,63,222,],[17,24,17,17,17,]),'BREAK':([52,94,100,123,136,144,180,],[121,121,121,121,121,121,121,]),'CTX_SEMASSERT':([52,63,94,100,123,136,144,180,222,],[100,136,100,100,100,100,100,100,136,]),'CONTINUE':([52,94,100,123,136,144,180,],[122,122,122,122,122,122,122,]),'LET':([0,28,52,63,94,100,123,136,144,180,222,],[18,18,18,18,18,18,18,18,18,18,18,]),'CTX_SEMCLAIM':([52,63,94,100,123,136,144,180,222,],[123,144,123,123,123,123,123,123,144,]),'LEQ':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,212,-48,-36,-35,-38,-13,-50,-51,212,-54,-53,-87,-86,-15,-14,-4,-56,-55,212,-52,-34,-30,-26,212,-79,-83,-49,-21,-16,-17,-70,-71,-75,-66,-57,212,None,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,None,-74,-59,-49,-18,-91,-20,-19,-84,212,]),'NOT':([52,54,56,61,65,89,92,93,94,95,97,98,100,101,102,104,105,109,110,113,117,118,120,123,124,127,134,136,144,146,151,166,167,168,171,175,176,177,178,179,180,182,184,186,188,189,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,230,244,245,246,248,249,253,254,255,258,259,260,261,262,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,299,300,302,303,307,316,320,],[125,125,125,-37,-25,125,-44,-42,125,125,-43,-46,125,125,-85,-23,-24,-22,-13,-47,125,-45,-48,125,125,-48,-36,125,125,-35,-38,-13,-50,125,-51,125,-54,-53,-87,-86,125,-15,-14,-4,-56,-55,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-52,-34,-30,-26,-79,-83,-49,-21,-16,-17,125,125,-70,-71,-75,-66,-57,-62,-65,-58,-69,-68,-72,-67,-64,-63,-73,-60,-61,-74,-59,-49,-18,125,-91,-20,-19,125,-84,125,]),'{':([110,],[183,]),'TYPE':([0,28,63,222,],[19,19,19,19,]),'BWXOR':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,213,-48,-36,-35,-38,-13,-50,-51,213,-54,-53,-87,-86,-15,-14,-4,-56,-55,213,-52,-34,-30,-26,213,-79,-83,-49,-21,-16,-17,-70,-71,213,-66,213,213,213,-65,213,-69,-68,-72,-67,213,213,213,213,213,-74,213,-49,-18,-91,-20,-19,-84,213,]),'LGT':([61,65,92,93,97,98,102,104,105,109,110,113,118,120,124,127,134,146,151,166,167,171,175,176,177,178,179,182,184,186,188,189,210,215,225,226,230,242,244,245,246,248,249,253,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,296,298,300,302,303,316,317,],[-37,-25,-44,-42,-43,-46,-85,-23,-24,-22,-13,-47,-45,-48,214,-48,-36,-35,-38,-13,-50,-51,214,-54,-53,-87,-86,-15,-14,-4,-56,-55,214,-52,-34,-30,-26,214,-79,-83,-49,-21,-16,-17,-70,-71,214,-66,None,214,214,-65,None,-69,-68,-72,-67,214,214,-73,None,214,-74,None,-49,-18,-91,-20,-19,-84,214,]),'|':([63,222,],[145,145,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initializer_pair':([183,252,],[252,252,]),'expr_call':([52,54,56,89,94,95,100,101,117,123,136,144,180,191,254,255,320,],[90,90,90,90,90,90,90,173,90,90,90,90,90,90,90,90,90,]),'typedecl':([0,28,63,222,],[1,1,1,1,]),'expr_tuple_list':([199,307,],[263,323,]),'elif_list':([306,335,],[322,336,]),'typedecl_block_blocklist':([63,222,],[137,284,]),'module':([0,28,],[2,47,]),'value_3':([52,54,56,89,91,94,95,96,100,101,115,116,117,123,124,125,136,144,168,175,180,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,254,255,299,307,320,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'typedeclname':([3,4,19,],[21,22,34,]),'funargs':([23,30,39,51,158,159,234,],[41,50,72,88,235,237,290,]),'typedecl_block':([37,38,57,59,70,130,],[68,71,131,132,152,218,]),'methoddecl':([0,28,63,222,],[6,6,6,6,]),'expr_call_list':([124,175,210,],[197,197,275,]),'isalist':([37,38,57,60,],[59,70,130,133,]),'type_app_list':([149,229,283,],[227,288,227,]),'expr_postfix':([52,54,56,89,91,94,95,96,100,101,115,116,117,123,124,125,136,144,168,175,180,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,254,255,299,307,320,],[102,102,102,102,167,102,102,171,102,102,188,189,102,102,102,215,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'vardecl':([0,28,52,63,94,100,123,136,144,180,222,],[8,8,103,8,103,103,103,103,103,103,8,]),'expr_tuple':([52,54,56,89,94,95,100,101,117,123,136,144,180,191,254,255,320,],[99,99,99,99,99,99,99,174,99,99,99,99,99,99,99,99,99,]),'value_2':([52,54,56,89,91,94,95,96,100,101,115,116,117,123,124,125,136,144,168,175,180,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,254,255,299,307,320,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'statements_block':([32,76,85,106,107,126,129,153,162,163,170,190,241,292,294,304,305,310,312,314,321,326,329,331,],[53,155,161,178,179,216,217,231,239,240,243,256,295,313,315,318,319,325,327,328,330,332,333,334,]),'dynintfdecl':([0,28,63,222,],[9,9,9,9,]),'statement':([52,94,100,123,136,144,180,],[108,169,172,192,219,223,108,]),'value_fieldacc':([52,54,56,89,91,94,95,96,100,101,115,116,117,123,124,125,136,144,168,175,180,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,254,255,299,307,320,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'import':([0,28,63,222,],[13,13,13,13,]),'type':([37,38,42,49,55,57,60,62,64,66,69,73,86,87,149,154,156,164,221,228,229,236,238,283,285,289,291,293,297,309,311,],[60,60,77,77,128,60,60,134,146,149,151,77,77,77,229,77,77,77,283,286,229,77,77,229,308,77,77,77,316,286,77,]),'empty':([0,28,63,222,],[11,11,138,138,]),'typedident':([18,23,30,39,42,49,51,73,86,87,111,114,154,156,158,159,164,234,236,238,289,291,293,311,],[32,39,39,39,74,74,39,74,74,74,185,187,74,74,39,39,74,39,74,74,74,74,74,74,]),'type_top':([221,],[280,]),'funretvals':([42,49,73,86,87,154,156,164,236,238,289,291,293,311,],[76,85,153,162,163,232,233,241,292,294,310,312,314,326,]),'idents':([48,63,82,222,],[83,139,160,139,]),'statements_block_blocklist':([52,180,],[112,247,]),'initializer_list':([183,252,],[251,301,]),'type_app':([66,221,],[147,281,]),'toplevel':([0,28,63,222,],[12,12,140,140,]),'type_ref':([37,38,42,49,55,57,60,62,64,66,69,73,86,87,149,150,154,156,164,221,228,229,236,238,283,285,289,291,293,297,309,311,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,230,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'typedeclname_list':([20,24,25,36,43,],[35,44,45,58,78,]),'type_tuple_list':([228,309,],[287,324,]),'modname':([10,14,46,],[26,29,81,]),'typedecl_statement':([63,222,],[141,141,]),'fieldchoicedecl':([63,222,],[135,135,]),'intfdecl':([0,28,63,222,],[15,15,15,15,]),'expr':([52,54,56,89,94,95,100,101,117,123,124,136,144,168,175,180,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,254,255,299,307,320,],[124,124,124,124,124,124,124,175,124,124,210,124,124,242,210,124,124,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,210,276,277,278,279,124,124,317,264,124,]),'choicedecl':([63,222,],[142,142,]),'fundecl':([0,28,63,222,],[16,16,16,16,]),'value':([52,54,56,89,91,94,95,96,100,101,115,116,117,123,124,125,136,144,168,175,180,191,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,254,255,299,307,320,],[120,127,127,127,127,120,127,127,120,127,127,127,127,120,127,127,120,120,127,127,120,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'fielddecl':([63,222,],[143,143,]),'type_tuple':([66,221,],[148,282,]),'expr_top':([52,54,56,89,94,95,100,117,123,136,144,180,191,254,255,320,],[119,126,129,165,119,170,119,190,119,119,119,119,257,304,305,329,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('fieldchoicedecl -> empty','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',162),
  ('fieldchoicedecl -> choicedecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',163),
  ('fieldchoicedecl -> fielddecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',164),
  ('statements_block -> SOB statements_block_blocklist EOB','statements_block',3,'p_statements_block','/home/e/nc/n/bootstrap/parser.py',175),
  ('typedecl_block -> SOB typedecl_block_blocklist EOB','typedecl_block',3,'p_typedecl_block','/home/e/nc/n/bootstrap/parser.py',175),
  ('statements_block_blocklist -> statement EOL','statements_block_blocklist',2,'p_statements_block_blocklist','/home/e/nc/n/bootstrap/parser.py',180),
  ('statements_block_blocklist -> statement EOL statements_block_blocklist','statements_block_blocklist',3,'p_statements_block_blocklist','/home/e/nc/n/bootstrap/parser.py',181),
  ('typedecl_block_blocklist -> typedecl_statement EOL','typedecl_block_blocklist',2,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/parser.py',180),
  ('typedecl_block_blocklist -> typedecl_statement EOL typedecl_block_blocklist','typedecl_block_blocklist',3,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/parser.py',181),
  ('empty -> <empty>','empty',0,'p_empty','/home/e/nc/n/bootstrap/parser.py',212),
  ('idents -> IDENT','idents',1,'p_idents','/home/e/nc/n/bootstrap/parser.py',216),
  ('idents -> IDENT idents','idents',2,'p_idents','/home/e/nc/n/bootstrap/parser.py',217),
  ('value_3 -> IDENT','value_3',1,'p_value_ident','/home/e/nc/n/bootstrap/parser.py',224),
  ('value_3 -> IDENT DOT','value_3',2,'p_value_deref','/home/e/nc/n/bootstrap/parser.py',228),
  ('value_3 -> IDENT BANG','value_3',2,'p_value_deref','/home/e/nc/n/bootstrap/parser.py',229),
  ('value_fieldacc -> IDENT BANG IDENT','value_fieldacc',3,'p_value_fieldacc_bang','/home/e/nc/n/bootstrap/parser.py',233),
  ('value_fieldacc -> IDENT DOT IDENT','value_fieldacc',3,'p_value_fieldacc_bang','/home/e/nc/n/bootstrap/parser.py',234),
  ('value_fieldacc -> IDENT BANG IDENT BANG','value_fieldacc',4,'p_value_fieldacc_bang_deref','/home/e/nc/n/bootstrap/parser.py',238),
  ('value_fieldacc -> IDENT DOT IDENT DOT','value_fieldacc',4,'p_value_fieldacc_bang_deref','/home/e/nc/n/bootstrap/parser.py',239),
  ('value_fieldacc -> IDENT DOT IDENT BANG','value_fieldacc',4,'p_value_fieldacc_bang_deref','/home/e/nc/n/bootstrap/parser.py',240),
  ('value_fieldacc -> value_fieldacc DOT IDENT','value_fieldacc',3,'p_value_fieldacc_dot','/home/e/nc/n/bootstrap/parser.py',244),
  ('value_2 -> value_fieldacc','value_2',1,'p_value_fieldacc','/home/e/nc/n/bootstrap/parser.py',248),
  ('value_2 -> value_3','value_2',1,'p_value_2','/home/e/nc/n/bootstrap/parser.py',265),
  ('value -> value_2','value',1,'p_value','/home/e/nc/n/bootstrap/parser.py',269),
  ('type -> IDENT','type',1,'p_type_name','/home/e/nc/n/bootstrap/parser.py',273),
  ('type -> [ ] type_ref','type',3,'p_type_slice','/home/e/nc/n/bootstrap/parser.py',277),
  ('type_tuple_list -> type','type_tuple_list',1,'p_type_tuple_list','/home/e/nc/n/bootstrap/parser.py',281),
  ('type_tuple_list -> type COMMA type_tuple_list','type_tuple_list',3,'p_type_tuple_list','/home/e/nc/n/bootstrap/parser.py',282),
  ('type_tuple -> type COMMA type_tuple_list','type_tuple',3,'p_type_tuple_only','/home/e/nc/n/bootstrap/parser.py',289),
  ('type -> ( type_tuple )','type',3,'p_type_tuple','/home/e/nc/n/bootstrap/parser.py',293),
  ('type_app_list -> type','type_app_list',1,'p_type_app_list','/home/e/nc/n/bootstrap/parser.py',297),
  ('type_app_list -> type type_app_list','type_app_list',2,'p_type_app_list','/home/e/nc/n/bootstrap/parser.py',298),
  ('type_app -> type type_app_list','type_app',2,'p_type_app_only','/home/e/nc/n/bootstrap/parser.py',305),
  ('type -> ( type_app )','type',3,'p_type_app','/home/e/nc/n/bootstrap/parser.py',309),
  ('type_ref -> DOT type','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/parser.py',313),
  ('type_ref -> BANG type','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/parser.py',314),
  ('type -> type_ref','type',1,'p_type_ref','/home/e/nc/n/bootstrap/parser.py',318),
  ('type -> ? type','type',2,'p_type_nullable','/home/e/nc/n/bootstrap/parser.py',322),
  ('type_top -> type_app','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',326),
  ('type_top -> type_tuple','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',327),
  ('type_top -> type','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',328),
  ('expr_postfix -> NUMBER','expr_postfix',1,'p_expr_postfix_literal','/home/e/nc/n/bootstrap/parser.py',332),
  ('expr_postfix -> STRING','expr_postfix',1,'p_expr_postfix_literal','/home/e/nc/n/bootstrap/parser.py',333),
  ('expr_postfix -> TRUE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/parser.py',337),
  ('expr_postfix -> FALSE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/parser.py',338),
  ('expr_postfix -> NULL','expr_postfix',1,'p_expr_postfix_null','/home/e/nc/n/bootstrap/parser.py',345),
  ('expr_postfix -> SIZEOF','expr_postfix',1,'p_expr_postfix_sizeof','/home/e/nc/n/bootstrap/parser.py',349),
  ('expr_postfix -> value','expr_postfix',1,'p_expr_postfix_value','/home/e/nc/n/bootstrap/parser.py',353),
  ('expr_postfix -> ( expr )','expr_postfix',3,'p_expr_postfix_group','/home/e/nc/n/bootstrap/parser.py',357),
  ('expr -> NEG expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',361),
  ('expr -> UBWNOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',362),
  ('expr -> NOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',363),
  ('expr -> expr_postfix DOT','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/parser.py',367),
  ('expr -> expr_postfix BANG','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/parser.py',368),
  ('expr -> REFDOT expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/parser.py',372),
  ('expr -> REFBANG expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/parser.py',373),
  ('expr -> expr LLT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',377),
  ('expr -> expr LLE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',378),
  ('expr -> expr LGT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',379),
  ('expr -> expr LGE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',380),
  ('expr -> expr LEQ expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',381),
  ('expr -> expr LNE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',382),
  ('expr -> expr AND expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/parser.py',386),
  ('expr -> expr OR expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/parser.py',387),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',391),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',392),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',393),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',394),
  ('expr -> expr MODULO expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',395),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',396),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',397),
  ('expr -> expr BWAND expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',398),
  ('expr -> expr BWOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',399),
  ('expr -> expr BWXOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',400),
  ('expr -> expr ISA expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',401),
  ('expr_call_list -> expr','expr_call_list',1,'p_expr_call_list','/home/e/nc/n/bootstrap/parser.py',405),
  ('expr_call_list -> expr expr_call_list','expr_call_list',2,'p_expr_call_list','/home/e/nc/n/bootstrap/parser.py',406),
  ('expr_call -> expr expr_call_list','expr_call',2,'p_expr_call_only','/home/e/nc/n/bootstrap/parser.py',413),
  ('expr -> ( expr_call )','expr',3,'p_expr_call','/home/e/nc/n/bootstrap/parser.py',417),
  ('expr_tuple_list -> expr','expr_tuple_list',1,'p_expr_tuple_list','/home/e/nc/n/bootstrap/parser.py',421),
  ('expr_tuple_list -> expr COMMA expr_tuple_list','expr_tuple_list',3,'p_expr_tuple_list','/home/e/nc/n/bootstrap/parser.py',422),
  ('expr_tuple -> expr COMMA expr_tuple_list','expr_tuple',3,'p_expr_tuple_only','/home/e/nc/n/bootstrap/parser.py',429),
  ('expr -> ( expr_tuple )','expr',3,'p_expr_tuple','/home/e/nc/n/bootstrap/parser.py',434),
  ('expr -> ( expr ) : type','expr',5,'p_expr_constrained','/home/e/nc/n/bootstrap/parser.py',438),
  ('expr -> expr_postfix','expr',1,'p_expr_postfix','/home/e/nc/n/bootstrap/parser.py',442),
  ('expr -> BLOCK statements_block','expr',2,'p_expr_block','/home/e/nc/n/bootstrap/parser.py',446),
  ('expr -> FUTURE statements_block','expr',2,'p_expr_future','/home/e/nc/n/bootstrap/parser.py',449),
  ('initializer_pair -> IDENT ASSIGN expr','initializer_pair',3,'p_expr_initializer_pair','/home/e/nc/n/bootstrap/parser.py',452),
  ('initializer_list -> initializer_pair','initializer_list',1,'p_expr_initializer_list','/home/e/nc/n/bootstrap/parser.py',456),
  ('initializer_list -> initializer_pair initializer_list','initializer_list',2,'p_expr_initializer_list','/home/e/nc/n/bootstrap/parser.py',457),
  ('expr -> IDENT { initializer_list }','expr',4,'p_expr_initializer','/home/e/nc/n/bootstrap/parser.py',464),
  ('expr_top -> expr_call','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',468),
  ('expr_top -> expr_tuple','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',469),
  ('expr_top -> expr','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',470),
  ('typedeclname_list -> IDENT','typedeclname_list',1,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',474),
  ('typedeclname_list -> IDENT typedeclname_list','typedeclname_list',2,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',475),
  ('typedeclname -> IDENT typedeclname_list','typedeclname',2,'p_typedeclname_generic','/home/e/nc/n/bootstrap/parser.py',482),
  ('typedeclname -> IDENT','typedeclname',1,'p_typedeclname','/home/e/nc/n/bootstrap/parser.py',486),
  ('isalist -> type','isalist',1,'p_isalist','/home/e/nc/n/bootstrap/parser.py',490),
  ('isalist -> type isalist','isalist',2,'p_isalist','/home/e/nc/n/bootstrap/parser.py',491),
  ('typedident -> IDENT : type','typedident',3,'p_typedident','/home/e/nc/n/bootstrap/parser.py',498),
  ('vardecl -> LET typedident','vardecl',2,'p_vardecl','/home/e/nc/n/bootstrap/parser.py',502),
  ('vardecl -> LET typedident ASSIGN expr_top','vardecl',4,'p_vardecl_expr','/home/e/nc/n/bootstrap/parser.py',506),
  ('vardecl -> LET typedident statements_block','vardecl',3,'p_vardecl_mutating','/home/e/nc/n/bootstrap/parser.py',511),
  ('vardecl -> LET typedident ASSIGN expr_top statements_block','vardecl',5,'p_vardecl_expr_mutating','/home/e/nc/n/bootstrap/parser.py',516),
  ('vardecl -> LET IDENT ASSIGN expr_top','vardecl',4,'p_vardecl_infer_expr','/home/e/nc/n/bootstrap/parser.py',522),
  ('vardecl -> LET IDENT ASSIGN expr_top statements_block','vardecl',5,'p_vardecl_infer_expr_mutating','/home/e/nc/n/bootstrap/parser.py',528),
  ('fielddecl -> idents : type_top','fielddecl',3,'p_fielddecl','/home/e/nc/n/bootstrap/parser.py',535),
  ('statement -> vardecl','statement',1,'p_statement_vardecl','/home/e/nc/n/bootstrap/parser.py',539),
  ('statement -> value ASSIGN expr_top','statement',3,'p_statement_assign','/home/e/nc/n/bootstrap/parser.py',543),
  ('statement -> expr_top','statement',1,'p_statement_expr','/home/e/nc/n/bootstrap/parser.py',547),
  ('statement -> RETURN','statement',1,'p_statement_return','/home/e/nc/n/bootstrap/parser.py',551),
  ('statement -> RETURN expr_top','statement',2,'p_statement_return','/home/e/nc/n/bootstrap/parser.py',552),
  ('statement -> WHILE expr_top statements_block','statement',3,'p_statement_while','/home/e/nc/n/bootstrap/parser.py',559),
  ('statement -> FOR typedident IN expr_top statements_block','statement',5,'p_statement_for','/home/e/nc/n/bootstrap/parser.py',563),
  ('statement -> PFOR typedident IN expr_top statements_block','statement',5,'p_statement_pfor','/home/e/nc/n/bootstrap/parser.py',567),
  ('statement -> BREAK','statement',1,'p_statement_break','/home/e/nc/n/bootstrap/parser.py',571),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','/home/e/nc/n/bootstrap/parser.py',575),
  ('elif_list -> ELIF expr_top statements_block','elif_list',3,'p_statement_elif_list','/home/e/nc/n/bootstrap/parser.py',579),
  ('elif_list -> ELIF expr_top statements_block EOL elif_list','elif_list',5,'p_statement_elif_list','/home/e/nc/n/bootstrap/parser.py',580),
  ('statement -> IF expr_top statements_block EOL elif_list ELSE statements_block','statement',7,'p_statement_if_elif_else','/home/e/nc/n/bootstrap/parser.py',587),
  ('statement -> IF expr_top statements_block EOL elif_list','statement',5,'p_statement_if_elif','/home/e/nc/n/bootstrap/parser.py',591),
  ('statement -> IF expr_top statements_block EOL ELSE statements_block','statement',6,'p_statement_if_else','/home/e/nc/n/bootstrap/parser.py',595),
  ('statement -> IF expr_top statements_block','statement',3,'p_statement_if','/home/e/nc/n/bootstrap/parser.py',599),
  ('statement -> CTX_ASSERT statement','statement',2,'p_statement_assert','/home/e/nc/n/bootstrap/parser.py',603),
  ('statement -> CTX_SEMASSERT statement','statement',2,'p_statement_semanticassert','/home/e/nc/n/bootstrap/parser.py',607),
  ('statement -> CTX_SEMCLAIM statement','statement',2,'p_statement_semanticclaim','/home/e/nc/n/bootstrap/parser.py',611),
  ('choicedecl -> | IDENT','choicedecl',2,'p_choicedecl','/home/e/nc/n/bootstrap/parser.py',615),
  ('choicedecl -> | IDENT ARROW type','choicedecl',4,'p_choicedecl_type','/home/e/nc/n/bootstrap/parser.py',619),
  ('typedecl_statement -> fieldchoicedecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',623),
  ('typedecl_statement -> toplevel','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',624),
  ('typedecl_statement -> CTX_SEMASSERT statement','typedecl_statement',2,'p_typedecl_semanticassert','/home/e/nc/n/bootstrap/parser.py',628),
  ('typedecl_statement -> CTX_SEMCLAIM statement','typedecl_statement',2,'p_typedecl_semanticclaim','/home/e/nc/n/bootstrap/parser.py',632),
  ('typedecl -> TYPE typedeclname ASSIGN typedecl_block','typedecl',4,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',656),
  ('typedecl -> TYPE typedeclname ASSIGN isalist typedecl_block','typedecl',5,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',657),
  ('funargs -> typedident','funargs',1,'p_funargs','/home/e/nc/n/bootstrap/parser.py',669),
  ('funargs -> typedident funargs','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/parser.py',670),
  ('funretvals -> typedident','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',677),
  ('funretvals -> type','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',678),
  ('funretvals -> typedident COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',679),
  ('funretvals -> type COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',680),
  ('fundecl -> FUN IDENT ASSIGN funretvals statements_block','fundecl',5,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',687),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals statements_block','fundecl',6,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',688),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals statements_block','fundecl',8,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',689),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','fundecl',9,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',690),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals statements_block','methoddecl',5,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',701),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',702),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',8,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',703),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',704),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',715),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals statements_block','methoddecl',7,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',716),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',717),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',10,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',718),
  ('intfdecl -> INTF typedeclname ASSIGN typedecl_block','intfdecl',4,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',729),
  ('intfdecl -> INTF typedeclname ASSIGN isalist typedecl_block','intfdecl',5,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',730),
  ('dynintfdecl -> DYNINTF typedeclname ASSIGN typedecl_block','dynintfdecl',4,'p_dynintfdecl','/home/e/nc/n/bootstrap/parser.py',743),
  ('dynintfdecl -> DYNINTF typedeclname ASSIGN isalist typedecl_block','dynintfdecl',5,'p_dynintfdecl','/home/e/nc/n/bootstrap/parser.py',744),
  ('modname -> IDENT','modname',1,'p_modname','/home/e/nc/n/bootstrap/parser.py',760),
  ('modname -> IDENT DOT modname','modname',3,'p_modname','/home/e/nc/n/bootstrap/parser.py',761),
  ('import -> IMPORT modname','import',2,'p_import','/home/e/nc/n/bootstrap/parser.py',768),
  ('import -> FROM modname IMPORT *','import',4,'p_import','/home/e/nc/n/bootstrap/parser.py',769),
  ('import -> FROM modname IMPORT idents','import',4,'p_import','/home/e/nc/n/bootstrap/parser.py',770),
  ('toplevel -> import','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',781),
  ('toplevel -> typedecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',782),
  ('toplevel -> fundecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',783),
  ('toplevel -> methoddecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',784),
  ('toplevel -> intfdecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',785),
  ('toplevel -> dynintfdecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',786),
  ('toplevel -> vardecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',787),
  ('module -> empty','module',1,'p_module','/home/e/nc/n/bootstrap/parser.py',791),
  ('module -> toplevel EOL module','module',3,'p_module','/home/e/nc/n/bootstrap/parser.py',792),
]
