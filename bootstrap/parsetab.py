
# bootstrap/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x8eu\xa3\xbb)4\xe9oBa~\xf6\xb7j\xdb^'
    
_lr_action_items = {'EOB':([123,141,184,230,256,296,317,335,346,],[197,227,-7,-11,-8,-12,334,-9,-10,]),'ELIF':([319,353,],[336,336,]),'RETURN':([53,97,104,126,140,149,184,],[92,92,92,92,92,92,92,]),'NEG':([53,55,56,58,63,67,92,95,96,97,98,99,101,102,104,105,107,108,112,113,115,118,119,120,121,126,127,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[94,-134,94,94,-40,-28,94,-47,-45,94,94,-51,-46,-49,94,-88,-26,-27,-25,-16,-50,94,94,94,-48,94,94,-51,-39,94,94,-38,-41,-53,-51,94,94,-54,-57,-56,-90,-58,94,-18,-17,-59,94,-4,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,94,94,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,94,-95,-24,-23,94,94,-87,94,]),'NUMBER':([53,55,56,58,63,67,92,94,95,96,97,98,99,100,101,102,104,105,107,108,110,112,113,115,117,118,119,120,121,126,127,128,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[96,-134,96,96,-40,-28,96,96,-47,-45,96,96,-51,96,-46,-49,96,-88,-26,-27,96,-25,-16,-50,96,96,96,96,-48,96,96,96,-51,-39,96,96,-38,-41,-53,-51,96,96,-54,-57,-56,-90,-58,96,-18,-17,-59,96,-4,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,96,96,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,96,-95,-24,-23,96,96,-87,96,]),'CTX_ASSERT':([53,97,104,126,140,149,184,],[97,97,97,97,97,97,97,]),'EOL':([1,6,8,9,12,13,15,16,26,27,32,54,55,59,62,63,65,67,70,73,76,77,78,79,84,85,86,87,88,92,93,95,96,99,101,102,103,105,106,107,108,111,112,113,115,121,122,124,125,127,130,131,132,133,134,135,136,137,138,139,142,144,146,147,148,150,155,156,157,159,165,166,167,168,170,171,172,174,178,179,180,181,182,183,187,188,191,197,198,203,216,221,222,223,224,225,226,227,229,230,231,232,233,234,236,237,238,239,240,246,247,248,250,254,255,257,258,259,260,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,298,299,303,305,306,307,309,311,312,318,321,323,325,326,327,328,330,331,332,334,338,339,340,341,342,343,344,345,348,350,351,352,354,],[-187,-189,-192,-191,28,-186,-190,-188,-183,-181,-106,-108,-134,-141,-103,-40,-13,-28,-177,-179,-149,-28,-153,-150,-182,-14,-185,-184,-161,-116,-96,-47,-45,-51,-46,-49,-97,-88,-113,-26,-27,184,-25,-16,-50,-48,-115,-121,-122,-98,-107,-51,-105,-110,-142,-143,-178,-104,-39,-137,-1,-138,230,-2,-3,-38,-41,-180,-154,-157,-15,-165,-162,-169,-117,-53,-51,-131,-54,-132,-57,-56,-90,-58,-18,-17,-59,-4,-133,-81,-79,-55,-89,-109,-111,-144,-139,-6,-135,-13,-140,-37,-33,-36,-34,-29,-158,-151,-152,-166,-173,-170,-118,-94,-114,-22,-21,-20,-19,-82,-86,-52,-130,319,-73,-74,-78,-69,-60,-85,-83,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-80,-63,-64,-77,-62,-112,-42,-43,-44,-30,-32,-35,-163,-155,-174,-52,-95,-24,-23,335,-136,-171,-164,-167,-156,-159,-119,-120,-87,-5,-126,-84,-31,-175,-172,-168,-160,-129,-127,-176,353,-125,-124,]),'WHILE':([53,97,104,126,140,149,184,],[98,98,98,98,98,98,98,]),'IDENT':([3,4,5,10,14,17,18,19,20,23,24,25,30,31,36,37,38,39,42,43,44,47,49,50,52,53,55,56,57,58,59,62,63,64,65,66,67,68,71,75,80,82,83,85,89,90,92,94,95,96,97,98,99,100,101,102,104,105,107,108,110,112,113,114,115,116,117,118,119,120,121,126,127,128,131,132,138,140,145,149,150,153,155,158,160,162,163,164,169,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,228,230,232,233,235,236,237,241,243,245,253,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,294,295,300,302,304,307,308,309,311,312,315,316,320,322,324,329,332,336,],[20,20,23,27,27,30,33,20,36,40,36,36,40,52,36,67,67,40,77,40,36,27,85,77,40,113,-134,113,67,113,67,67,-40,67,85,67,-28,67,67,77,40,163,164,85,77,77,113,113,-47,-45,113,113,-51,113,-46,-49,113,-88,-26,-27,113,-25,-16,40,-50,40,113,113,113,113,-48,113,113,113,-51,-105,-39,113,229,113,-38,67,-41,77,77,241,40,40,77,-53,-51,113,251,113,-54,-57,-56,-90,-58,113,257,258,259,260,-59,113,-4,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-55,-89,67,85,-37,-33,67,67,-29,40,77,77,251,-94,-22,-21,-20,-19,113,113,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,67,67,77,77,77,-52,113,-95,-24,-23,67,113,113,67,77,-91,-87,113,]),'DYNINTF':([0,28,65,230,],[4,4,4,4,]),'LSHIFT':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,200,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,200,-4,200,-55,-89,-37,-33,-29,200,-94,-22,-21,-20,-19,-82,-86,-52,None,None,200,-69,200,200,200,-68,200,-72,-71,200,-70,200,200,200,200,200,200,200,-52,-95,-24,-23,200,-87,]),'FUN':([0,7,28,65,230,],[5,25,5,5,5,]),'RSHIFT':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,199,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,199,-4,199,-55,-89,-37,-33,-29,199,-94,-22,-21,-20,-19,-82,-86,-52,None,None,199,-69,199,199,199,-68,199,-72,-71,199,-70,199,199,199,199,199,199,199,-52,-95,-24,-23,199,-87,]),'SIZEOF':([53,55,56,58,63,67,92,94,95,96,97,98,99,100,101,102,104,105,107,108,110,112,113,115,117,118,119,120,121,126,127,128,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[115,-134,115,115,-40,-28,115,115,-47,-45,115,115,-51,115,-46,-49,115,-88,-26,-27,115,-25,-16,-50,115,115,115,115,-48,115,115,115,-51,-39,115,115,-38,-41,-53,-51,115,115,-54,-57,-56,-90,-58,115,-18,-17,-59,115,-4,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,115,115,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,115,-95,-24,-23,115,115,-87,115,]),'NULL':([53,55,56,58,63,67,92,94,95,96,97,98,99,100,101,102,104,105,107,108,110,112,113,115,117,118,119,120,121,126,127,128,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[102,-134,102,102,-40,-28,102,102,-47,-45,102,102,-51,102,-46,-49,102,-88,-26,-27,102,-25,-16,-50,102,102,102,102,-48,102,102,102,-51,-39,102,102,-38,-41,-53,-51,102,102,-54,-57,-56,-90,-58,102,-18,-17,-59,102,-4,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,102,102,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,102,-95,-24,-23,102,102,-87,102,]),'TRUE':([53,55,56,58,63,67,92,94,95,96,97,98,99,100,101,102,104,105,107,108,110,112,113,115,117,118,119,120,121,126,127,128,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[95,-134,95,95,-40,-28,95,95,-47,-45,95,95,-51,95,-46,-49,95,-88,-26,-27,95,-25,-16,-50,95,95,95,95,-48,95,95,95,-51,-39,95,95,-38,-41,-53,-51,95,95,-54,-57,-56,-90,-58,95,-18,-17,-59,95,-4,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,95,95,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,95,-95,-24,-23,95,95,-87,95,]),'UBWNOT':([53,55,56,58,63,67,92,95,96,97,98,99,101,102,104,105,107,108,112,113,115,118,119,120,121,126,127,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[100,-134,100,100,-40,-28,100,-47,-45,100,100,-51,-46,-49,100,-88,-26,-27,-25,-16,-50,100,100,100,-48,100,100,-51,-39,100,100,-38,-41,-53,-51,100,100,-54,-57,-56,-90,-58,100,-18,-17,-59,100,-4,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,100,100,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,100,-95,-24,-23,100,100,-87,100,]),'DOT':([27,37,38,42,50,57,59,62,63,64,66,67,68,71,75,89,90,95,96,99,101,102,105,107,108,112,113,115,121,131,138,150,153,154,155,158,160,169,187,188,228,232,233,235,236,237,243,245,257,258,259,260,265,294,295,300,302,304,311,312,315,322,324,],[47,66,66,66,66,66,66,66,-40,66,66,-28,66,66,66,66,66,-47,-45,-51,-46,-49,181,-26,-27,186,188,-50,-48,-51,-39,-38,66,66,-41,66,66,66,-18,-17,66,-37,-33,66,66,-29,66,66,-22,312,-20,-19,-52,66,66,66,66,66,-24,-23,66,66,66,]),'DIVIDE':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,210,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,210,-4,210,-55,-89,-37,-33,-29,210,-94,-22,-21,-20,-19,-82,-86,-52,210,210,210,210,210,210,210,210,210,None,None,210,-70,210,210,210,210,210,210,210,-52,-95,-24,-23,210,-87,]),'SOB':([32,37,38,55,59,61,62,63,67,72,76,77,78,79,88,93,95,96,101,102,103,105,107,108,109,112,113,115,121,127,129,130,131,132,133,134,137,138,150,155,157,167,168,171,172,175,178,180,181,182,183,187,188,191,195,196,197,203,216,221,222,232,233,237,239,240,248,254,257,258,259,260,263,264,265,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,303,305,307,309,311,312,313,314,323,325,327,332,333,337,339,342,347,349,],[53,65,65,-134,65,65,-103,-40,-28,65,-149,-28,53,-150,53,-96,-47,-45,-46,-49,-97,-88,-26,-27,53,-25,-16,-50,-48,-98,53,53,-51,-105,53,65,-104,-39,-38,-41,53,53,53,-53,-51,53,-54,-57,-56,-90,-58,-18,-17,-59,266,53,-4,-81,-79,-55,-89,-37,-33,-29,-151,-152,53,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,-78,-69,-60,-85,-83,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-80,-63,-64,-77,-62,53,53,-52,-95,-24,-23,53,53,53,53,53,-87,53,53,-84,53,53,53,]),'LGE':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,217,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,217,-4,217,-55,-89,-37,-33,-29,217,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,217,-69,None,217,217,-68,None,-72,-71,-75,-70,217,217,-76,None,217,-77,None,-52,-95,-24,-23,217,-87,]),')':([36,45,46,55,60,63,67,81,95,96,101,102,105,107,108,112,113,115,121,131,138,150,151,152,155,171,172,178,180,181,182,183,187,188,191,192,193,194,197,203,216,221,222,232,233,234,236,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,297,298,299,307,309,311,312,332,339,340,],[-99,82,83,-134,-100,-40,-28,162,-47,-45,-46,-49,-88,-26,-27,-25,-16,-50,-48,-51,-39,-38,232,233,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,263,264,265,-4,-81,-79,-55,-89,-37,-33,-36,-34,-29,307,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,-78,-69,-60,-85,-83,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-80,-63,-64,-77,-62,-30,-32,-35,-52,-95,-24,-23,-87,-84,-31,]),'(':([0,28,37,38,42,50,53,55,56,57,58,59,62,63,64,65,66,67,68,71,75,89,90,92,94,95,96,97,98,99,100,101,102,104,105,107,108,110,112,113,115,117,118,119,120,121,126,127,128,131,138,140,149,150,153,155,158,160,169,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,228,230,232,233,235,236,237,243,245,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,294,295,300,302,304,307,308,309,311,312,315,316,320,322,324,332,336,],[7,7,68,68,68,68,118,-134,118,68,118,68,68,-40,68,7,68,-28,68,68,68,68,68,118,173,-47,-45,118,118,-51,173,-46,-49,118,-88,-26,-27,173,-25,-16,-50,173,118,118,118,-48,118,118,173,-51,-39,118,118,-38,68,-41,68,68,68,-53,-51,118,118,-54,-57,-56,-90,-58,118,-18,-17,-59,118,-4,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-55,-89,68,7,-37,-33,68,68,-29,68,68,-94,-22,-21,-20,-19,118,118,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,68,68,68,68,68,-52,118,-95,-24,-23,68,118,118,68,68,-87,118,]),'LLE':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,208,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,208,-4,208,-55,-89,-37,-33,-29,208,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,208,-69,None,208,208,-68,None,-72,-71,-75,-70,208,208,-76,None,208,-77,None,-52,-95,-24,-23,208,-87,]),'MINUS':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,202,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,202,-4,202,-55,-89,-37,-33,-29,202,-94,-22,-21,-20,-19,-82,-86,-52,202,202,202,-69,202,202,202,-68,202,-72,-71,202,-70,202,202,202,202,202,202,202,-52,-95,-24,-23,202,-87,]),'FUTURE':([53,55,56,58,63,67,92,95,96,97,98,99,101,102,104,105,107,108,112,113,115,118,119,120,121,126,127,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[109,-134,109,109,-40,-28,109,-47,-45,109,109,-51,-46,-49,109,-88,-26,-27,-25,-16,-50,109,109,109,-48,109,109,-51,-39,109,109,-38,-41,-53,-51,109,109,-54,-57,-56,-90,-58,109,-18,-17,-59,109,-4,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,109,109,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,109,-95,-24,-23,109,109,-87,109,]),'REFDOT':([53,55,56,58,63,67,92,95,96,97,98,99,101,102,104,105,107,108,112,113,115,118,119,120,121,126,127,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[110,-134,110,110,-40,-28,110,-47,-45,110,110,-51,-46,-49,110,-88,-26,-27,-25,-16,-50,110,110,110,-48,110,110,-51,-39,110,110,-38,-41,-53,-51,110,110,-54,-57,-56,-90,-58,110,-18,-17,-59,110,-4,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,110,110,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,110,-95,-24,-23,110,110,-87,110,]),'BLOCK':([53,55,56,58,63,67,92,95,96,97,98,99,101,102,104,105,107,108,112,113,115,118,119,120,121,126,127,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[129,-134,129,129,-40,-28,129,-47,-45,129,129,-51,-46,-49,129,-88,-26,-27,-25,-16,-50,129,129,129,-48,129,129,-51,-39,129,129,-38,-41,-53,-51,129,129,-54,-57,-56,-90,-58,129,-18,-17,-59,129,-4,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,129,129,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,129,-95,-24,-23,129,129,-87,129,]),'LNE':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,206,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,206,-4,206,-55,-89,-37,-33,-29,206,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,-78,-69,-60,206,None,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,None,-77,-62,-52,-95,-24,-23,206,-87,]),'IMPORT':([0,27,28,29,65,84,230,],[10,-181,10,49,10,-182,10,]),'BWXOR':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,219,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,219,-4,219,-55,-89,-37,-33,-29,219,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,219,-69,219,219,219,-68,219,-72,-71,-75,-70,219,219,219,219,219,-77,219,-52,-95,-24,-23,219,-87,]),':':([33,40,77,85,143,165,265,],[57,57,57,-14,228,-15,315,]),'ASSIGN':([20,21,22,23,30,32,33,34,35,36,39,41,51,52,60,63,67,74,80,91,99,107,108,112,113,132,138,150,155,161,163,164,187,188,232,233,237,241,242,244,251,257,258,259,260,301,311,312,],[-102,37,38,42,50,56,58,59,-101,-99,-145,75,89,90,-100,-40,-28,-146,-147,169,177,-26,-27,-25,-16,-105,-39,-38,-41,-148,243,245,-18,-17,-37,-33,-29,300,302,304,308,-22,-21,-20,-19,324,-24,-23,]),'?':([23,30,37,38,39,42,50,52,57,59,62,63,64,66,67,68,71,75,80,89,90,132,138,150,153,155,158,160,163,164,169,228,232,233,235,236,237,241,243,245,294,295,300,302,304,315,322,324,],[43,43,71,71,43,71,71,43,71,71,71,-40,71,71,-28,71,71,71,43,71,71,-105,-39,-38,71,-41,71,71,43,43,71,71,-37,-33,71,71,-29,43,71,71,71,71,71,71,71,71,71,71,]),'$end':([0,2,11,28,48,],[-13,0,-193,-13,-194,]),'PLUS':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,207,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,207,-4,207,-55,-89,-37,-33,-29,207,-94,-22,-21,-20,-19,-82,-86,-52,207,207,207,-69,207,207,207,-68,207,-72,-71,207,-70,207,207,207,207,207,207,207,-52,-95,-24,-23,207,-87,]),'INTF':([0,28,65,230,],[3,3,3,3,]),'MODULO':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,209,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,209,-4,209,-55,-89,-37,-33,-29,209,-94,-22,-21,-20,-19,-82,-86,-52,209,209,209,209,209,209,209,209,209,None,None,209,-70,209,209,209,209,209,209,209,-52,-95,-24,-23,209,-87,]),'STRING':([53,55,56,58,63,67,92,94,95,96,97,98,99,100,101,102,104,105,107,108,110,112,113,115,117,118,119,120,121,126,127,128,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[101,-134,101,101,-40,-28,101,101,-47,-45,101,101,-51,101,-46,-49,101,-88,-26,-27,101,-25,-16,-50,101,101,101,101,-48,101,101,101,-51,-39,101,101,-38,-41,-53,-51,101,101,-54,-57,-56,-90,-58,101,-18,-17,-59,101,-4,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,101,101,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,101,-95,-24,-23,101,101,-87,101,]),'FOR':([53,97,104,126,140,149,184,],[114,114,114,114,114,114,114,]),'BWAND':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,211,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,211,-4,211,-55,-89,-37,-33,-29,211,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,211,-69,211,211,211,-68,211,-72,-71,-75,-70,211,211,211,211,211,211,211,-52,-95,-24,-23,211,-87,]),'TIMES':([49,55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[87,-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,212,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,212,-4,212,-55,-89,-37,-33,-29,212,-94,-22,-21,-20,-19,-82,-86,-52,212,212,212,212,212,212,212,212,212,212,212,212,-70,212,212,212,212,212,212,212,-52,-95,-24,-23,212,-87,]),'PFOR':([53,97,104,126,140,149,184,],[116,116,116,116,116,116,116,]),'BANG':([17,24,37,38,42,50,57,59,62,63,64,66,67,68,71,75,89,90,95,96,99,101,102,105,107,108,112,113,115,121,131,138,150,153,154,155,158,160,169,187,188,228,232,233,235,236,237,243,245,257,258,259,260,265,294,295,300,302,304,311,312,315,322,324,],[31,44,64,64,64,64,64,64,64,-40,64,64,-28,64,64,64,64,64,-47,-45,-51,-46,-49,180,-26,-27,185,187,-50,-48,-51,-39,-38,64,64,-41,64,64,64,-18,-17,64,-37,-33,64,64,-29,64,64,311,-21,-20,-19,-52,64,64,64,64,64,-24,-23,64,64,64,]),'REFBANG':([53,55,56,58,63,67,92,95,96,97,98,99,101,102,104,105,107,108,112,113,115,118,119,120,121,126,127,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[117,-134,117,117,-40,-28,117,-47,-45,117,117,-51,-46,-49,117,-88,-26,-27,-25,-16,-50,117,117,117,-48,117,117,-51,-39,117,117,-38,-41,-53,-51,117,117,-54,-57,-56,-90,-58,117,-18,-17,-59,117,-4,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,117,117,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,117,-95,-24,-23,117,117,-87,117,]),'ARROW':([229,],[295,]),'IN':([63,67,132,138,150,155,189,190,232,233,237,],[-40,-28,-105,-39,-38,-41,261,262,-37,-33,-29,]),'FALSE':([53,55,56,58,63,67,92,94,95,96,97,98,99,100,101,102,104,105,107,108,110,112,113,115,117,118,119,120,121,126,127,128,131,138,140,149,150,155,171,172,173,177,178,180,181,182,183,184,187,188,191,194,197,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,232,233,237,254,257,258,259,260,261,262,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,308,309,311,312,316,320,332,336,],[121,-134,121,121,-40,-28,121,121,-47,-45,121,121,-51,121,-46,-49,121,-88,-26,-27,121,-25,-16,-50,121,121,121,121,-48,121,121,121,-51,-39,121,121,-38,-41,-53,-51,121,121,-54,-57,-56,-90,-58,121,-18,-17,-59,121,-4,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,121,121,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,121,-95,-24,-23,121,121,-87,121,]),'[':([37,38,42,50,57,59,62,63,64,66,67,68,71,75,89,90,138,150,153,155,158,160,169,228,232,233,235,236,237,243,245,294,295,300,302,304,315,322,324,],[69,69,69,69,69,69,69,-40,69,69,-28,69,69,69,69,69,-39,-38,69,-41,69,69,69,69,-37,-33,69,69,-29,69,69,69,69,69,69,69,69,69,69,]),'ELSE':([55,197,319,338,351,354,],[-134,-4,337,349,-123,-124,]),']':([69,],[154,]),'MATCH':([53,97,104,126,140,149,184,],[119,119,119,119,119,119,119,]),'IF':([53,97,104,126,140,149,184,],[120,120,120,120,120,120,120,]),'AND':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,214,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,214,-4,214,-55,-89,-37,-33,-29,214,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,-78,-69,-60,214,214,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,214,-77,-62,-52,-95,-24,-23,214,-87,]),'OR':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,213,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,213,-4,213,-55,-89,-37,-33,-29,213,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,-78,-69,-60,213,213,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,213,-77,-62,-52,-95,-24,-23,213,-87,]),'BWOR':([55,63,65,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,230,232,233,237,249,254,257,258,259,260,263,264,265,266,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,335,],[-134,-40,145,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,215,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,215,-4,215,-55,-89,145,-37,-33,-29,215,-94,-22,-21,-20,-19,-82,-86,-52,316,-73,-74,215,-69,215,215,215,-68,215,-72,-71,-75,-70,215,215,-76,215,215,-77,215,-52,-95,-24,-23,215,-87,316,]),'FROM':([0,28,65,230,],[14,14,14,14,]),'}':([55,63,67,95,96,101,102,105,107,108,112,113,115,121,131,138,150,155,171,172,176,178,180,181,182,183,187,188,191,197,221,222,232,233,237,252,253,254,257,258,259,260,263,264,265,269,270,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,310,311,312,329,332,],[-134,-40,-28,-47,-45,-46,-49,-88,-26,-27,-25,-16,-50,-48,-51,-39,-38,-41,-53,-51,254,-54,-57,-56,-90,-58,-18,-17,-59,-4,-55,-89,-37,-33,-29,309,-92,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,-78,-69,-60,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,-52,-95,-93,-24,-23,-91,-87,]),'ISA':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,201,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,201,-4,201,-55,-89,-37,-33,-29,201,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,None,-69,-60,201,201,-68,-61,-72,-71,-75,-70,201,201,-76,-63,201,-77,-62,-52,-95,-24,-23,201,-87,]),'METHOD':([0,7,28,65,230,],[17,24,17,17,17,]),'BREAK':([53,97,104,126,140,149,184,],[124,124,124,124,124,124,124,]),'CTX_SEMASSERT':([53,65,97,104,126,140,149,184,230,],[104,140,104,104,104,104,104,104,140,]),'CONTINUE':([53,97,104,126,140,149,184,],[125,125,125,125,125,125,125,]),'LET':([0,28,53,65,97,104,126,140,149,184,230,],[18,18,18,18,18,18,18,18,18,18,18,]),'CTX_SEMCLAIM':([53,65,97,104,126,140,149,184,230,],[126,149,126,126,126,126,126,126,149,]),'LEQ':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,218,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,218,-4,218,-55,-89,-37,-33,-29,218,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,-78,-69,-60,218,None,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,None{':([99,107,108,112,113,131,187,188,257,258,259,260,311,312,],[176,-26,-27,-25,-16,176,-18,-17,-22,-21,-20,-19,-24,-23,]),'COMMA':([55,63,67,76,77,79,95,96,99,101,102,105,107,108,112,113,115,121,127,131,132,138,150,153,155,171,172,178,180,181,182,183,187,188,191,194,197,221,222,232,233,237,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,294,297,307,309,311,312,332,],[-134,-40,-28,158,-28,160,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,205,-51,-105,-39,-38,235,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,205,-4,-55,-89,-37,-33,-29,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,-78,-69,-60,320,-65,-68,-61,-72,-71,-75,-70,-67,-66,-76,-63,-64,-77,-62,235,322,-52,-95,-24,-23,-87,]),'TYPE':([0,28,65,230,],[19,19,19,19,]),'LLT':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,204,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,204,-4,204,-55,-89,-37,-33,-29,204,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,204,-69,None,204,204,-68,None,-72,-71,-75,-70,204,204,-76,None,204,-77,None,-52,-95,-24,-23,204,-87,]),'LGT':([55,63,67,95,96,99,101,102,105,107,108,112,113,115,121,127,131,138,150,155,171,172,178,180,181,182,183,187,188,191,194,197,216,221,222,232,233,237,249,254,257,258,259,260,263,264,265,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,307,309,311,312,329,332,],[-134,-40,-28,-47,-45,-51,-46,-49,-88,-26,-27,-25,-16,-50,-48,220,-51,-39,-38,-41,-53,-51,-54,-57,-56,-90,-58,-18,-17,-59,220,-4,220,-55,-89,-37,-33,-29,220,-94,-22,-21,-20,-19,-82,-86,-52,-73,-74,220,-69,None,220,220,-68,None,-72,-71,-75,-70,220,220,-76,None,220,-77,None,-52,-95,-24,-23,220,-87,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initializer_pair':([176,253,],[253,253,]),'expr_call':([53,56,58,92,97,98,104,118,119,120,126,140,149,177,184,261,262,316,336,],[93,93,93,93,93,93,93,192,93,93,93,93,93,93,93,93,93,93,93,]),'typedecl':([0,28,65,230,],[1,1,1,1,]),'expr_tuple_list':([205,320,],[274,339,]),'elif_list':([319,353,],[338,354,]),'typedecl_block_blocklist':([65,230,],[141,296,]),'matchers_block_blocklist':([266,335,],[317,346,]),'module':([0,28,],[2,48,]),'expr_tuple':([53,56,58,92,97,98,104,118,119,120,126,140,149,177,184,261,262,316,336,],[103,103,103,103,103,103,103,193,103,103,103,103,103,103,103,103,103,103,103,]),'_statements_block_blocklist':([53,184,],[123,256,]),'typedeclname':([3,4,19,],[21,22,34,]),'funargs':([23,30,39,52,80,163,164,241,],[41,51,74,91,161,242,244,301,]),'typedecl_block':([37,38,59,61,72,134,],[70,73,135,136,156,225,]),'methoddecl':([0,28,65,230,],[6,6,6,6,]),'expr_call_list':([127,194,216,],[203,203,286,]),'isalist':([37,38,59,62,],[61,72,134,137,]),'matchers_block':([195,],[267,]),'type_app_list':([153,236,294,],[234,299,234,]),'expr_postfix':([53,56,58,92,94,97,98,100,104,110,117,118,119,120,126,127,128,140,149,173,177,184,194,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,261,262,308,316,320,336,],[105,105,105,105,171,105,105,178,105,183,191,105,105,105,105,105,221,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'vardecl':([0,28,53,65,97,104,126,140,149,184,230,],[8,8,106,8,106,106,106,106,106,106,8,]),'value_3':([53,56,58,92,94,97,98,100,104,110,117,118,119,120,126,127,128,140,149,173,177,184,194,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,261,262,308,316,320,336,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'value_2':([53,56,58,92,94,97,98,100,104,110,117,118,119,120,126,127,128,140,149,173,177,184,194,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,261,262,308,316,320,336,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'statements_block':([32,78,88,109,129,130,133,157,167,168,175,196,248,303,305,313,314,323,325,327,333,337,342,347,349,],[54,159,166,182,222,223,224,238,246,247,250,268,306,326,328,330,331,341,343,344,345,348,350,351,352,]),'dynintfdecl':([0,28,65,230,],[9,9,9,9,]),'_statements_block':([32,78,88,109,129,130,133,157,167,168,175,196,248,303,305,313,314,323,325,327,333,337,342,347,349,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'statement':([53,97,104,126,140,149,184,],[111,174,179,198,226,231,111,]),'value_fieldacc':([53,56,58,92,94,97,98,100,104,110,117,118,119,120,126,127,128,140,149,173,177,184,194,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,261,262,308,316,320,336,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'import':([0,28,65,230,],[13,13,13,13,]),'type':([37,38,42,50,57,59,62,64,66,68,71,75,89,90,153,158,160,169,228,235,236,243,245,294,295,300,302,304,315,322,324,],[62,62,79,79,132,62,62,138,150,153,155,79,79,79,236,79,79,79,294,297,236,79,79,236,321,79,79,79,332,297,79,]),'empty':([0,28,65,230,],[11,11,142,142,]),'typedident':([18,23,30,39,42,43,50,52,75,80,89,90,114,116,158,160,163,164,169,241,243,245,300,302,304,324,],[32,39,39,39,76,80,76,39,76,39,76,76,189,190,76,76,39,39,76,39,76,76,76,76,76,76,]),'type_top':([228,],[291,]),'funretvals':([42,50,75,89,90,158,160,169,243,245,300,302,304,324,],[78,88,157,167,168,239,240,248,303,305,323,325,327,342,]),'idents':([49,65,85,230,],[86,143,165,143,]),'matcher':([266,335,],[318,318,]),'initializer_list':([176,253,],[252,310,]),'type_app':([68,228,],[151,292,]),'toplevel':([0,28,65,230,],[12,12,144,144,]),'type_ref':([37,38,42,50,57,59,62,64,66,68,71,75,89,90,153,154,158,160,169,228,235,236,243,245,294,295,300,302,304,315,322,324,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,237,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'typedeclname_list':([20,24,25,36,44,],[35,45,46,60,81,]),'type_tuple_list':([235,322,],[298,340,]),'modname':([10,14,47,],[26,29,84,]),'typedecl_statement':([65,230,],[146,146,]),'fieldchoicedecl':([65,230,],[139,139,]),'intfdecl':([0,28,65,230,],[15,15,15,15,]),'expr_top':([53,56,58,92,97,98,104,119,120,126,140,149,177,184,261,262,316,336,],[122,130,133,170,122,175,122,195,196,122,122,122,255,122,313,314,333,347,]),'choicedecl':([65,230,],[147,147,]),'fundecl':([0,28,65,230,],[16,16,16,16,]),'value':([53,56,58,92,94,97,98,100,104,110,117,118,119,120,126,127,128,140,149,173,177,184,194,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,261,262,308,316,320,336,],[99,131,131,131,172,99,131,172,99,172,172,131,131,131,99,131,172,99,99,131,131,99,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'fielddecl':([65,230,],[148,148,]),'type_tuple':([68,228,],[152,293,]),'expr':([53,56,58,92,97,98,104,118,119,120,126,127,140,149,173,177,184,194,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,261,262,308,316,320,336,],[127,127,127,127,127,127,127,194,127,127,127,216,127,127,249,127,127,216,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,216,287,288,289,290,127,127,329,127,275,127,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('fieldchoicedecl -> empty','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',162),
  ('fieldchoicedecl -> choicedecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',163),
  ('fieldchoicedecl -> fielddecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/parser.py',164),
  ('_statements_block -> SOB _statements_block_blocklist EOB','_statements_block',3,'p__statements_block','/home/e/nc/n/bootstrap/parser.py',175),
  ('matchers_block -> SOB matchers_block_blocklist EOB','matchers_block',3,'p_matchers_block','/home/e/nc/n/bootstrap/parser.py',175),
  ('typedecl_block -> SOB typedecl_block_blocklist EOB','typedecl_block',3,'p_typedecl_block','/home/e/nc/n/bootstrap/parser.py',175),
  ('_statements_block_blocklist -> statement EOL','_statements_block_blocklist',2,'p__statements_block_blocklist','/home/e/nc/n/bootstrap/parser.py',180),
  ('_statements_block_blocklist -> statement EOL _statements_block_blocklist','_statements_block_blocklist',3,'p__statements_block_blocklist','/home/e/nc/n/bootstrap/parser.py',181),
  ('matchers_block_blocklist -> matcher EOL','matchers_block_blocklist',2,'p_matchers_block_blocklist','/home/e/nc/n/bootstrap/parser.py',180),
  ('matchers_block_blocklist -> matcher EOL matchers_block_blocklist','matchers_block_blocklist',3,'p_matchers_block_blocklist','/home/e/nc/n/bootstrap/parser.py',181),
  ('typedecl_block_blocklist -> typedecl_statement EOL','typedecl_block_blocklist',2,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/parser.py',180),
  ('typedecl_block_blocklist -> typedecl_statement EOL typedecl_block_blocklist','typedecl_block_blocklist',3,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/parser.py',181),
  ('empty -> <empty>','empty',0,'p_empty','/home/e/nc/n/bootstrap/parser.py',212),
  ('idents -> IDENT','idents',1,'p_idents','/home/e/nc/n/bootstrap/parser.py',216),
  ('idents -> IDENT idents','idents',2,'p_idents','/home/e/nc/n/bootstrap/parser.py',217),
  ('value_3 -> IDENT','value_3',1,'p_value_ident','/home/e/nc/n/bootstrap/parser.py',224),
  ('value_3 -> IDENT DOT','value_3',2,'p_value_deref','/home/e/nc/n/bootstrap/parser.py',229),
  ('value_3 -> IDENT BANG','value_3',2,'p_value_deref','/home/e/nc/n/bootstrap/parser.py',230),
  ('value_fieldacc -> IDENT DOT IDENT','value_fieldacc',3,'p_value_fieldaccp_term','/home/e/nc/n/bootstrap/parser.py',234),
  ('value_fieldacc -> IDENT BANG IDENT','value_fieldacc',3,'p_value_fieldaccp_term','/home/e/nc/n/bootstrap/parser.py',235),
  ('value_fieldacc -> value_fieldacc DOT IDENT','value_fieldacc',3,'p_value_fieldacc_dot','/home/e/nc/n/bootstrap/parser.py',239),
  ('value_fieldacc -> value_fieldacc BANG IDENT','value_fieldacc',3,'p_value_fieldacc_dot','/home/e/nc/n/bootstrap/parser.py',240),
  ('value_fieldacc -> value_fieldacc DOT IDENT DOT','value_fieldacc',4,'p_value_fieldacc_deref','/home/e/nc/n/bootstrap/parser.py',244),
  ('value_fieldacc -> value_fieldacc BANG IDENT BANG','value_fieldacc',4,'p_value_fieldacc_deref','/home/e/nc/n/bootstrap/parser.py',245),
  ('value_2 -> value_fieldacc','value_2',1,'p_value_fieldacc','/home/e/nc/n/bootstrap/parser.py',249),
  ('value_2 -> value_3','value_2',1,'p_value_2','/home/e/nc/n/bootstrap/parser.py',268),
  ('value -> value_2','value',1,'p_value','/home/e/nc/n/bootstrap/parser.py',272),
  ('type -> IDENT','type',1,'p_type_name','/home/e/nc/n/bootstrap/parser.py',276),
  ('type -> [ ] type_ref','type',3,'p_type_slice','/home/e/nc/n/bootstrap/parser.py',280),
  ('type_tuple_list -> type','type_tuple_list',1,'p_type_tuple_list','/home/e/nc/n/bootstrap/parser.py',284),
  ('type_tuple_list -> type COMMA type_tuple_list','type_tuple_list',3,'p_type_tuple_list','/home/e/nc/n/bootstrap/parser.py',285),
  ('type_tuple -> type COMMA type_tuple_list','type_tuple',3,'p_type_tuple_only','/home/e/nc/n/bootstrap/parser.py',292),
  ('type -> ( type_tuple )','type',3,'p_type_tuple','/home/e/nc/n/bootstrap/parser.py',296),
  ('type_app_list -> type','type_app_list',1,'p_type_app_list','/home/e/nc/n/bootstrap/parser.py',300),
  ('type_app_list -> type type_app_list','type_app_list',2,'p_type_app_list','/home/e/nc/n/bootstrap/parser.py',301),
  ('type_app -> type type_app_list','type_app',2,'p_type_app_only','/home/e/nc/n/bootstrap/parser.py',308),
  ('type -> ( type_app )','type',3,'p_type_app','/home/e/nc/n/bootstrap/parser.py',312),
  ('type_ref -> DOT type','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/parser.py',316),
  ('type_ref -> BANG type','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/parser.py',317),
  ('type -> type_ref','type',1,'p_type_ref','/home/e/nc/n/bootstrap/parser.py',321),
  ('type -> ? type','type',2,'p_type_nullable','/home/e/nc/n/bootstrap/parser.py',325),
  ('type_top -> type_app','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',329),
  ('type_top -> type_tuple','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',330),
  ('type_top -> type','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/parser.py',331),
  ('expr_postfix -> NUMBER','expr_postfix',1,'p_expr_postfix_literal','/home/e/nc/n/bootstrap/parser.py',335),
  ('expr_postfix -> STRING','expr_postfix',1,'p_expr_postfix_literal','/home/e/nc/n/bootstrap/parser.py',336),
  ('expr_postfix -> TRUE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/parser.py',340),
  ('expr_postfix -> FALSE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/parser.py',341),
  ('expr_postfix -> NULL','expr_postfix',1,'p_expr_postfix_null','/home/e/nc/n/bootstrap/parser.py',348),
  ('expr_postfix -> SIZEOF','expr_postfix',1,'p_expr_postfix_sizeof','/home/e/nc/n/bootstrap/parser.py',352),
  ('expr_postfix -> value','expr_postfix',1,'p_expr_postfix_value','/home/e/nc/n/bootstrap/parser.py',356),
  ('expr_postfix -> ( expr )','expr_postfix',3,'p_expr_postfix_group','/home/e/nc/n/bootstrap/parser.py',360),
  ('expr -> NEG expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',364),
  ('expr -> UBWNOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',365),
  ('expr -> NOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/parser.py',366),
  ('expr -> expr_postfix DOT','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/parser.py',370),
  ('expr -> expr_postfix BANG','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/parser.py',371),
  ('expr -> REFDOT expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/parser.py',375),
  ('expr -> REFBANG expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/parser.py',376),
  ('expr -> expr LLT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',380),
  ('expr -> expr LLE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',381),
  ('expr -> expr LGT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',382),
  ('expr -> expr LGE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',383),
  ('expr -> expr LEQ expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',384),
  ('expr -> expr LNE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/parser.py',385),
  ('expr -> expr AND expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/parser.py',389),
  ('expr -> expr OR expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/parser.py',390),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',394),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',395),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',396),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',397),
  ('expr -> expr MODULO expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',398),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',399),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',400),
  ('expr -> expr BWAND expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',401),
  ('expr -> expr BWOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',402),
  ('expr -> expr BWXOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',403),
  ('expr -> expr ISA expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/parser.py',404),
  ('expr_call_list -> expr','expr_call_list',1,'p_expr_call_list','/home/e/nc/n/bootstrap/parser.py',408),
  ('expr_call_list -> expr expr_call_list','expr_call_list',2,'p_expr_call_list','/home/e/nc/n/bootstrap/parser.py',409),
  ('expr_call -> expr expr_call_list','expr_call',2,'p_expr_call_only','/home/e/nc/n/bootstrap/parser.py',417),
  ('expr -> ( expr_call )','expr',3,'p_expr_call','/home/e/nc/n/bootstrap/parser.py',422),
  ('expr_tuple_list -> expr','expr_tuple_list',1,'p_expr_tuple_list','/home/e/nc/n/bootstrap/parser.py',426),
  ('expr_tuple_list -> expr COMMA expr_tuple_list','expr_tuple_list',3,'p_expr_tuple_list','/home/e/nc/n/bootstrap/parser.py',427),
  ('expr_tuple -> expr COMMA expr_tuple_list','expr_tuple',3,'p_expr_tuple_only','/home/e/nc/n/bootstrap/parser.py',434),
  ('expr -> ( expr_tuple )','expr',3,'p_expr_tuple','/home/e/nc/n/bootstrap/parser.py',439),
  ('expr -> ( expr ) : type','expr',5,'p_expr_constrained','/home/e/nc/n/bootstrap/parser.py',443),
  ('expr -> expr_postfix','expr',1,'p_expr_postfix','/home/e/nc/n/bootstrap/parser.py',447),
  ('expr -> BLOCK statements_block','expr',2,'p_expr_block','/home/e/nc/n/bootstrap/parser.py',451),
  ('expr -> FUTURE statements_block','expr',2,'p_expr_future','/home/e/nc/n/bootstrap/parser.py',454),
  ('initializer_pair -> IDENT ASSIGN expr','initializer_pair',3,'p_expr_initializer_pair','/home/e/nc/n/bootstrap/parser.py',457),
  ('initializer_list -> initializer_pair','initializer_list',1,'p_expr_initializer_list','/home/e/nc/n/bootstrap/parser.py',461),
  ('initializer_list -> initializer_pair initializer_list','initializer_list',2,'p_expr_initializer_list','/home/e/nc/n/bootstrap/parser.py',462),
  ('expr -> value { }','expr',3,'p_expr_initializer','/home/e/nc/n/bootstrap/parser.py',469),
  ('expr -> value { initializer_list }','expr',4,'p_expr_initializer','/home/e/nc/n/bootstrap/parser.py',470),
  ('expr_top -> expr_call','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',477),
  ('expr_top -> expr_tuple','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',478),
  ('expr_top -> expr','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/parser.py',479),
  ('typedeclname_list -> IDENT','typedeclname_list',1,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',483),
  ('typedeclname_list -> IDENT typedeclname_list','typedeclname_list',2,'p_typedeclname_list','/home/e/nc/n/bootstrap/parser.py',484),
  ('typedeclname -> IDENT typedeclname_list','typedeclname',2,'p_typedeclname_generic','/home/e/nc/n/bootstrap/parser.py',491),
  ('typedeclname -> IDENT','typedeclname',1,'p_typedeclname','/home/e/nc/n/bootstrap/parser.py',495),
  ('isalist -> type','isalist',1,'p_isalist','/home/e/nc/n/bootstrap/parser.py',499),
  ('isalist -> type isalist','isalist',2,'p_isalist','/home/e/nc/n/bootstrap/parser.py',500),
  ('typedident -> IDENT : type','typedident',3,'p_typedident','/home/e/nc/n/bootstrap/parser.py',507),
  ('vardecl -> LET typedident','vardecl',2,'p_vardecl','/home/e/nc/n/bootstrap/parser.py',511),
  ('vardecl -> LET typedident ASSIGN expr_top','vardecl',4,'p_vardecl_expr','/home/e/nc/n/bootstrap/parser.py',515),
  ('vardecl -> LET typedident statements_block','vardecl',3,'p_vardecl_mutating','/home/e/nc/n/bootstrap/parser.py',520),
  ('vardecl -> LET typedident ASSIGN expr_top statements_block','vardecl',5,'p_vardecl_expr_mutating','/home/e/nc/n/bootstrap/parser.py',525),
  ('vardecl -> LET IDENT ASSIGN expr_top','vardecl',4,'p_vardecl_infer_expr','/home/e/nc/n/bootstrap/parser.py',531),
  ('vardecl -> LET IDENT ASSIGN expr_top statements_block','vardecl',5,'p_vardecl_infer_expr_mutating','/home/e/nc/n/bootstrap/parser.py',537),
  ('fielddecl -> idents : type_top','fielddecl',3,'p_fielddecl','/home/e/nc/n/bootstrap/parser.py',544),
  ('statement -> vardecl','statement',1,'p_statement_vardecl','/home/e/nc/n/bootstrap/parser.py',548),
  ('statement -> value ASSIGN expr_top','statement',3,'p_statement_assign','/home/e/nc/n/bootstrap/parser.py',552),
  ('statement -> expr_top','statement',1,'p_statement_expr','/home/e/nc/n/bootstrap/parser.py',556),
  ('statement -> RETURN','statement',1,'p_statement_return','/home/e/nc/n/bootstrap/parser.py',560),
  ('statement -> RETURN expr_top','statement',2,'p_statement_return','/home/e/nc/n/bootstrap/parser.py',561),
  ('statement -> WHILE expr_top statements_block','statement',3,'p_statement_while','/home/e/nc/n/bootstrap/parser.py',568),
  ('statement -> FOR typedident IN expr_top statements_block','statement',5,'p_statement_for','/home/e/nc/n/bootstrap/parser.py',572),
  ('statement -> PFOR typedident IN expr_top statements_block','statement',5,'p_statement_pfor','/home/e/nc/n/bootstrap/parser.py',576),
  ('statement -> BREAK','statement',1,'p_statement_break','/home/e/nc/n/bootstrap/parser.py',580),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','/home/e/nc/n/bootstrap/parser.py',584),
  ('elif_list -> ELIF expr_top statements_block','elif_list',3,'p_statement_elif_list','/home/e/nc/n/bootstrap/parser.py',588),
  ('elif_list -> ELIF expr_top statements_block EOL elif_list','elif_list',5,'p_statement_elif_list','/home/e/nc/n/bootstrap/parser.py',589),
  ('statement -> IF expr_top statements_block EOL elif_list ELSE statements_block','statement',7,'p_statement_if_elif_else','/home/e/nc/n/bootstrap/parser.py',596),
  ('statement -> IF expr_top statements_block EOL elif_list','statement',5,'p_statement_if_elif','/home/e/nc/n/bootstrap/parser.py',600),
  ('statement -> IF expr_top statements_block EOL ELSE statements_block','statement',6,'p_statement_if_else','/home/e/nc/n/bootstrap/parser.py',604),
  ('statement -> IF expr_top statements_block','statement',3,'p_statement_if','/home/e/nc/n/bootstrap/parser.py',608),
  ('matcher -> BWOR expr_top statements_block','matcher',3,'p_matchers','/home/e/nc/n/bootstrap/parser.py',612),
  ('statement -> MATCH expr_top matchers_block','statement',3,'p_match','/home/e/nc/n/bootstrap/parser.py',616),
  ('statement -> CTX_ASSERT statement','statement',2,'p_statement_assert','/home/e/nc/n/bootstrap/parser.py',620),
  ('statement -> CTX_SEMASSERT statement','statement',2,'p_statement_semanticassert','/home/e/nc/n/bootstrap/parser.py',624),
  ('statement -> CTX_SEMCLAIM statement','statement',2,'p_statement_semanticclaim','/home/e/nc/n/bootstrap/parser.py',628),
  ('statements_block -> _statements_block','statements_block',1,'p_statements_block','/home/e/nc/n/bootstrap/parser.py',632),
  ('choicedecl -> BWOR IDENT','choicedecl',2,'p_choicedecl','/home/e/nc/n/bootstrap/parser.py',636),
  ('choicedecl -> BWOR IDENT ARROW type','choicedecl',4,'p_choicedecl_type','/home/e/nc/n/bootstrap/parser.py',640),
  ('typedecl_statement -> fieldchoicedecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',644),
  ('typedecl_statement -> toplevel','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/parser.py',645),
  ('typedecl_statement -> CTX_SEMASSERT statement','typedecl_statement',2,'p_typedecl_semanticassert','/home/e/nc/n/bootstrap/parser.py',649),
  ('typedecl_statement -> CTX_SEMCLAIM statement','typedecl_statement',2,'p_typedecl_semanticclaim','/home/e/nc/n/bootstrap/parser.py',653),
  ('typedecl -> TYPE typedeclname ASSIGN','typedecl',3,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',677),
  ('typedecl -> TYPE typedeclname ASSIGN isalist','typedecl',4,'p_typedecl_empty','/home/e/nc/n/bootstrap/parser.py',678),
  ('typedecl -> TYPE typedeclname ASSIGN typedecl_block','typedecl',4,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',686),
  ('typedecl -> TYPE typedeclname ASSIGN isalist typedecl_block','typedecl',5,'p_typedecl','/home/e/nc/n/bootstrap/parser.py',687),
  ('funargs -> typedident','funargs',1,'p_funargs','/home/e/nc/n/bootstrap/parser.py',699),
  ('funargs -> typedident funargs','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/parser.py',700),
  ('funargs -> ? typedident','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/parser.py',701),
  ('funargs -> ? typedident funargs','funargs',3,'p_funargs','/home/e/nc/n/bootstrap/parser.py',702),
  ('funretvals -> typedident','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',715),
  ('funretvals -> type','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',716),
  ('funretvals -> typedident COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',717),
  ('funretvals -> type COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/parser.py',718),
  ('fundecl -> FUN IDENT ASSIGN funretvals','fundecl',4,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',725),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals','fundecl',5,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',726),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals','fundecl',7,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',727),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals','fundecl',8,'p_fundecl_forward','/home/e/nc/n/bootstrap/parser.py',728),
  ('fundecl -> FUN IDENT ASSIGN funretvals statements_block','fundecl',5,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',739),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals statements_block','fundecl',6,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',740),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals statements_block','fundecl',8,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',741),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','fundecl',9,'p_fundecl','/home/e/nc/n/bootstrap/parser.py',742),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals','methoddecl',4,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',753),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals','methoddecl',5,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',754),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals','methoddecl',7,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',755),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals','methoddecl',8,'p_methoddecl_forward','/home/e/nc/n/bootstrap/parser.py',756),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals statements_block','methoddecl',5,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',767),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',768),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',8,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',769),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl','/home/e/nc/n/bootstrap/parser.py',770),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals','methoddecl',5,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',781),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals','methoddecl',6,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',782),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals','methoddecl',8,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',783),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals','methoddecl',9,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/parser.py',784),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',795),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals statements_block','methoddecl',7,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',796),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',797),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',10,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/parser.py',798),
  ('intfdecl -> INTF typedeclname ASSIGN typedecl_block','intfdecl',4,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',809),
  ('intfdecl -> INTF typedeclname ASSIGN isalist typedecl_block','intfdecl',5,'p_intfdecl','/home/e/nc/n/bootstrap/parser.py',810),
  ('dynintfdecl -> DYNINTF typedeclname ASSIGN typedecl_block','dynintfdecl',4,'p_dynintfdecl','/home/e/nc/n/bootstrap/parser.py',823),
  ('dynintfdecl -> DYNINTF typedeclname ASSIGN isalist typedecl_block','dynintfdecl',5,'p_dynintfdecl','/home/e/nc/n/bootstrap/parser.py',824),
  ('modname -> IDENT','modname',1,'p_modname','/home/e/nc/n/bootstrap/parser.py',840),
  ('modname -> IDENT DOT modname','modname',3,'p_modname','/home/e/nc/n/bootstrap/parser.py',841),
  ('import -> IMPORT modname','import',2,'p_import','/home/e/nc/n/bootstrap/parser.py',848),
  ('import -> FROM modname IMPORT TIMES','import',4,'p_import','/home/e/nc/n/bootstrap/parser.py',849),
  ('import -> FROM modname IMPORT idents','import',4,'p_import','/home/e/nc/n/bootstrap/parser.py',850),
  ('toplevel -> import','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',861),
  ('toplevel -> typedecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',862),
  ('toplevel -> fundecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',863),
  ('toplevel -> methoddecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',864),
  ('toplevel -> intfdecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',865),
  ('toplevel -> dynintfdecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',866),
  ('toplevel -> vardecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/parser.py',867),
  ('module -> empty','module',1,'p_module','/home/e/nc/n/bootstrap/parser.py',871),
  ('module -> toplevel EOL module','module',3,'p_module','/home/e/nc/n/bootstrap/parser.py',872),
]
