
# bootstrap/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa2\xe1\x07\xc8\xd2\xadE\xef\x8d+\x89.\xedM=\x93'
    
_lr_action_items = {'EOB':([176,178,216,268,273,287,317,329,348,350,368,371,380,387,388,],[-13,275,282,-7,-14,-11,-8,-12,367,-134,-9,-132,-10,-129,-130,]),'ELIF':([350,363,387,],[369,369,369,]),'RSHIFT':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,93,-56,-53,-64,-63,93,-92,-140,-55,-93,93,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,None,-90,None,93,-74,93,93,93,-73,93,-77,-76,93,-75,93,93,93,93,93,93,93,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,93,-62,-61,]),'IN':([120,121,127,132,229,235,236,240,241,242,269,270,291,295,296,297,298,],[-40,-21,-24,-22,-29,-28,-27,-37,-36,-111,318,319,-23,-26,-25,-39,-38,]),'NUMBER':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[34,-20,-44,34,-46,34,-45,-48,34,-91,-19,34,-49,-18,34,-47,-50,-51,34,34,-56,-53,-64,-63,34,-92,-140,34,34,-55,34,-93,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-54,-40,-21,-24,-22,-52,-97,-60,34,-59,34,34,34,34,34,34,34,34,34,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,34,34,34,34,-29,-28,-27,-37,-36,34,-98,34,34,34,-4,34,-23,-26,-25,-39,-38,-62,-61,34,34,34,34,34,-134,34,34,-132,-129,-130,]),'REFBANG':([16,33,34,36,38,39,40,41,42,43,46,47,48,50,51,53,55,60,64,74,77,78,81,82,84,85,86,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,126,127,128,129,132,134,135,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,240,241,244,246,257,258,260,265,268,274,275,278,283,286,291,293,294,295,296,297,298,304,305,307,308,313,314,318,319,326,328,333,335,339,347,350,352,354,356,369,371,387,388,],[35,-20,-44,-46,-45,-48,35,-91,-19,35,87,-49,-18,-47,-50,-51,35,130,130,130,-56,-53,-64,-63,35,-92,-140,-55,35,-93,35,130,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-54,130,130,-40,-21,130,-24,130,238,-22,130,130,130,130,-52,-97,-60,35,-59,35,35,35,35,35,35,35,35,35,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,35,35,35,35,-29,130,-28,-27,-37,-36,130,130,130,35,-98,35,35,35,-4,35,130,130,-23,130,130,-26,-25,-39,-38,130,130,130,130,-62,-61,35,35,35,35,130,130,130,35,-134,35,130,130,35,-132,-129,-130,]),'EOL':([1,5,9,10,11,13,14,17,26,27,32,33,34,36,38,39,41,42,44,47,48,50,51,52,53,55,60,77,78,81,82,83,85,86,89,90,92,98,111,116,117,120,121,122,123,125,127,128,132,136,137,138,139,146,147,148,149,150,156,157,161,163,165,169,170,173,177,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,215,217,222,223,224,225,226,228,229,230,232,233,234,235,236,237,240,241,242,243,245,253,254,255,256,260,263,264,267,275,276,277,279,281,282,284,286,287,288,291,292,294,295,296,297,298,299,300,301,305,308,309,310,311,313,314,316,321,322,323,324,325,327,330,331,332,336,337,338,340,341,342,343,344,349,351,353,355,357,358,359,360,361,362,364,365,367,372,373,374,375,376,377,379,382,384,385,386,],[-210,-212,28,-209,-214,-213,-211,-116,-206,-204,-99,-20,-44,-46,-45,-48,-91,-19,-100,-49,-18,-47,-50,-112,-51,-101,-196,-56,-53,-64,-63,-102,-92,-140,-55,-114,-93,-86,-84,-54,-156,-40,-21,-200,-15,-197,-24,-109,-22,-168,-21,-172,-169,-205,-16,-208,-207,-180,-52,-97,-60,-59,-122,-119,268,-118,-121,-127,-128,-58,-57,-113,-78,-90,-79,-83,-74,-65,-89,-87,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-85,-68,-69,-82,-67,-160,-157,-147,-149,-146,-151,-1,287,-150,-2,-148,-145,-3,-29,-201,-41,-42,-43,-28,-27,-110,-37,-36,-111,-173,-176,-17,-184,-181,-188,-98,-123,-137,-138,-4,-139,-115,-161,-152,-6,-154,-141,-15,-153,-23,-35,-33,-26,-25,-39,-38,-177,-170,-171,-198,-158,-185,-192,-189,-62,-61,-124,-136,350,-120,-88,-117,-143,-30,-32,-34,-182,-202,-199,-174,-162,-159,-193,363,368,-155,-142,-190,-183,-186,-203,-175,-178,-163,-125,-126,-5,-144,-31,-194,-191,-187,-179,-135,-133,-195,387,-131,]),'WHILE':([84,166,168,176,181,214,227,268,350,371,387,388,],[167,167,167,167,167,167,167,167,-134,-132,-129,-130,]),'IDENT':([3,4,7,12,15,16,18,19,21,22,23,24,25,30,31,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,59,60,61,64,65,66,71,73,74,76,77,78,80,81,82,84,85,86,87,88,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,124,126,127,128,130,131,132,134,135,140,142,143,144,145,147,151,152,154,155,156,157,159,161,162,163,164,165,166,167,168,171,172,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,210,214,219,220,221,227,229,234,235,236,238,239,240,241,242,244,246,248,249,251,257,258,260,265,268,274,275,278,283,286,287,289,290,291,293,294,295,296,297,298,302,304,305,307,308,312,313,314,318,319,326,328,333,335,339,347,350,352,354,356,369,371,387,388,],[19,21,27,27,30,48,19,59,62,59,59,59,59,62,76,-20,-44,48,-46,48,-45,-48,48,-91,-19,48,-49,-18,48,-47,-50,-51,48,48,59,121,62,137,62,59,27,147,137,62,-56,-53,158,48,48,48,-92,-140,48,48,-55,48,-93,48,121,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-54,121,121,-40,-21,147,121,121,-24,121,121,121,-22,121,137,62,249,19,251,19,147,137,137,48,48,-52,-97,158,-60,48,-59,48,48,48,48,48,62,62,48,48,48,48,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,59,48,48,48,286,48,-29,121,121,121,121,121,-37,-36,-111,137,137,302,62,62,137,48,-98,48,48,48,-4,48,121,121,147,121,121,-23,121,121,-26,-25,-39,-38,62,137,121,137,121,-94,-62,-61,48,48,48,48,137,137,137,48,-134,48,121,137,48,-132,-129,-130,]),'LSHIFT':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,95,-56,-53,-64,-63,95,-92,-140,-55,-93,95,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,None,-90,None,95,-74,95,95,95,-73,95,-77,-76,95,-75,95,95,95,95,95,95,95,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,95,-62,-61,]),'FUN':([0,6,28,123,287,],[4,24,4,4,4,]),'RETURN':([84,166,168,176,181,214,227,268,350,371,387,388,],[165,165,165,165,165,165,165,165,-134,-132,-129,-130,]),'SIZEOF':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[47,-20,-44,47,-46,47,-45,-48,47,-91,-19,47,-49,-18,47,-47,-50,-51,47,47,-56,-53,-64,-63,47,-92,-140,47,47,-55,47,-93,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-54,-40,-21,-24,-22,-52,-97,-60,47,-59,47,47,47,47,47,47,47,47,47,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,47,47,47,47,-29,-28,-27,-37,-36,47,-98,47,47,47,-4,47,-23,-26,-25,-39,-38,-62,-61,47,47,47,47,47,-134,47,47,-132,-129,-130,]),'NULL':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[39,-20,-44,39,-46,39,-45,-48,39,-91,-19,39,-49,-18,39,-47,-50,-51,39,39,-56,-53,-64,-63,39,-92,-140,39,39,-55,39,-93,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-54,-40,-21,-24,-22,-52,-97,-60,39,-59,39,39,39,39,39,39,39,39,39,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,39,39,39,39,-29,-28,-27,-37,-36,39,-98,39,39,39,-4,39,-23,-26,-25,-39,-38,-62,-61,39,39,39,39,39,-134,39,39,-132,-129,-130,]),'TRUE':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[36,-20,-44,36,-46,36,-45,-48,36,-91,-19,36,-49,-18,36,-47,-50,-51,36,36,-56,-53,-64,-63,36,-92,-140,36,36,-55,36,-93,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-54,-40,-21,-24,-22,-52,-97,-60,36,-59,36,36,36,36,36,36,36,36,36,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,36,36,36,36,-29,-28,-27,-37,-36,36,-98,36,36,36,-4,36,-23,-26,-25,-39,-38,-62,-61,36,36,36,36,36,-134,36,36,-132,-129,-130,]),'UBWNOT':([16,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,77,78,81,82,84,85,86,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[37,-20,-44,-46,-45,-48,37,-91,-19,37,-49,-18,-47,-50,-51,37,-56,-53,-64,-63,37,-92,-140,-55,37,-93,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-54,-40,-21,-24,-22,-52,-97,-60,37,-59,37,37,37,37,37,37,37,37,37,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,37,37,37,37,-29,-28,-27,-37,-36,37,-98,37,37,37,-4,37,-23,-26,-25,-39,-38,-62,-61,37,37,37,37,37,-134,37,37,-132,-129,-130,]),'BLOCK':([16,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,77,78,81,82,84,85,86,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[45,-20,-44,-46,-45,-48,45,-91,-19,45,-49,-18,-47,-50,-51,45,-56,-53,-64,-63,45,-92,-140,-55,45,-93,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-54,-40,-21,-24,-22,-52,-97,-60,45,-59,45,45,45,45,45,45,45,45,45,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,45,45,45,45,-29,-28,-27,-37,-36,45,-98,45,45,45,-4,45,-23,-26,-25,-39,-38,-62,-61,45,45,45,45,45,-134,45,45,-132,-129,-130,]),'DIVIDE':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,105,-56,-53,-64,-63,105,-92,-140,-55,-93,105,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,105,-90,105,105,105,105,105,105,105,105,None,None,105,-75,105,105,105,105,105,105,105,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,105,-62,-61,]),'SOB':([32,33,34,36,38,39,41,42,44,45,47,48,50,51,52,53,54,55,60,77,78,81,82,83,85,86,89,92,98,111,116,117,120,121,125,127,128,132,136,137,138,139,150,156,157,161,163,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,229,235,236,237,240,241,242,243,255,256,260,266,271,272,275,291,295,296,297,298,300,301,305,308,311,313,314,315,324,336,338,340,342,345,346,355,357,360,366,370,375,381,383,],[-99,-20,-44,-46,-45,-48,-91,-19,-100,84,-49,-18,-47,-50,84,-51,84,-101,123,-56,-53,-64,-63,-102,-92,-140,-55,-93,-86,-84,-54,123,-40,-21,123,-24,-109,-22,-168,-21,84,-169,84,-52,-97,-60,-59,-58,-57,84,-78,-90,-79,-83,-74,-65,-89,-87,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-85,-68,-69,-82,-67,123,-29,-28,-27,-110,-37,-36,-111,84,84,84,-98,84,320,84,-4,-23,-26,-25,-39,-38,-170,-171,123,123,84,-62,-61,84,-88,84,123,84,123,84,84,84,84,84,84,84,84,84,84,]),'SLICEBRAKETS':([60,64,74,94,117,119,120,121,124,126,127,128,130,131,132,134,135,151,152,229,234,235,236,238,239,240,241,244,246,257,283,286,289,290,291,293,294,295,296,297,298,304,305,307,308,333,335,339,354,356,],[124,124,124,124,124,124,-40,-21,124,124,-24,124,124,124,-22,124,124,124,124,-29,124,-28,-27,124,124,-37,-36,124,124,124,124,124,124,124,-23,124,124,-26,-25,-39,-38,124,124,124,124,124,124,124,124,124,]),'LGE':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,112,-56,-53,-64,-63,112,-92,-140,-55,-93,112,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,112,-74,None,112,112,-73,None,-77,-76,-80,-75,112,112,-81,None,112,-82,None,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,112,-62,-61,]),')':([32,33,34,36,38,39,41,42,44,47,48,50,51,53,55,59,67,68,69,70,77,78,79,81,82,83,85,86,89,92,98,111,116,118,120,121,127,132,141,156,157,161,163,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,229,231,232,233,234,235,236,240,241,260,275,280,291,292,294,295,296,297,298,313,314,324,330,331,332,373,],[-99,-20,-44,-46,-45,-48,-91,-19,-100,-49,-18,-47,-50,-51,-101,-103,142,143,144,145,-56,-53,156,-64,-63,-102,-92,-140,-55,-93,-86,-84,-54,-104,-40,-21,-24,-22,248,-52,-97,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,-89,-87,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-85,-68,-69,-82,-67,-105,-29,291,-41,-42,-43,-28,-27,-37,-36,-98,-4,-106,-23,-35,-33,-26,-25,-39,-38,-62,-61,-88,-30,-32,-34,-31,]),'(':([0,16,28,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,60,64,74,77,78,81,82,84,85,86,87,88,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,124,126,127,128,130,131,132,134,135,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,238,239,240,241,244,246,257,258,260,265,268,274,275,278,283,286,287,289,290,291,293,294,295,296,297,298,304,305,307,308,313,314,318,319,326,328,333,335,339,347,350,352,354,356,369,371,387,388,],[6,40,6,-20,-44,40,-46,40,-45,-48,40,-91,-19,40,-49,-18,40,-47,-50,-51,40,40,126,126,126,-56,-53,-64,-63,40,-92,-140,40,40,-55,40,-93,40,126,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-54,126,126,-40,-21,6,126,126,-24,126,126,126,-22,126,126,126,126,-52,-97,-60,40,-59,40,40,40,40,40,40,40,40,40,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,40,40,40,40,-29,126,-28,-27,126,126,-37,-36,126,126,126,40,-98,40,40,40,-4,40,126,126,6,126,126,-23,126,126,-26,-25,-39,-38,126,126,126,126,-62,-61,40,40,40,40,126,126,126,40,-134,40,126,126,40,-132,-129,-130,]),'CTX_SEMASSERT':([84,123,166,168,176,181,214,227,268,287,350,371,387,388,],[168,214,168,168,168,168,168,168,168,214,-134,-132,-129,-130,]),'MINUS':([16,33,34,36,38,39,40,41,42,47,48,50,51,53,55,77,78,81,82,83,84,85,86,89,91,92,111,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,260,265,268,274,275,291,295,296,297,298,312,313,314,318,319,326,328,347,350,352,369,371,387,388,],[43,-20,-44,-46,-45,-48,43,-91,-19,-49,-18,-47,-50,-51,97,-56,-53,-64,-63,97,43,-92,-140,-55,43,-93,97,-54,-40,-21,-24,-22,-52,-97,-60,43,-59,43,43,43,43,43,43,43,43,43,-58,-57,97,-90,97,97,-74,97,97,97,-73,97,-77,-76,97,-75,97,97,97,97,97,97,97,43,43,43,43,-29,-28,-27,-37,-36,-98,43,43,43,-4,-23,-26,-25,-39,-38,97,-62,-61,43,43,43,43,43,-134,43,43,-132,-129,-130,]),'CONTINUE':([84,166,168,176,181,214,227,268,350,371,387,388,],[180,180,180,180,180,180,180,180,-134,-132,-129,-130,]),'COLON':([33,34,36,38,39,41,42,47,48,50,51,53,55,59,62,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,137,147,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,218,229,235,236,240,241,253,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,94,119,134,-56,-53,-64,-63,94,-92,-140,-55,-93,94,-54,-40,-21,-24,-22,134,-16,-52,-97,-60,-59,-58,-57,94,-90,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,283,-29,-28,-27,-37,-36,-17,-98,-4,-23,-26,-25,-39,-38,94,-62,-61,]),'DOT':([27,33,34,36,38,39,41,42,47,48,50,51,53,77,78,89,116,121,127,132,137,156,161,163,182,183,229,240,241,291,295,296,297,298,313,314,],[71,-20,-44,-46,-45,-48,82,-19,-49,-18,-47,-50,-51,155,155,155,155,-21,236,-22,-21,-52,-60,-59,155,155,290,290,290,-23,-26,-25,290,290,-62,-61,]),'LNE':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,101,-56,-53,-64,-63,101,-92,-140,-55,-93,101,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,101,None,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,None,-82,-67,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,101,-62,-61,]),'IMPORT':([0,27,28,29,146,],[7,-204,7,73,-205,]),'BWXOR':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,114,-56,-53,-64,-63,114,-92,-140,-55,-93,114,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,114,-74,114,114,114,-73,114,-77,-76,-80,-75,114,114,114,114,114,-82,114,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,114,-62,-61,]),'IF':([84,166,168,176,181,214,227,268,350,371,387,388,],[175,265,265,175,265,265,265,175,-134,-132,-129,-130,]),'METHOD':([0,6,28,123,287,],[15,22,15,15,15,]),'?':([16,21,30,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,60,61,64,74,76,77,78,81,82,84,85,86,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,126,127,128,132,134,135,140,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,240,241,242,244,246,249,251,257,258,260,265,268,274,275,278,283,286,291,293,294,295,296,297,298,302,304,305,307,308,313,314,318,319,326,328,333,335,339,347,350,352,354,356,369,371,387,388,],[46,65,65,-20,-44,-46,-45,-48,46,-91,-19,46,-49,-18,-47,-50,-51,46,129,65,129,129,65,-56,-53,-64,-63,46,-92,-140,-55,46,-93,46,129,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-54,129,129,-40,-21,129,-24,129,-22,129,129,65,129,129,-52,-97,-60,46,-59,46,46,46,46,46,46,46,46,46,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,46,46,46,46,-29,129,-28,-27,-37,-36,-111,129,129,65,65,129,46,-98,46,46,46,-4,46,129,129,-23,129,129,-26,-25,-39,-38,65,129,129,129,129,-62,-61,46,46,46,46,129,129,129,46,-134,46,129,129,46,-132,-129,-130,]),'$end':([0,2,8,28,72,],[-15,0,-215,-15,-216,]),'PLUS':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,102,-56,-53,-64,-63,102,-92,-140,-55,-93,102,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,102,-90,102,102,-74,102,102,102,-73,102,-77,-76,102,-75,102,102,102,102,102,102,102,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,102,-62,-61,]),'INTF':([0,6,28,123,287,],[3,23,3,3,3,]),'MODULO':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,104,-56,-53,-64,-63,104,-92,-140,-55,-93,104,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,104,-90,104,104,104,104,104,104,104,104,None,None,104,-75,104,104,104,104,104,104,104,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,104,-62,-61,]),'STRING':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[38,-20,-44,38,-46,38,-45,-48,38,-91,-19,38,-49,-18,38,-47,-50,-51,38,38,-56,-53,-64,-63,38,-92,-140,38,38,-55,38,-93,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-54,-40,-21,-24,-22,-52,-97,-60,38,-59,38,38,38,38,38,38,38,38,38,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,38,38,38,38,-29,-28,-27,-37,-36,38,-98,38,38,38,-4,38,-23,-26,-25,-39,-38,-62,-61,38,38,38,38,38,-134,38,38,-132,-129,-130,]),'FOR':([84,166,168,176,181,214,227,268,350,371,387,388,],[171,171,171,171,171,171,171,171,-134,-132,-129,-130,]),'BWAND':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,106,-56,-53,-64,-63,106,-92,-140,-55,-93,106,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,106,-74,106,106,106,-73,106,-77,-76,-80,-75,106,106,106,106,106,106,106,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,106,-62,-61,]),'INHERIT':([32,33,34,36,38,39,41,42,44,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,98,111,116,120,121,123,127,132,156,157,161,163,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,229,235,236,240,241,260,275,285,287,291,295,296,297,298,313,314,324,],[-99,-20,-44,-46,-45,-48,-91,-19,-100,-49,-18,-47,-50,-51,-101,-56,-53,-64,-63,-102,-92,-140,-55,-93,-86,-84,-54,-40,-21,219,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,-89,-87,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-85,-68,-69,-82,-67,-29,-28,-27,-37,-36,-98,-4,326,219,-23,-26,-25,-39,-38,-62,-61,-88,]),'TIMES':([33,34,36,38,39,41,42,47,48,50,51,53,55,73,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,107,149,-56,-53,-64,-63,107,-92,-140,-55,-93,107,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,107,-90,107,107,107,107,107,107,107,107,107,107,107,-75,107,107,107,107,107,107,107,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,107,-62,-61,]),'PFOR':([84,166,168,176,181,214,227,268,350,371,387,388,],[172,172,172,172,172,172,172,172,-134,-132,-129,-130,]),'BANG':([15,22,33,34,36,38,39,41,42,47,48,50,51,53,77,78,89,116,121,127,132,137,156,161,163,182,183,229,240,241,291,295,296,297,298,313,314,],[31,66,-20,-44,-46,-45,-48,81,-19,-49,-18,-47,-50,-51,154,154,154,154,-21,235,-22,-21,-52,-60,-59,154,154,289,289,289,-23,-26,-25,289,289,-62,-61,]),'CTX_ASSERT':([84,166,168,176,181,214,227,268,350,371,387,388,],[166,166,166,166,166,166,166,166,-134,-132,-129,-130,]),'PASS':([84,166,168,176,181,214,227,268,350,371,387,388,],[173,173,173,173,173,173,173,173,-134,-132,-129,-130,]),'FALSE':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,77,78,81,82,84,85,86,87,88,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[50,-20,-44,50,-46,50,-45,-48,50,-91,-19,50,-49,-18,50,-47,-50,-51,50,50,-56,-53,-64,-63,50,-92,-140,50,50,-55,50,-93,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-54,-40,-21,-24,-22,-52,-97,-60,50,-59,50,50,50,50,50,50,50,50,50,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,50,50,50,50,-29,-28,-27,-37,-36,50,-98,50,50,50,-4,50,-23,-26,-25,-39,-38,-62,-61,50,50,50,50,50,-134,50,50,-132,-129,-130,]),'[':([81,82,154,155,],[162,164,162,164,]),'ELSE':([350,363,371,378,387,388,],[370,370,383,383,-129,-130,]),']':([32,33,34,36,38,39,41,42,44,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,98,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,229,235,236,240,241,260,261,262,275,291,295,296,297,298,313,314,324,],[-99,-20,-44,-46,-45,-48,-91,-19,-100,-49,-18,-47,-50,-51,-101,-56,-53,-64,-63,-102,-92,-140,-55,-93,-86,-84,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,-89,-87,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-85,-68,-69,-82,-67,-29,-28,-27,-37,-36,-98,313,314,-4,-23,-26,-25,-39,-38,-62,-61,-88,]),'REFDOT':([16,33,34,36,38,39,40,41,42,43,46,47,48,50,51,53,55,60,64,74,77,78,81,82,84,85,86,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,126,127,128,129,132,134,135,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,240,241,244,246,257,258,260,265,268,274,275,278,283,286,291,293,294,295,296,297,298,304,305,307,308,313,314,318,319,326,328,333,335,339,347,350,352,354,356,369,371,387,388,],[49,-20,-44,-46,-45,-48,49,-91,-19,49,88,-49,-18,-47,-50,-51,49,131,131,131,-56,-53,-64,-63,49,-92,-140,-55,49,-93,49,131,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-54,131,131,-40,-21,131,-24,131,239,-22,131,131,131,131,-52,-97,-60,49,-59,49,49,49,49,49,49,49,49,49,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,49,49,49,49,-29,131,-28,-27,-37,-36,131,131,131,49,-98,49,49,49,-4,49,131,131,-23,131,131,-26,-25,-39,-38,131,131,131,131,-62,-61,49,49,49,49,131,131,131,49,-134,49,131,131,49,-132,-129,-130,]),'OR':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,108,-56,-53,-64,-63,108,-92,-140,-55,-93,108,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,108,108,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,108,-82,-67,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,108,-62,-61,]),'AND':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,109,-56,-53,-64,-63,109,-92,-140,-55,-93,109,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,109,109,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,109,-82,-67,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,109,-62,-61,]),'RINIT':([33,34,36,38,39,41,42,47,48,50,51,53,77,78,80,81,82,85,86,89,92,116,120,121,127,132,156,157,159,160,161,163,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,259,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,-56,-53,157,-64,-63,-92,-140,-55,-93,-54,-40,-21,-24,-22,-52,-97,-95,260,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,-29,-28,-27,-37,-36,-96,-98,-4,-23,-26,-25,-39,-38,-94,-62,-61,]),'BWOR':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,123,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,287,291,295,296,297,298,312,313,314,320,368,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,110,-56,-53,-64,-63,110,-92,-140,-55,-93,110,-54,-40,-21,221,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,110,-74,110,110,110,-73,110,-77,-76,-80,-75,110,110,-81,110,110,-82,110,-29,-28,-27,-37,-36,-98,-4,221,-23,-26,-25,-39,-38,110,-62,-61,347,347,]),'FROM':([0,28,123,287,],[12,12,220,220,]),'LINIT':([33,34,36,38,39,41,42,47,48,50,51,53,156,161,163,313,314,],[-20,-44,-46,-45,-48,80,-19,-49,-18,-47,-50,-51,-52,-60,-59,-62,-61,]),'THIS':([16,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,55,56,60,64,74,77,78,81,82,84,85,86,87,88,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,124,126,127,128,130,131,132,134,135,151,152,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,234,235,236,238,239,240,241,244,246,257,258,260,265,268,274,275,278,283,286,289,290,291,293,294,295,296,297,298,304,305,307,308,313,314,318,319,326,328,333,335,339,347,350,352,354,356,369,371,387,388,],[51,-20,-44,51,-46,51,-45,-48,51,-91,-19,51,-49,-18,51,-47,-50,-51,51,51,132,132,132,-56,-53,-64,-63,51,-92,-140,51,51,-55,51,-93,51,132,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-54,132,132,-40,-21,132,132,-24,132,132,132,-22,132,132,132,132,-52,-97,-60,51,-59,51,51,51,51,51,51,51,51,51,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,51,51,51,51,-29,132,-28,-27,132,132,-37,-36,132,132,132,51,-98,51,51,51,-4,51,132,132,132,132,-23,132,132,-26,-25,-39,-38,132,132,132,132,-62,-61,51,51,51,51,132,132,132,51,-134,51,132,132,51,-132,-129,-130,]),'ISA':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,96,-56,-53,-64,-63,96,-92,-140,-55,-93,96,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,None,-74,-65,96,96,-73,-66,-77,-76,-80,-75,96,96,-81,-68,96,-82,-67,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,96,-62,-61,]),'ASSIGN':([19,20,21,30,32,33,34,36,38,39,41,42,44,47,48,50,51,52,53,55,57,58,59,61,63,75,76,77,78,81,82,83,85,86,89,92,98,111,116,118,120,121,127,132,133,140,153,156,157,158,161,163,177,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,229,235,236,240,241,242,247,249,250,251,252,260,275,280,286,291,295,296,297,298,302,303,306,313,314,324,327,334,],[-108,60,64,74,-99,-20,-44,-46,-45,-48,-91,-19,-100,-49,-18,-47,-50,91,-51,-101,117,-107,-103,-164,135,151,152,-56,-53,-64,-63,-102,-92,-140,-55,-93,-86,-84,-54,-104,-40,-21,-24,-22,-165,-166,257,-52,-97,258,-60,-59,274,-58,-57,-78,-90,-79,-83,-74,-65,-89,-87,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-85,-68,-69,-82,-67,-105,-29,-28,-27,-37,-36,-111,-167,304,305,307,308,-98,-4,-106,328,-23,-26,-25,-39,-38,333,335,339,-62,-61,-88,352,356,]),'BREAK':([84,166,168,176,181,214,227,268,350,371,387,388,],[179,179,179,179,179,179,179,179,-134,-132,-129,-130,]),'LEQ':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,113,-56,-53,-64,-63,113,-92,-140,-55,-93,113,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,113,None,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,None,-82,-67,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,113,-62,-61,]),'FUTURE':([16,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,77,78,81,82,84,85,86,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[54,-20,-44,-46,-45,-48,54,-91,-19,54,-49,-18,-47,-50,-51,54,-56,-53,-64,-63,54,-92,-140,-55,54,-93,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-54,-40,-21,-24,-22,-52,-97,-60,54,-59,54,54,54,54,54,54,54,54,54,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,54,54,54,54,-29,-28,-27,-37,-36,54,-98,54,54,54,-4,54,-23,-26,-25,-39,-38,-62,-61,54,54,54,54,54,-134,54,54,-132,-129,-130,]),'LET':([0,28,84,123,166,168,176,181,214,227,268,287,350,371,387,388,],[16,16,16,16,16,16,16,16,16,16,16,16,-134,-132,-129,-130,]),'LLE':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,103,-56,-53,-64,-63,103,-92,-140,-55,-93,103,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,103,-74,None,103,103,-73,None,-77,-76,-80,-75,103,103,-81,None,103,-82,None,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,103,-62,-61,]),'NOT':([16,33,34,36,38,39,40,41,42,43,47,48,50,51,53,55,77,78,81,82,84,85,86,89,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,132,156,157,161,162,163,164,165,166,167,168,174,175,176,181,182,183,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,204,205,206,207,214,219,220,227,229,235,236,240,241,258,260,265,268,274,275,278,291,295,296,297,298,313,314,318,319,326,328,347,350,352,369,371,387,388,],[56,-20,-44,-46,-45,-48,56,-91,-19,56,-49,-18,-47,-50,-51,56,-56,-53,-64,-63,56,-92,-140,-55,56,-93,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-54,-40,-21,-24,-22,-52,-97,-60,56,-59,56,56,56,56,56,56,56,56,56,-58,-57,-78,-90,-79,-83,-74,-65,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,56,56,56,56,-29,-28,-27,-37,-36,56,-98,56,56,56,-4,56,-23,-26,-25,-39,-38,-62,-61,56,56,56,56,56,-134,56,56,-132,-129,-130,]),'CTX_SEMCLAIM':([84,123,166,168,176,181,214,227,268,287,350,371,387,388,],[181,227,181,181,181,181,181,181,181,227,-134,-132,-129,-130,]),'COMMA':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,85,86,89,92,116,120,121,127,132,136,137,139,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,234,235,236,240,241,242,260,275,291,295,296,297,298,313,314,330,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,100,-56,-53,-64,-63,-92,-140,-55,-93,-54,-40,-21,-24,-22,244,-21,246,-52,-97,-60,-59,-58,-57,-78,-90,-79,-83,-74,-65,278,-70,-73,-66,-77,-76,-80,-75,-72,-71,-81,-68,-69,-82,-67,-29,293,-28,-27,-37,-36,-111,-98,-4,-23,-26,-25,-39,-38,-62,-61,354,]),'TYPE':([0,6,28,123,287,],[18,25,18,18,18,]),'LLT':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,99,-56,-53,-64,-63,99,-92,-140,-55,-93,99,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,99,-74,None,99,99,-73,None,-77,-76,-80,-75,99,99,-81,None,99,-82,None,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,99,-62,-61,]),'LGT':([33,34,36,38,39,41,42,47,48,50,51,53,55,77,78,81,82,83,85,86,89,92,111,116,120,121,127,132,156,157,161,163,182,183,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,229,235,236,240,241,260,275,291,295,296,297,298,312,313,314,],[-20,-44,-46,-45,-48,-91,-19,-49,-18,-47,-50,-51,115,-56,-53,-64,-63,115,-92,-140,-55,-93,115,-54,-40,-21,-24,-22,-52,-97,-60,-59,-58,-57,-78,-90,-79,115,-74,None,115,115,-73,None,-77,-76,-80,-75,115,115,-81,None,115,-82,None,-29,-28,-27,-37,-36,-98,-4,-23,-26,-25,-39,-38,115,-62,-61,]),'MATCH':([84,166,168,176,181,214,227,268,350,371,387,388,],[174,174,174,174,174,174,174,174,-134,-132,-129,-130,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_call':([16,40,84,91,162,164,165,166,167,168,174,175,176,181,214,219,220,227,265,268,274,318,319,326,328,347,352,369,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'statements_block':([45,52,54,138,150,184,243,255,256,266,272,311,315,336,340,345,346,355,357,360,366,370,375,381,383,],[85,90,92,245,254,277,299,309,310,316,322,343,344,358,361,364,365,374,376,377,379,382,384,385,386,]),'typedecl':([0,28,123,287,],[1,1,211,211,]),'elif_list':([350,363,387,],[371,378,388,]),'type_top':([126,283,],[231,325,]),'matchers_block_blocklist':([320,368,],[348,380,]),'funargs':([21,30,61,76,140,249,251,302,],[63,75,133,153,247,303,306,334,]),'module':([0,28,],[2,72,]),'static_pattern':([0,28,],[11,11,]),'_statements_block_blocklist':([84,176,268,],[178,273,317,]),'expr_tuple_list':([100,278,],[191,324,]),'typedeclname':([3,18,143,145,],[20,57,250,252,]),'inherit':([123,287,],[226,226,]),'typedecl_block':([60,117,125,209,305,308,338,342,],[122,208,230,279,337,341,359,362,]),'methoddecl':([0,28,123,287,],[5,5,212,212,]),'expr_call_list':([55,111,],[98,203,]),'isalist':([60,117,128,305,308,],[125,209,237,338,342,]),'pattern':([0,28,84,123,166,168,176,181,214,227,268,287,],[17,17,169,215,169,169,169,169,169,169,169,215,]),'type_app_list':([234,294,],[292,332,]),'expr_postfix':([16,35,37,40,43,49,55,56,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,162,164,165,166,167,168,174,175,176,181,214,219,220,227,258,265,268,274,278,318,319,326,328,347,352,369,],[41,77,78,41,41,89,41,116,41,182,183,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'typedecl_block_blocklist':([123,287,],[216,329,]),'value_3':([16,35,37,40,43,49,55,56,81,82,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,154,155,162,164,165,166,167,168,174,175,176,181,214,219,220,227,258,265,268,274,278,318,319,326,328,347,352,369,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'value_2':([16,35,37,40,43,49,55,56,81,82,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,154,155,162,164,165,166,167,168,174,175,176,181,214,219,220,227,258,265,268,274,278,318,319,326,328,347,352,369,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'expr_tuple':([16,40,84,91,162,164,165,166,167,168,174,175,176,181,214,219,220,227,265,268,274,318,319,326,328,347,352,369,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'_statements_block':([45,52,54,138,150,184,243,255,256,266,272,311,315,336,340,345,346,355,357,360,366,370,375,381,383,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'type_tuple_list':([293,354,],[331,373,]),'statement':([84,166,168,176,181,214,227,268,],[170,264,267,170,276,281,288,170,]),'initializer_pair':([80,159,],[159,159,]),'import':([0,28,],[10,10,]),'type_postfix':([60,64,74,94,117,119,124,126,128,130,131,134,135,151,152,234,235,236,238,239,244,246,257,283,286,289,290,293,294,304,305,307,308,333,335,339,354,356,],[127,127,127,127,127,127,229,127,127,240,241,127,127,127,127,127,295,296,297,298,127,127,127,127,127,295,296,127,127,127,127,127,127,127,127,127,127,127,]),'type':([60,64,74,94,117,119,126,128,134,135,151,152,234,244,246,257,283,286,293,294,304,305,307,308,333,335,339,354,356,],[128,139,139,186,128,210,234,128,242,139,139,139,294,139,139,139,234,327,330,294,139,128,139,128,139,139,139,330,139,]),'empty':([0,28,123,287,],[8,8,217,217,]),'typedident':([21,30,61,64,65,74,76,135,140,151,152,171,172,244,246,249,251,257,302,304,307,333,335,339,356,],[61,61,61,136,140,136,61,136,61,136,136,269,270,136,136,61,61,136,61,136,136,136,136,136,136,]),'funretvals':([64,74,135,151,152,244,246,257,304,307,333,335,339,356,],[138,150,243,255,256,300,301,311,336,340,355,357,360,375,]),'idents':([73,123,147,287,],[148,218,253,218,]),'matcher':([320,368,],[349,349,]),'initializer_list':([80,159,],[160,259,]),'type_app':([126,283,],[232,232,]),'toplevel':([0,28,],[9,9,]),'type_ref':([60,64,74,94,117,119,126,128,134,135,151,152,234,244,246,257,283,286,293,294,304,305,307,308,333,335,339,354,356,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'typedeclname_list':([19,22,23,24,25,59,66,210,],[58,67,68,69,70,118,141,280,]),'matchers_block':([271,],[321,]),'modname':([7,12,71,],[26,29,146,]),'statement_witheol':([84,176,268,],[176,176,176,]),'typedecl_statement':([123,287,],[222,222,]),'fieldchoicedecl':([123,287,],[213,213,]),'intfdecl':([0,28,123,287,],[13,13,223,223,]),'expr_top':([16,40,84,91,162,164,165,166,167,168,174,175,176,181,214,219,220,227,265,268,274,318,319,326,328,347,352,369,],[52,79,177,184,261,262,263,177,266,177,271,272,177,177,177,284,285,177,315,177,323,345,346,351,353,366,372,381,]),'choicedecl':([123,287,],[224,224,]),'fundecl':([0,28,123,287,],[14,14,225,225,]),'value':([16,35,37,40,43,49,55,56,81,82,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,154,155,162,164,165,166,167,168,174,175,176,181,214,219,220,227,258,265,268,274,278,318,319,326,328,347,352,369,],[53,53,53,53,53,53,53,53,161,163,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,161,163,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'fielddecl':([123,287,],[228,228,]),'type_tuple':([126,283,],[233,233,]),'expr':([16,40,43,55,84,91,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,162,164,165,166,167,168,174,175,176,181,214,219,220,227,258,265,268,274,278,318,319,326,328,347,352,369,],[55,55,83,111,55,55,185,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,111,204,205,206,207,55,55,55,55,55,55,55,55,55,55,55,55,55,55,312,55,55,55,192,55,55,55,55,55,55,55,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('fieldchoicedecl -> empty','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/nparser.py',175),
  ('fieldchoicedecl -> choicedecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/nparser.py',176),
  ('fieldchoicedecl -> fielddecl','fieldchoicedecl',1,'p_fieldchoicedecl','/home/e/nc/n/bootstrap/nparser.py',177),
  ('_statements_block -> SOB _statements_block_blocklist EOB','_statements_block',3,'p__statements_block','/home/e/nc/n/bootstrap/nparser.py',188),
  ('matchers_block -> SOB matchers_block_blocklist EOB','matchers_block',3,'p_matchers_block','/home/e/nc/n/bootstrap/nparser.py',188),
  ('typedecl_block -> SOB typedecl_block_blocklist EOB','typedecl_block',3,'p_typedecl_block','/home/e/nc/n/bootstrap/nparser.py',188),
  ('_statements_block_blocklist -> statement EOL','_statements_block_blocklist',2,'p__statements_block_blocklist','/home/e/nc/n/bootstrap/nparser.py',193),
  ('_statements_block_blocklist -> statement EOL _statements_block_blocklist','_statements_block_blocklist',3,'p__statements_block_blocklist','/home/e/nc/n/bootstrap/nparser.py',194),
  ('matchers_block_blocklist -> matcher EOL','matchers_block_blocklist',2,'p_matchers_block_blocklist','/home/e/nc/n/bootstrap/nparser.py',193),
  ('matchers_block_blocklist -> matcher EOL matchers_block_blocklist','matchers_block_blocklist',3,'p_matchers_block_blocklist','/home/e/nc/n/bootstrap/nparser.py',194),
  ('typedecl_block_blocklist -> typedecl_statement EOL','typedecl_block_blocklist',2,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/nparser.py',193),
  ('typedecl_block_blocklist -> typedecl_statement EOL typedecl_block_blocklist','typedecl_block_blocklist',3,'p_typedecl_block_blocklist','/home/e/nc/n/bootstrap/nparser.py',194),
  ('_statements_block_blocklist -> statement_witheol','_statements_block_blocklist',1,'p__statements_block_blocklist_1','/home/e/nc/n/bootstrap/nparser.py',207),
  ('_statements_block_blocklist -> statement_witheol _statements_block_blocklist','_statements_block_blocklist',2,'p__statements_block_blocklist_1','/home/e/nc/n/bootstrap/nparser.py',208),
  ('empty -> <empty>','empty',0,'p_empty','/home/e/nc/n/bootstrap/nparser.py',241),
  ('idents -> IDENT','idents',1,'p_idents','/home/e/nc/n/bootstrap/nparser.py',245),
  ('idents -> IDENT idents','idents',2,'p_idents','/home/e/nc/n/bootstrap/nparser.py',246),
  ('value_3 -> IDENT','value_3',1,'p_value_ident','/home/e/nc/n/bootstrap/nparser.py',253),
  ('value_2 -> value_3','value_2',1,'p_value_2','/home/e/nc/n/bootstrap/nparser.py',258),
  ('value -> value_2','value',1,'p_value','/home/e/nc/n/bootstrap/nparser.py',262),
  ('type_postfix -> IDENT','type_postfix',1,'p_type_name','/home/e/nc/n/bootstrap/nparser.py',266),
  ('type_postfix -> THIS','type_postfix',1,'p_type_this','/home/e/nc/n/bootstrap/nparser.py',270),
  ('type_postfix -> ( type_top )','type_postfix',3,'p_type_postfix_top','/home/e/nc/n/bootstrap/nparser.py',274),
  ('type -> type_postfix','type',1,'p_type_postfix','/home/e/nc/n/bootstrap/nparser.py',278),
  ('type_postfix -> type_postfix DOT type_postfix','type_postfix',3,'p_type_field','/home/e/nc/n/bootstrap/nparser.py',282),
  ('type_postfix -> type_postfix BANG type_postfix','type_postfix',3,'p_type_field','/home/e/nc/n/bootstrap/nparser.py',283),
  ('type -> type_postfix DOT','type',2,'p_type_deref','/home/e/nc/n/bootstrap/nparser.py',287),
  ('type -> type_postfix BANG','type',2,'p_type_deref','/home/e/nc/n/bootstrap/nparser.py',288),
  ('type_postfix -> SLICEBRAKETS type_postfix','type_postfix',2,'p_type_slice','/home/e/nc/n/bootstrap/nparser.py',292),
  ('type_tuple_list -> type','type_tuple_list',1,'p_type_tuple_list','/home/e/nc/n/bootstrap/nparser.py',296),
  ('type_tuple_list -> type COMMA type_tuple_list','type_tuple_list',3,'p_type_tuple_list','/home/e/nc/n/bootstrap/nparser.py',297),
  ('type_tuple -> type COMMA type_tuple_list','type_tuple',3,'p_type_tuple_only','/home/e/nc/n/bootstrap/nparser.py',304),
  ('type_app_list -> type','type_app_list',1,'p_type_app_list','/home/e/nc/n/bootstrap/nparser.py',308),
  ('type_app_list -> type type_app_list','type_app_list',2,'p_type_app_list','/home/e/nc/n/bootstrap/nparser.py',309),
  ('type_app -> type type_app_list','type_app',2,'p_type_app_only','/home/e/nc/n/bootstrap/nparser.py',316),
  ('type_ref -> REFDOT type_postfix','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/nparser.py',320),
  ('type_ref -> REFBANG type_postfix','type_ref',2,'p_type_ref_only','/home/e/nc/n/bootstrap/nparser.py',321),
  ('type_ref -> ? REFDOT type_postfix','type_ref',3,'p_type_ref_nullable','/home/e/nc/n/bootstrap/nparser.py',328),
  ('type_ref -> ? REFBANG type_postfix','type_ref',3,'p_type_ref_nullable','/home/e/nc/n/bootstrap/nparser.py',329),
  ('type -> type_ref','type',1,'p_type_ref','/home/e/nc/n/bootstrap/nparser.py',336),
  ('type_top -> type_app','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/nparser.py',340),
  ('type_top -> type_tuple','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/nparser.py',341),
  ('type_top -> type','type_top',1,'p_type_top','/home/e/nc/n/bootstrap/nparser.py',342),
  ('expr_postfix -> NUMBER','expr_postfix',1,'p_expr_postfix_literal_number','/home/e/nc/n/bootstrap/nparser.py',346),
  ('expr_postfix -> STRING','expr_postfix',1,'p_expr_postfix_string','/home/e/nc/n/bootstrap/nparser.py',350),
  ('expr_postfix -> TRUE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/nparser.py',354),
  ('expr_postfix -> FALSE','expr_postfix',1,'p_expr_postfix_truefalse','/home/e/nc/n/bootstrap/nparser.py',355),
  ('expr_postfix -> NULL','expr_postfix',1,'p_expr_postfix_null','/home/e/nc/n/bootstrap/nparser.py',362),
  ('expr_postfix -> SIZEOF','expr_postfix',1,'p_expr_postfix_sizeof','/home/e/nc/n/bootstrap/nparser.py',366),
  ('expr_postfix -> THIS','expr_postfix',1,'p_expr_postfix_this','/home/e/nc/n/bootstrap/nparser.py',370),
  ('expr_postfix -> value','expr_postfix',1,'p_expr_postfix_value','/home/e/nc/n/bootstrap/nparser.py',374),
  ('expr_postfix -> ( expr_top )','expr_postfix',3,'p_expr_postfix_group','/home/e/nc/n/bootstrap/nparser.py',378),
  ('expr -> UBWNOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/nparser.py',382),
  ('expr -> NOT expr_postfix','expr',2,'p_expr_unnop','/home/e/nc/n/bootstrap/nparser.py',383),
  ('expr -> REFDOT expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/nparser.py',387),
  ('expr -> REFBANG expr_postfix','expr',2,'p_expr_ref','/home/e/nc/n/bootstrap/nparser.py',388),
  ('expr -> ? REFDOT expr_postfix','expr',3,'p_expr_ref_nullable','/home/e/nc/n/bootstrap/nparser.py',395),
  ('expr -> ? REFBANG expr_postfix','expr',3,'p_expr_ref_nullable','/home/e/nc/n/bootstrap/nparser.py',396),
  ('expr_postfix -> expr_postfix DOT value','expr_postfix',3,'p_expr_field','/home/e/nc/n/bootstrap/nparser.py',403),
  ('expr_postfix -> expr_postfix BANG value','expr_postfix',3,'p_expr_field','/home/e/nc/n/bootstrap/nparser.py',404),
  ('expr_postfix -> expr_postfix DOT [ expr_top ]','expr_postfix',5,'p_expr_element','/home/e/nc/n/bootstrap/nparser.py',410),
  ('expr_postfix -> expr_postfix BANG [ expr_top ]','expr_postfix',5,'p_expr_element','/home/e/nc/n/bootstrap/nparser.py',411),
  ('expr -> expr_postfix DOT','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/nparser.py',415),
  ('expr -> expr_postfix BANG','expr',2,'p_expr_deref','/home/e/nc/n/bootstrap/nparser.py',416),
  ('expr -> expr LLT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/nparser.py',420),
  ('expr -> expr LLE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/nparser.py',421),
  ('expr -> expr LGT expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/nparser.py',422),
  ('expr -> expr LGE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/nparser.py',423),
  ('expr -> expr LEQ expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/nparser.py',424),
  ('expr -> expr LNE expr','expr',3,'p_expr_cmpbinop','/home/e/nc/n/bootstrap/nparser.py',425),
  ('expr -> expr AND expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/nparser.py',429),
  ('expr -> expr OR expr','expr',3,'p_expr_boolbinop','/home/e/nc/n/bootstrap/nparser.py',430),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',434),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',435),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',436),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',437),
  ('expr -> expr MODULO expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',438),
  ('expr -> expr RSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',439),
  ('expr -> expr LSHIFT expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',440),
  ('expr -> expr BWAND expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',441),
  ('expr -> expr BWOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',442),
  ('expr -> expr BWXOR expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',443),
  ('expr -> expr ISA expr','expr',3,'p_expr_binop','/home/e/nc/n/bootstrap/nparser.py',444),
  ('expr_call_list -> expr','expr_call_list',1,'p_expr_call_list','/home/e/nc/n/bootstrap/nparser.py',448),
  ('expr_call_list -> expr expr_call_list','expr_call_list',2,'p_expr_call_list','/home/e/nc/n/bootstrap/nparser.py',449),
  ('expr_call -> expr expr_call_list','expr_call',2,'p_expr_call_only','/home/e/nc/n/bootstrap/nparser.py',456),
  ('expr_tuple_list -> expr','expr_tuple_list',1,'p_expr_tuple_list','/home/e/nc/n/bootstrap/nparser.py',461),
  ('expr_tuple_list -> expr COMMA expr_tuple_list','expr_tuple_list',3,'p_expr_tuple_list','/home/e/nc/n/bootstrap/nparser.py',462),
  ('expr_tuple -> expr COMMA expr_tuple_list','expr_tuple',3,'p_expr_tuple_only','/home/e/nc/n/bootstrap/nparser.py',469),
  ('expr -> expr COLON type','expr',3,'p_expr_constrained','/home/e/nc/n/bootstrap/nparser.py',474),
  ('expr -> expr_postfix','expr',1,'p_expr_postfix','/home/e/nc/n/bootstrap/nparser.py',478),
  ('expr -> BLOCK statements_block','expr',2,'p_expr_block','/home/e/nc/n/bootstrap/nparser.py',482),
  ('expr -> FUTURE statements_block','expr',2,'p_expr_future','/home/e/nc/n/bootstrap/nparser.py',485),
  ('initializer_pair -> IDENT ASSIGN expr','initializer_pair',3,'p_expr_initializer_pair','/home/e/nc/n/bootstrap/nparser.py',488),
  ('initializer_list -> initializer_pair','initializer_list',1,'p_expr_initializer_list','/home/e/nc/n/bootstrap/nparser.py',492),
  ('initializer_list -> initializer_pair initializer_list','initializer_list',2,'p_expr_initializer_list','/home/e/nc/n/bootstrap/nparser.py',493),
  ('expr -> expr_postfix LINIT RINIT','expr',3,'p_expr_initializer','/home/e/nc/n/bootstrap/nparser.py',500),
  ('expr -> expr_postfix LINIT initializer_list RINIT','expr',4,'p_expr_initializer','/home/e/nc/n/bootstrap/nparser.py',501),
  ('expr_top -> expr_call','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/nparser.py',508),
  ('expr_top -> expr_tuple','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/nparser.py',509),
  ('expr_top -> expr','expr_top',1,'p_expr_top','/home/e/nc/n/bootstrap/nparser.py',510),
  ('expr_top -> MINUS expr','expr_top',2,'p_expr_top_unary','/home/e/nc/n/bootstrap/nparser.py',514),
  ('typedeclname_list -> IDENT','typedeclname_list',1,'p_typedeclname_list','/home/e/nc/n/bootstrap/nparser.py',518),
  ('typedeclname_list -> IDENT typedeclname_list','typedeclname_list',2,'p_typedeclname_list','/home/e/nc/n/bootstrap/nparser.py',519),
  ('typedeclname_list -> IDENT COLON type','typedeclname_list',3,'p_typedeclname_list','/home/e/nc/n/bootstrap/nparser.py',520),
  ('typedeclname_list -> IDENT COLON type typedeclname_list','typedeclname_list',4,'p_typedeclname_list','/home/e/nc/n/bootstrap/nparser.py',521),
  ('typedeclname -> IDENT typedeclname_list','typedeclname',2,'p_typedeclname_generic','/home/e/nc/n/bootstrap/nparser.py',532),
  ('typedeclname -> IDENT','typedeclname',1,'p_typedeclname','/home/e/nc/n/bootstrap/nparser.py',536),
  ('isalist -> type','isalist',1,'p_isalist','/home/e/nc/n/bootstrap/nparser.py',540),
  ('isalist -> type isalist','isalist',2,'p_isalist','/home/e/nc/n/bootstrap/nparser.py',541),
  ('typedident -> IDENT COLON type','typedident',3,'p_typedident','/home/e/nc/n/bootstrap/nparser.py',548),
  ('pattern -> LET expr_top','pattern',2,'p_pattern','/home/e/nc/n/bootstrap/nparser.py',552),
  ('pattern -> LET expr_top ASSIGN expr_top','pattern',4,'p_pattern_expr','/home/e/nc/n/bootstrap/nparser.py',556),
  ('pattern -> LET expr_top statements_block','pattern',3,'p_pattern_mutating','/home/e/nc/n/bootstrap/nparser.py',560),
  ('pattern -> LET expr_top ASSIGN expr_top statements_block','pattern',5,'p_pattern_expr_mutating','/home/e/nc/n/bootstrap/nparser.py',566),
  ('static_pattern -> pattern','static_pattern',1,'p_static_pattern','/home/e/nc/n/bootstrap/nparser.py',572),
  ('fielddecl -> idents COLON type_top','fielddecl',3,'p_fielddecl','/home/e/nc/n/bootstrap/nparser.py',577),
  ('statement -> PASS','statement',1,'p_statement_pass','/home/e/nc/n/bootstrap/nparser.py',581),
  ('statement -> pattern','statement',1,'p_statement_pattern','/home/e/nc/n/bootstrap/nparser.py',585),
  ('statement -> expr_top ASSIGN expr_top','statement',3,'p_statement_assign','/home/e/nc/n/bootstrap/nparser.py',589),
  ('statement -> expr_top','statement',1,'p_statement_expr','/home/e/nc/n/bootstrap/nparser.py',598),
  ('statement -> RETURN','statement',1,'p_statement_return','/home/e/nc/n/bootstrap/nparser.py',602),
  ('statement -> RETURN expr_top','statement',2,'p_statement_return','/home/e/nc/n/bootstrap/nparser.py',603),
  ('statement -> WHILE expr_top statements_block','statement',3,'p_statement_while','/home/e/nc/n/bootstrap/nparser.py',610),
  ('statement -> FOR typedident IN expr_top statements_block','statement',5,'p_statement_for','/home/e/nc/n/bootstrap/nparser.py',614),
  ('statement -> PFOR typedident IN expr_top statements_block','statement',5,'p_statement_pfor','/home/e/nc/n/bootstrap/nparser.py',618),
  ('statement -> BREAK','statement',1,'p_statement_break','/home/e/nc/n/bootstrap/nparser.py',622),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','/home/e/nc/n/bootstrap/nparser.py',626),
  ('elif_list -> ELIF expr_top statements_block EOL','elif_list',4,'p_statement_elif_list','/home/e/nc/n/bootstrap/nparser.py',630),
  ('elif_list -> ELIF expr_top statements_block EOL elif_list','elif_list',5,'p_statement_elif_list','/home/e/nc/n/bootstrap/nparser.py',631),
  ('statement -> IF expr_top statements_block EOL elif_list ELSE statements_block','statement',7,'p_statement_if_elif_else','/home/e/nc/n/bootstrap/nparser.py',638),
  ('statement_witheol -> IF expr_top statements_block EOL elif_list','statement_witheol',5,'p_statement_if_elif','/home/e/nc/n/bootstrap/nparser.py',642),
  ('statement -> IF expr_top statements_block EOL ELSE statements_block','statement',6,'p_statement_if_else','/home/e/nc/n/bootstrap/nparser.py',646),
  ('statement_witheol -> IF expr_top statements_block EOL','statement_witheol',4,'p_statement_if','/home/e/nc/n/bootstrap/nparser.py',650),
  ('matcher -> BWOR expr_top statements_block','matcher',3,'p_matchers','/home/e/nc/n/bootstrap/nparser.py',654),
  ('statement -> MATCH expr_top matchers_block','statement',3,'p_match','/home/e/nc/n/bootstrap/nparser.py',658),
  ('statement -> CTX_ASSERT statement','statement',2,'p_statement_assert','/home/e/nc/n/bootstrap/nparser.py',662),
  ('statement -> CTX_SEMASSERT statement','statement',2,'p_statement_semanticassert','/home/e/nc/n/bootstrap/nparser.py',666),
  ('statement -> CTX_SEMCLAIM statement','statement',2,'p_statement_semanticclaim','/home/e/nc/n/bootstrap/nparser.py',670),
  ('statements_block -> _statements_block','statements_block',1,'p_statements_block','/home/e/nc/n/bootstrap/nparser.py',674),
  ('choicedecl -> BWOR IDENT','choicedecl',2,'p_choicedecl','/home/e/nc/n/bootstrap/nparser.py',678),
  ('choicedecl -> BWOR IDENT ASSIGN expr_top','choicedecl',4,'p_choicedecl_value','/home/e/nc/n/bootstrap/nparser.py',682),
  ('choicedecl -> BWOR IDENT type','choicedecl',3,'p_choicedecl_type','/home/e/nc/n/bootstrap/nparser.py',686),
  ('choicedecl -> BWOR IDENT type ASSIGN expr_top','choicedecl',5,'p_choicedecl_type_value','/home/e/nc/n/bootstrap/nparser.py',690),
  ('typedecl_statement -> inherit','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/nparser.py',694),
  ('typedecl_statement -> fieldchoicedecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/nparser.py',695),
  ('typedecl_statement -> typedecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/nparser.py',696),
  ('typedecl_statement -> fundecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/nparser.py',697),
  ('typedecl_statement -> methoddecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/nparser.py',698),
  ('typedecl_statement -> intfdecl','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/nparser.py',699),
  ('typedecl_statement -> pattern','typedecl_statement',1,'p_typedecl_statement','/home/e/nc/n/bootstrap/nparser.py',700),
  ('typedecl_statement -> CTX_SEMASSERT statement','typedecl_statement',2,'p_typedecl_semanticassert','/home/e/nc/n/bootstrap/nparser.py',704),
  ('typedecl_statement -> CTX_SEMCLAIM statement','typedecl_statement',2,'p_typedecl_semanticclaim','/home/e/nc/n/bootstrap/nparser.py',708),
  ('inherit -> INHERIT expr_top','inherit',2,'p_inherit','/home/e/nc/n/bootstrap/nparser.py',712),
  ('inherit -> FROM expr_top INHERIT expr_top','inherit',4,'p_inherit','/home/e/nc/n/bootstrap/nparser.py',713),
  ('typedecl -> TYPE typedeclname ASSIGN','typedecl',3,'p_typedecl_empty','/home/e/nc/n/bootstrap/nparser.py',741),
  ('typedecl -> TYPE typedeclname ASSIGN isalist','typedecl',4,'p_typedecl_empty','/home/e/nc/n/bootstrap/nparser.py',742),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN','typedecl',6,'p_typedecl_empty','/home/e/nc/n/bootstrap/nparser.py',743),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN isalist','typedecl',7,'p_typedecl_empty','/home/e/nc/n/bootstrap/nparser.py',744),
  ('typedecl -> TYPE typedeclname ASSIGN typedecl_block','typedecl',4,'p_typedecl','/home/e/nc/n/bootstrap/nparser.py',764),
  ('typedecl -> TYPE typedeclname ASSIGN isalist typedecl_block','typedecl',5,'p_typedecl','/home/e/nc/n/bootstrap/nparser.py',765),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN typedecl_block','typedecl',7,'p_typedecl','/home/e/nc/n/bootstrap/nparser.py',766),
  ('typedecl -> ( TYPE typedeclname_list ) typedeclname ASSIGN isalist typedecl_block','typedecl',8,'p_typedecl','/home/e/nc/n/bootstrap/nparser.py',767),
  ('funargs -> typedident','funargs',1,'p_funargs','/home/e/nc/n/bootstrap/nparser.py',793),
  ('funargs -> typedident funargs','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/nparser.py',794),
  ('funargs -> ? typedident','funargs',2,'p_funargs','/home/e/nc/n/bootstrap/nparser.py',795),
  ('funargs -> ? typedident funargs','funargs',3,'p_funargs','/home/e/nc/n/bootstrap/nparser.py',796),
  ('funretvals -> typedident','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/nparser.py',809),
  ('funretvals -> type','funretvals',1,'p_funretvals','/home/e/nc/n/bootstrap/nparser.py',810),
  ('funretvals -> typedident COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/nparser.py',811),
  ('funretvals -> type COMMA funretvals','funretvals',3,'p_funretvals','/home/e/nc/n/bootstrap/nparser.py',812),
  ('fundecl -> FUN IDENT ASSIGN funretvals','fundecl',4,'p_fundecl_forward','/home/e/nc/n/bootstrap/nparser.py',819),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals','fundecl',5,'p_fundecl_forward','/home/e/nc/n/bootstrap/nparser.py',820),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals','fundecl',7,'p_fundecl_forward','/home/e/nc/n/bootstrap/nparser.py',821),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals','fundecl',8,'p_fundecl_forward','/home/e/nc/n/bootstrap/nparser.py',822),
  ('fundecl -> FUN IDENT ASSIGN funretvals statements_block','fundecl',5,'p_fundecl','/home/e/nc/n/bootstrap/nparser.py',833),
  ('fundecl -> FUN IDENT funargs ASSIGN funretvals statements_block','fundecl',6,'p_fundecl','/home/e/nc/n/bootstrap/nparser.py',834),
  ('fundecl -> ( FUN typedeclname_list ) IDENT ASSIGN funretvals statements_block','fundecl',8,'p_fundecl','/home/e/nc/n/bootstrap/nparser.py',835),
  ('fundecl -> ( FUN typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','fundecl',9,'p_fundecl','/home/e/nc/n/bootstrap/nparser.py',836),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals','methoddecl',4,'p_methoddecl_forward','/home/e/nc/n/bootstrap/nparser.py',847),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals','methoddecl',5,'p_methoddecl_forward','/home/e/nc/n/bootstrap/nparser.py',848),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals','methoddecl',7,'p_methoddecl_forward','/home/e/nc/n/bootstrap/nparser.py',849),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals','methoddecl',8,'p_methoddecl_forward','/home/e/nc/n/bootstrap/nparser.py',850),
  ('methoddecl -> METHOD IDENT ASSIGN funretvals statements_block','methoddecl',5,'p_methoddecl','/home/e/nc/n/bootstrap/nparser.py',861),
  ('methoddecl -> METHOD IDENT funargs ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl','/home/e/nc/n/bootstrap/nparser.py',862),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',8,'p_methoddecl','/home/e/nc/n/bootstrap/nparser.py',863),
  ('methoddecl -> ( METHOD typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl','/home/e/nc/n/bootstrap/nparser.py',864),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals','methoddecl',5,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/nparser.py',875),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals','methoddecl',6,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/nparser.py',876),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals','methoddecl',8,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/nparser.py',877),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals','methoddecl',9,'p_methoddecl_mutating_forward','/home/e/nc/n/bootstrap/nparser.py',878),
  ('methoddecl -> METHOD BANG IDENT ASSIGN funretvals statements_block','methoddecl',6,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/nparser.py',889),
  ('methoddecl -> METHOD BANG IDENT funargs ASSIGN funretvals statements_block','methoddecl',7,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/nparser.py',890),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT ASSIGN funretvals statements_block','methoddecl',9,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/nparser.py',891),
  ('methoddecl -> ( METHOD BANG typedeclname_list ) IDENT funargs ASSIGN funretvals statements_block','methoddecl',10,'p_methoddecl_mutating','/home/e/nc/n/bootstrap/nparser.py',892),
  ('intfdecl -> INTF typedeclname ASSIGN','intfdecl',3,'p_intfdecl_empty','/home/e/nc/n/bootstrap/nparser.py',903),
  ('intfdecl -> INTF typedeclname ASSIGN isalist','intfdecl',4,'p_intfdecl_empty','/home/e/nc/n/bootstrap/nparser.py',904),
  ('intfdecl -> ( INTF typedeclname_list ) typedeclname ASSIGN','intfdecl',6,'p_intfdecl_empty','/home/e/nc/n/bootstrap/nparser.py',905),
  ('intfdecl -> ( INTF typedeclname_list ) typedeclname ASSIGN isalist','intfdecl',7,'p_intfdecl_empty','/home/e/nc/n/bootstrap/nparser.py',906),
  ('intfdecl -> INTF typedeclname ASSIGN typedecl_block','intfdecl',4,'p_intfdecl','/home/e/nc/n/bootstrap/nparser.py',926),
  ('intfdecl -> INTF typedeclname ASSIGN isalist typedecl_block','intfdecl',5,'p_intfdecl','/home/e/nc/n/bootstrap/nparser.py',927),
  ('intfdecl -> ( INTF typedeclname_list ) typedeclname ASSIGN typedecl_block','intfdecl',7,'p_intfdecl','/home/e/nc/n/bootstrap/nparser.py',928),
  ('intfdecl -> ( INTF typedeclname_list ) typedeclname ASSIGN isalist typedecl_block','intfdecl',8,'p_intfdecl','/home/e/nc/n/bootstrap/nparser.py',929),
  ('modname -> IDENT','modname',1,'p_modname','/home/e/nc/n/bootstrap/nparser.py',955),
  ('modname -> IDENT DOT modname','modname',3,'p_modname','/home/e/nc/n/bootstrap/nparser.py',956),
  ('import -> IMPORT modname','import',2,'p_import','/home/e/nc/n/bootstrap/nparser.py',963),
  ('import -> FROM modname IMPORT TIMES','import',4,'p_import','/home/e/nc/n/bootstrap/nparser.py',964),
  ('import -> FROM modname IMPORT idents','import',4,'p_import','/home/e/nc/n/bootstrap/nparser.py',965),
  ('toplevel -> import','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/nparser.py',976),
  ('toplevel -> typedecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/nparser.py',977),
  ('toplevel -> fundecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/nparser.py',978),
  ('toplevel -> methoddecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/nparser.py',979),
  ('toplevel -> intfdecl','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/nparser.py',980),
  ('toplevel -> static_pattern','toplevel',1,'p_toplevel','/home/e/nc/n/bootstrap/nparser.py',981),
  ('module -> empty','module',1,'p_module','/home/e/nc/n/bootstrap/nparser.py',985),
  ('module -> toplevel EOL module','module',3,'p_module','/home/e/nc/n/bootstrap/nparser.py',986),
]
