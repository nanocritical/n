fun main = i32
  let y = 'test'
  let y2 = 0:i32
  for x in y
    pass
  let z = - 0 + (1 + 2) * 3 / 2 * (2 + 2) * 2
  let z2 = - 0 + (1 + 2) * 3 / 2 * 2 + 2 * 2
  return - 0 + (1 + 2) * 3 / 2 + 2

fun other x:i32 = (bool)
  while false
    return false
  return not true and false or true

fun other2 x:i32 y:i32 = i32, (i32, i32)
  try
    return sizeof 0:u32
  catch e
    return 1

fun other3 x:i32 y:i32 = ((i32, i32), i32)
  match x
    | 0 -> say 'test0'
    | 1
      say 'test1'
    | _
      say 'default'

inline fun other4 x:i32 = i32
extern fun other5 x:i32 = i32

type test =
  x:i32
  y:i64
  z:i32

test method foo x:i32 = i32
  return 0
test method foo2 = i32
  return self.foo 1
test method foo3 = void
