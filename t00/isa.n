from n import *

fun static
	assert 0:I32 isa I32
	assert not "" isa `Numeric
	assert 0:U32 isa `Native_unsigned_integer
	assert 0:U32 isa `Native_sized_unsigned_integer

(fun t:`Any) positive x:t = Bool
	if t isa `Numeric
		return x >= 0
	else
		return false

(fun t:`Any) positive2 x:t = Bool
	if x isa `Numeric
		return x >= 0
	else
		return false

(fun t:`Any) mkdyn_any x:@t = @`Any
	return x

fun Main = I32
	static

	assert positive 0:Uint
	assert not <- positive -1:Int
	assert not <- positive "":String

	assert positive2 0:Uint
	assert not <- positive2 -1:Int
	assert not <- positive2 "":String

	let dany = mkdyn_any 13:Uint
	assert dany isa Uint
	assert not <- dany isa I32
	assert dany isa `Numeric
	assert dany isa `Native_unsigned_integer
	assert not <- dany isa `Native_sized_unsigned_integer

	assert Uint isa `Trivial_ctor
	assert Uint isa `Trivial_copy

	Prn ((Dyncast `Show) dany)
	Prn (Dyncast dany)

	return 0
