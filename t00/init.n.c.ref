#include <lib/nlang/runtime.h>
#include "lib/nlang/module.n.h.out"
struct t00_init_t;
typedef struct t00_init_t t00_init_t;
struct t00_init_t {
nlang_builtins_i32 x;
}
;
typedef const t00_init_t* _ngen_nlang_builtins_i_ref__t00_init_t;
typedef _ngen_nlang_builtins_i_ref__t00_init_t _ngen_nlang_builtins_i_nullable_ref__t00_init_t;
typedef t00_init_t* _ngen_nlang_builtins_i_mutable_ref__t00_init_t;
typedef _ngen_nlang_builtins_i_mutable_ref__t00_init_t _ngen_nlang_builtins_i_mercurial_ref__t00_init_t;
typedef _ngen_nlang_builtins_i_mutable_ref__t00_init_t _ngen_nlang_builtins_i_nullable_mutable_ref__t00_init_t;
typedef _ngen_nlang_builtins_i_mercurial_ref__t00_init_t _ngen_nlang_builtins_i_nullable_mercurial_ref__t00_init_t;

nlang_builtins_void t00_init_t_operator_copy(_ngen_nlang_builtins_i_mercurial_ref__t00_init_t self, _ngen_nlang_builtins_i_ref__t00_init_t other) {
#define THIS(x) t00_init_t##x
memcpy(self, other, sizeof(*self));
#undef THIS
}

nlang_builtins_i32 main(void){
 {
t00_init_t tt; memset(&tt, 0, sizeof(tt));
{
memset(&(tt), 0, sizeof(t00_init_t));
tt.x = (nlang_builtins_i32)1;
 }
;
;
return tt.x - (nlang_builtins_i32)1;
}
}
