from nlang import *

type enu = i_trivial_ctor
  | A
  | B

fun foo n:enu = i32
  match n
  | A -> return 0
  | B -> return 1

fun bar n:enu = i32
  match n
  | A -> return 0
  | _ -> return 1

type t =
  x	:enu

fun bor xt:@t = bool
  return xt.x == A

export fun main = i32
  let xt = { x=A }
  if not bor @xt
    return 1

  let n = enu.A
  if n != xt.x
    return 1
  let _ = foo n
  let _ = bar A
  match n
  | enu.A -> return 0
  | enu.B -> return 1
