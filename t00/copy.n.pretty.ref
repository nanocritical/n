from nlang import *
type copy = i_copyable <root>.nlang.builtins.i_trivial_ctor
  and this = t00.copy.copy
  and final = t00.copy.copy
  x:i32

fun <root>.nlang.builtins.i_trivial_ctor.new = @#final

fun <root>.nlang.builtins.i_trivial_ctor.mk = r:final

copy method <root>.nlang.builtins.i_trivial_ctor.ctor = void

copy method i_copyable.copy_ctor other:@this = void
  self!x = other.x

fun foo = _nretval:copy
  return { x=0 }

export fun main = i32
  and w = foo
  and y = { x=-1 }
  and z:copy  such
    t00.copy.copy.copy_ctor @#z @y
  and zz  such
    t00.copy.copy.copy_ctor @#zz @z
  return z.x + 1
