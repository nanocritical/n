MODULE_BODY :__internal_not_typeable__
 IMPORT :nlang
  IDENT(nlang) :nlang
  IMPORT :nlang.print
   BIN(.) :nlang.print
    IDENT(nlang) :nlang
    IDENT(print) :__internal_not_typeable__
  IMPORT :nlang.say
   BIN(.) :nlang.say
    IDENT(nlang) :nlang
    IDENT(say) :__internal_not_typeable__
 DEFFUN :t00.barrow.foo
  IDENT(foo) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  DEFARG :nlang.builtins.i32
   IDENT(x) :nlang.builtins.i32
   IDENT(i32) :nlang.builtins.i32
  IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   RETURN :nlang.builtins.i32
    IDENT(x) :nlang.builtins.i32
 DEFFUN :t00.barrow.bar
  IDENT(bar) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  DEFARG :nlang.builtins.i32
   IDENT(x) :nlang.builtins.i32
   IDENT(i32) :nlang.builtins.i32
  DEFARG :nlang.builtins.i32
   IDENT(y) :nlang.builtins.i32
   IDENT(i32) :nlang.builtins.i32
  IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   RETURN :nlang.builtins.i32
    BIN( + ) :nlang.builtins.i32
     IDENT(x) :nlang.builtins.i32
     IDENT(y) :nlang.builtins.i32
 DEFFUN :t00.barrow.main
  IDENT(main) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   LET :nlang.builtins.void
    DEFPATTERN :nlang.builtins.void
     IDENT(z) :nlang.builtins.i32
     CALL :nlang.builtins.i32
      IDENT(foo) :t00.barrow.foo
      NUMBER(0) :nlang.builtins.i32
     DEFNAME(z) :nlang.builtins.i32
   LET :nlang.builtins.void
    DEFPATTERN :nlang.builtins.void
     IDENT(x) :nlang.builtins.i32
     BIN( + ) :nlang.builtins.i32
      IDENT(z) :nlang.builtins.i32
      CALL :nlang.builtins.i32
       IDENT(foo) :t00.barrow.foo
       NUMBER(1) :nlang.builtins.i32
     DEFNAME(x) :nlang.builtins.i32
   RETURN :nlang.builtins.i32
    BIN( - ) :nlang.builtins.i32
     CALL :nlang.builtins.i32
      IDENT(foo) :t00.barrow.foo
      CALL :nlang.builtins.i32
       IDENT(bar) :t00.barrow.bar
       NUMBER(0) :nlang.builtins.i32
       NUMBER(1) :nlang.builtins.i32
     IDENT(x) :nlang.builtins.i32
