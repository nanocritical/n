from nlang import *
fun foo = _nretval:i32 
  _Ngensym1 = { }
  block
    _Ngensym0 = 0
    _Ngensym1 = _Ngensym0
  return _Ngensym1

fun deref p:@u32 = _nretval:u32 
  _Ngensym2 = .p
  return _Ngensym2

export fun main = _nretval:i32 
  block
    if block 
  _Ngensym3 = true
  _Ngensym3;;
      noop
    else
      noop
  block
    _Ngensym4 = true
    noop
    assert _Ngensym4
  noop
  x = block 
  _Ngensym6 = 1
  _Ngensym6;;
  _Ngensym7 = 1
  _Ngensym8 = x == _Ngensym7
  assert _Ngensym8
  _Ngensym9 = 0
  _Ngensym38 = foo
  _Ngensyma = _Ngensym38 == _Ngensym9
  assert _Ngensyma
  noop
  _Ngensymc = { }
  block
    _Ngensymb = 0
    _Ngensymc = _Ngensymb
  _Ngensymd = 1
  x1 = _Ngensymc + _Ngensymd
  _Ngensyme = x1 == x
  assert _Ngensyme
  noop
  _Ngensym10 = { }
  block
    _Ngensymf = 1
    _Ngensym10 = _Ngensymf
  _Ngensym12 = { }
  block
    _Ngensym11 = 2
    _Ngensym12 = _Ngensym11
  x2 = _Ngensym10 + _Ngensym12
  _Ngensym13 = 3
  _Ngensym14 = x2 == _Ngensym13
  assert _Ngensym14
  noop
  y1 = if block 
  _Ngensym15 = 0
  _Ngensym16 = x > _Ngensym15
  _Ngensym16;;
  _Ngensym17 = 'test'
  _Ngensym17
else
  _Ngensym18 = 'error'
  _Ngensym18
  z1 = if block 
  _Ngensym19 = 'test'
  _Ngensym41 = @y1
  _Ngensym42 = @_Ngensym19
  _Ngensym1a = nlang.chars.static_string.operator_eq _Ngensym41 _Ngensym42
  _Ngensym1a;;
  _Ngensym1b = 0
  _Ngensym1b
else
  _Ngensym1c = 1
  _Ngensym1c
  _Ngensym1d = 0
  _Ngensym1e = z1 == _Ngensym1d
  assert _Ngensym1e
  noop
  y2 = if block 
  _Ngensym1f = 0
  _Ngensym20 = x > _Ngensym1f
  _Ngensym20;;
  _Ngensym21 = 'test'
  _Ngensym21
else
  _Ngensym22 = 'error'
  _Ngensym22
  z2 = block 
  block
    noop
    tmp = 0
    block
      block
        noop
        _Ngensym24 = 0
        _Ngensym25 = 100
        _Ngensym26 = range _Ngensym24 _Ngensym25
        _Ngensym3c = @_Ngensym26
        _Ngensym27 = nlang.containers.index_range.iter _Ngensym3c
        _Ngensym23 = @!_Ngensym27
        block
          while block 
  _Ngensym28 = nlang.containers.index_iterator.has_next _Ngensym23
  _Ngensym28;;
            -- phi 1

            -- phi 1

            noop
            i = nlang.containers.index_iterator.next _Ngensym23
            block
              _Ngensym3d = @i
              _Ngensym29 = nlang.builtins.size.trim_u32 _Ngensym3d
              _Ngensym3e = @_Ngensym29
              _Ngensym2a = nlang.builtins.u32.reinterpret_signed _Ngensym3e
              tmp += _Ngensym2a
          -- phi 2

          -- phi 2

  tmp;;
  _Ngensym2b = 'test'
  _Ngensym43 = @y2
  _Ngensym44 = @_Ngensym2b
  _Ngensym2c = nlang.chars.static_string.operator_eq _Ngensym43 _Ngensym44
  assert _Ngensym2c
  _Ngensym2d = 50
  _Ngensym2e = 99
  _Ngensym2f = _Ngensym2d * _Ngensym2e
  _Ngensym30 = z2 == _Ngensym2f
  assert _Ngensym30
  _Ngensym32 = { }
  block
    _Ngensym31 = 1
    _Ngensym32 = _Ngensym31
  _Ngensym40 = @_Ngensym32
  _Ngensym33 = deref _Ngensym40
  _Ngensym34 = 1
  _Ngensym35 = _Ngensym33 == _Ngensym34
  assert _Ngensym35
  _Ngensym36 = 0
  return _Ngensym36
