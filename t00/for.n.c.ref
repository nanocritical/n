#include <lib/nlang/runtime.h>
#define NLANG_DECLARE_TYPES
# include "lib/nlang/module.n.h.out"
#undef NLANG_DECLARE_TYPES

#define NLANG_DECLARE_TYPES
# include "t00/for.n.h.out"
#undef NLANG_DECLARE_TYPES
#ifndef HAS0__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
#define HAS0__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
struct nlang_containers_index_range;
typedef const struct nlang_containers_index_range* _Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_;
#endif // HAS0__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
#ifndef HAS0__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
#define HAS0__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
struct nlang_containers_index_iterator;
typedef struct nlang_containers_index_iterator* _Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_;
#endif // HAS0__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
#define NLANG_DEFINE_TYPES
# include "lib/nlang/module.n.h.out"
#undef NLANG_DEFINE_TYPES

#define NLANG_DEFINE_TYPES
# include "t00/for.n.h.out"
#undef NLANG_DEFINE_TYPES
#define NLANG_DECLARE_FUNCTIONS
# include "lib/nlang/module.n.h.out"
#undef NLANG_DECLARE_FUNCTIONS

#define NLANG_DECLARE_FUNCTIONS
# include "t00/for.n.h.out"
#undef NLANG_DECLARE_FUNCTIONS
#ifndef HAS2__Ngen_nlang_builtins_unused__nlang_builtins_size_genN_
#define HAS2__Ngen_nlang_builtins_unused__nlang_builtins_size_genN_
static inline nlang_builtins_void _Ngen_nlang_builtins_unused__nlang_builtins_size_genN_(nlang_builtins_size x);
#endif // HAS2__Ngen_nlang_builtins_unused__nlang_builtins_size_genN_
#ifndef HAS2__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
#define HAS2__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
struct nlang_containers_index_range;
typedef const struct nlang_containers_index_range* _Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_;
#endif // HAS2__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
#ifndef HAS2__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
#define HAS2__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
struct nlang_containers_index_iterator;
typedef struct nlang_containers_index_iterator* _Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_;
#endif // HAS2__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
#define NLANG_DEFINE_FUNCTIONS
# include "lib/nlang/module.n.h.out"
#undef NLANG_DEFINE_FUNCTIONS

#define NLANG_DEFINE_FUNCTIONS
# include "t00/for.n.h.out"
#undef NLANG_DEFINE_FUNCTIONS
#ifndef HAS3__Ngen_nlang_builtins_unused__nlang_builtins_size_genN_
#define HAS3__Ngen_nlang_builtins_unused__nlang_builtins_size_genN_
static inline nlang_builtins_void _Ngen_nlang_builtins_unused__nlang_builtins_size_genN_(nlang_builtins_size x) {
 {
;;
}
}
#endif // HAS3__Ngen_nlang_builtins_unused__nlang_builtins_size_genN_
#ifndef HAS3__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
#define HAS3__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
struct nlang_containers_index_range;
typedef const struct nlang_containers_index_range* _Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_;
#endif // HAS3__Ngen_nlang_builtins_ref__nlang_containers_index_range_genN_
#ifndef HAS3__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
#define HAS3__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
struct nlang_containers_index_iterator;
typedef struct nlang_containers_index_iterator* _Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_;
#endif // HAS3__Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_
nlang_builtins_i32 _Nmain(void) {
 {
nlang_builtins_i32 j = (nlang_builtins_i32)0;
nlang_containers_index_range _Ngensym1 = { 0 };
nlang_containers_index_iterator _Ngensym2 = { 0 };
nlang_containers_index_iterator _Ngensym3 = { 0 };
_Ngen_nlang_builtins_mutable_ref__nlang_containers_index_iterator_genN_ _Ngensym0 = ({  {
nlang_containers_index_range_iter(({ _Ngensym1 = nlang_containers_range((nlang_builtins_size)0, (nlang_builtins_size)10);
((&_Ngensym1));
; }), &(_Ngensym2));
_Ngensym3 = _Ngensym2;
};
((&_Ngensym3));
; });
while (nlang_containers_index_iterator_has_next(_Ngensym0)) {
nlang_builtins_size i = nlang_containers_index_iterator_next(_Ngensym0);
_Ngen_nlang_builtins_unused__nlang_builtins_size_genN_(i);
j += (nlang_builtins_i32)1;
;
};
;
;
;
return (j - (nlang_builtins_i32)10);
}
}
void t00_for_Nrunexamples(void) __attribute__((section(".text.nlang.examples")));
void t00_for_Nrunexamples(void) {
}
