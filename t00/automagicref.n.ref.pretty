from nlang import *
from nlang.vectors import *
type A = `trivial_ctor <root>.nlang.builtins.`trivial_ctor
  final = t00.automagicref.A
  this = t00.automagicref.A
  dummy:i32
  inline A method explicit p:@t = _nretval:t 
  _Ngensym0 = .p
  return _Ngensym0

  A method <root>.nlang.builtins.`trivial_ctor.ctor = _nretval:void 

  fun <root>.nlang.builtins.`trivial_ctor.mk = r:final 

  fun <root>.nlang.builtins.`trivial_ctor.new = _nretval:@#final 


type B = `trivial_ctor <root>.nlang.builtins.`trivial_ctor
  final = t00.automagicref.B
  this = t00.automagicref.B
  dummy:i32
  inline B method implicit p:r t = _nretval:t 
  _Ngensym1 = .p
  return _Ngensym1

  B method <root>.nlang.builtins.`trivial_ctor.ctor = _nretval:void 

  fun <root>.nlang.builtins.`trivial_ctor.mk = r:final 

  fun <root>.nlang.builtins.`trivial_ctor.new = _nretval:@#final 


fun null_arg p:?@?@i32 = _nretval:void 
  _Ngensym2 = null
  _Ngensym3 = p === _Ngensym2
  noop
  assert _Ngensym3

fun null_arg_value p:?@?@i32 = _nretval:void 
  _Ngensymb = { }
  if block 
  _Ngensym5 = null
  _Ngensym6 = p !== _Ngensym5
  _Ngensym6;;
    -- phi 1

    -- phi 1

    _Ngensym7 = .p
    _Ngensym8 = null
    _Ngensym9 = _Ngensym7 === _Ngensym8
    _Ngensymb = _Ngensym9
  else
    -- phi 1

    _Ngensyma = false
    _Ngensymb = _Ngensyma
  -- phi 3

  -- phi 2

  noop
  assert _Ngensymb

fun bar p:?@?@i32 = _nretval:void 
  noop

export fun main = _nretval:i32 
  block
    noop
    a = 'test'
    b = 'test'
  noop
  pa = @a
  noop
  pb = @b
  noop
  _Ngensym67 = @a
  _Ngensym68 = @b
  x = nlang.chars.static_string.operator_eq _Ngensym67 _Ngensym68
  assert x
  _Ngensym48 = .pa
  _Ngensym69 = @_Ngensym48
  _Ngensym6a = @b
  _Ngensymd = nlang.chars.static_string.operator_eq _Ngensym69 _Ngensym6a
  assert _Ngensymd
  _Ngensym49 = .pb
  _Ngensym6b = @a
  _Ngensym6c = @_Ngensym49
  _Ngensyme = nlang.chars.static_string.operator_eq _Ngensym6b _Ngensym6c
  assert _Ngensyme
  _Ngensym4a = .pa
  _Ngensym4b = .pb
  _Ngensym6d = @_Ngensym4a
  _Ngensym6e = @_Ngensym4b
  _Ngensymf = nlang.chars.static_string.operator_eq _Ngensym6d _Ngensym6e
  assert _Ngensymf
  block
    block
      noop
      _Ngensym10 = 1
      p1 = @_Ngensym10
    noop
    a = { }
    _Ngensym11 = null
    null_arg _Ngensym11
    _Ngensym12 = null
    _Ngensym13 = @_Ngensym12
    null_arg_value _Ngensym13
    noop
    x = { }
    _Ngensym14 = @x
    _Ngensym4e = @_Ngensym14
    bar _Ngensym4e
    _Ngensym15 = 1
    _Ngensym16 = 1
    _Ngensym4f = @a
    _Ngensym50 = @_Ngensym16
    _Ngensym17 = t00.automagicref.A.explicit _Ngensym4f _Ngensym50
    _Ngensym18 = _Ngensym15 == _Ngensym17
    assert _Ngensym18
    _Ngensym19 = 1
    _Ngensym52 = @a
    _Ngensym53 = @_Ngensym19
    _Ngensym1a = t00.automagicref.A.explicit _Ngensym52 _Ngensym53
    _Ngensym1b = @_Ngensym1a
    _Ngensym1c = p1 !== _Ngensym1b
    assert _Ngensym1c
    noop
    b = { }
    _Ngensym1d = 1
    _Ngensym1e = 1
    _Ngensym1f = @_Ngensym1e
    _Ngensym56 = @b
    _Ngensym20 = t00.automagicref.B.implicit _Ngensym56 _Ngensym1f
    _Ngensym21 = _Ngensym1d == _Ngensym20
    assert _Ngensym21
    _Ngensym22 = 1
    _Ngensym23 = @_Ngensym22
    _Ngensym24 = 1
    _Ngensym25 = @_Ngensym24
    _Ngensym26 = @_Ngensym25
    _Ngensym58 = @b
    _Ngensym27 = t00.automagicref.B.implicit _Ngensym58 _Ngensym26
    _Ngensym28 = _Ngensym23 !== _Ngensym27
    assert _Ngensym28
    _Ngensym29 = 1
    _Ngensym2a = 1
    _Ngensym2b = @_Ngensym2a
    _Ngensym5b = @b
    _Ngensym2c = (B.implicit i32 ref) _Ngensym5b _Ngensym2b
    _Ngensym2d = _Ngensym29 != _Ngensym2c
    assert _Ngensym2d
    _Ngensym2e = 1
    _Ngensym2f = @_Ngensym2e
    noop
    _Ngensym31 = 1
    _Ngensym32 = @_Ngensym31
    _Ngensym33 = @_Ngensym32
    _Ngensym5d = @b
    _Ngensym34 = (B.implicit @i32 ref) _Ngensym5d _Ngensym33
    _Ngensym35 = _Ngensym2f !== _Ngensym34
    noop
    assert _Ngensym35
  noop
  _Ngensym37 = 1
  n = @_Ngensym37
  noop
  _Ngensym38 = 2
  m = @_Ngensym38
  noop
  _Ngensym39 = 3
  p3 = @_Ngensym39
  _Ngensym5e = .n
  _Ngensym5f = .m
  _Ngensym3a = _Ngensym5e + _Ngensym5f
  _Ngensym3b = 3
  _Ngensym3c = _Ngensym3a == _Ngensym3b
  assert _Ngensym3c
  _Ngensym60 = .n
  _Ngensym61 = .m
  _Ngensym3d = _Ngensym60 + _Ngensym61
  _Ngensym62 = .p3
  _Ngensym3e = _Ngensym3d == _Ngensym62
  assert _Ngensym3e
  _Ngensym3f = 1
  _Ngensym40 = 2
  _Ngensym41 = _Ngensym3f + _Ngensym40
  _Ngensym63 = .p3
  _Ngensym42 = _Ngensym41 == _Ngensym63
  assert _Ngensym42
  _Ngensym43 = 2
  _Ngensym64 = .n
  _Ngensym44 = _Ngensym64 + _Ngensym43
  _Ngensym65 = .p3
  _Ngensym45 = _Ngensym44 == _Ngensym65
  assert _Ngensym45
  _Ngensym46 = 0
  return _Ngensym46
