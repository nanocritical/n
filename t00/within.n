from n import *
from n.strings import *

globalenv e2:@!`env2

intf `env2 =
	isa (`Environment @this)
	met say2 s:@string = Void

struct myenv2 =
	isa `env2
	dummy	:U32

myenv2 met say2 s:@string = Void
	Say 'saying2:' s

intf `env1 =
	isa (`Environment @this)
	met Say s:@string = Void

struct myenv1 =
	isa `env1

globalenv e1:@!`env1
within e1

myenv1 met Say s:@string = Void
	Say 'saying:' s

fun do = I32 within e2
	let mye2 = {}:myenv2
	such
		mye2!install @!e2
	e2.say2 'module'
	e1.Say 'function'
	return 0

fun Main = I32
	let mye1 = {}:myenv1
	such
		mye1!install @!e1
	return do
