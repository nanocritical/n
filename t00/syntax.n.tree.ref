MODULE_BODY :__internal_not_typeable__
 IMPORT :nlang
  IDENT(nlang) :nlang
 DEFFUN :t00.syntax.main
  IDENT(main) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   LET :nlang.builtins.void
    DEFPATTERN :nlang.builtins.i32
     IDENT(x) :nlang.builtins.i32
     TYPECONSTRAINT :nlang.builtins.i32
      NUMBER(1) :nlang.builtins.i32
      IDENT(i32) :nlang.builtins.i32
     DEFNAME(x) :nlang.builtins.i32
   LET :nlang.builtins.void
    DEFPATTERN :nlang.builtins.i32
     IDENT(y) :nlang.builtins.i32
     BIN( + ) :nlang.builtins.i32
      NUMBER(2) :nlang.builtins.i32
      IDENT(x) :nlang.builtins.i32
     DEFNAME(y) :nlang.builtins.i32
   RETURN :nlang.builtins.i32
    BIN( + ) :nlang.builtins.i32
     NUMBER(0) :nlang.builtins.i32
     IDENT(y) :nlang.builtins.i32
 DEFFUN :t00.syntax.main2
  IDENT(main2) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   RETURN :nlang.builtins.i32
    NUMBER(0) :nlang.builtins.i32
 DEFFUN :t00.syntax.foo
  IDENT(foo) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  DEFARG :nlang.strings.string
   IDENT(__gensym0) :nlang.strings.string
   IDENT(string) :nlang.strings.string
  BLOCK :nlang.builtins.void
   RETURN :nlang.strings.string
    STRING('test') :nlang.strings.string
 DEFFUN :t00.syntax.other4
  IDENT(other4) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  DEFARG :nlang.builtins.i32
   IDENT(x) :nlang.builtins.i32
   IDENT(i32) :nlang.builtins.i32
  IDENT(i32) :nlang.builtins.i32
 DEFFUN :t00.syntax.other5
  IDENT(other5) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  DEFARG :nlang.builtins.i32
   IDENT(x) :nlang.builtins.i32
   IDENT(i32) :nlang.builtins.i32
  IDENT(i32) :nlang.builtins.i32
 DEFINTF :t00.syntax.ia
  IDENT(ia) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  ISALIST :nlang.builtins.void
  LET :nlang.builtins.void
   DEFPATTERN :t00.syntax.ia
    IDENT(this) :t00.syntax.ia
    IDENT(ia) :t00.syntax.ia
    DEFNAME(this) :t00.syntax.ia
 DEFTYPE :t00.syntax.test
  IDENT(test) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  ISALIST :nlang.builtins.void
   ISA :t00.syntax.ia
    IDENT(ia) :t00.syntax.ia
  LET :nlang.builtins.void
   DEFPATTERN :t00.syntax.test
    IDENT(this) :t00.syntax.test
    IDENT(test) :t00.syntax.test
    DEFNAME(this) :t00.syntax.test
  DEFFIELD :nlang.builtins.i32
   IDENT(t) :__internal_not_typeable__
   IDENT(i32) :nlang.builtins.i32
 DEFMETHOD :t00.syntax.test.foo
  IDENT(foo) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  DEFARG :(nlang.builtins.Ref t00.syntax.test)
   IDENT(self) :(nlang.builtins.Ref t00.syntax.test)
   UN(@) :(nlang.builtins.Ref t00.syntax.test)
    IDENT(this) :t00.syntax.test
  DEFARG :nlang.builtins.i32
   IDENT(x) :nlang.builtins.i32
   IDENT(i32) :nlang.builtins.i32
  IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   LET :nlang.builtins.void
    DEFPATTERN :nlang.builtins.i32
     IDENT(y) :nlang.builtins.i32
     IDENT(x) :nlang.builtins.i32
     DEFNAME(y) :nlang.builtins.i32
   RETURN :nlang.builtins.i32
    IDENT(y) :nlang.builtins.i32
 DEFFUN :t00.syntax.foobar
  IDENT(foobar) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  DEFARG :nlang.builtins.i32
   IDENT(x) :nlang.builtins.i32
   IDENT(i32) :nlang.builtins.i32
  IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   PRE :nlang.builtins.void
    BLOCK :nlang.builtins.void
     BIN( != ) :nlang.builtins.bool
      IDENT(x) :nlang.builtins.i32
      NUMBER(0) :nlang.builtins.i32
   POST :nlang.builtins.void
    BLOCK :nlang.builtins.void
     BIN( != ) :nlang.builtins.bool
      IDENT(x) :nlang.builtins.i32
      NUMBER(0) :nlang.builtins.i32
   RETURN :nlang.builtins.i32
    NUMBER(0) :nlang.builtins.i32
 DEFFUN :t00.syntax.foobar2
  IDENT(foobar2) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  IDENT(void) :nlang.builtins.void
  BLOCK :nlang.builtins.void
   RETURN :nlang.builtins.void
 DEFTYPE :t00.syntax.enu
  IDENT(enu) :__internal_not_typeable__
  GENARGS :nlang.builtins.void
  ISALIST :nlang.builtins.void
  LET :nlang.builtins.void
   DEFPATTERN :t00.syntax.enu
    IDENT(this) :t00.syntax.enu
    IDENT(enu) :t00.syntax.enu
    DEFNAME(this) :t00.syntax.enu
  DEFCHOICE :t00.syntax.enu
   IDENT(V1) :__internal_not_typeable__
   NUMBER(0) :nlang.builtins.u32
   IDENT(void) :nlang.builtins.void
   DEFFUN :t00.syntax.enu.V1.mk
    BIN(.) :__internal_not_typeable__
     BIN(.) :__internal_not_typeable__
      BIN(.) :__internal_not_typeable__
       BIN(.) :__internal_not_typeable__
        DIRECTDEF :__internal_not_typeable__
        IDENT(nlang) :__internal_not_typeable__
       IDENT(builtins) :__internal_not_typeable__
      IDENT(DefaultCtor) :__internal_not_typeable__
     IDENT(mk) :__internal_not_typeable__
    GENARGS :nlang.builtins.void
    DEFARG :t00.syntax.enu
     IDENT(__gensym1) :t00.syntax.enu
     IDENT(this) :t00.syntax.enu
   DEFFUN :t00.syntax.enu.V1.new
    BIN(.) :__internal_not_typeable__
     BIN(.) :__internal_not_typeable__
      BIN(.) :__internal_not_typeable__
       BIN(.) :__internal_not_typeable__
        DIRECTDEF :__internal_not_typeable__
        IDENT(nlang) :__internal_not_typeable__
       IDENT(builtins) :__internal_not_typeable__
      IDENT(DefaultCtor) :__internal_not_typeable__
     IDENT(new) :__internal_not_typeable__
    GENARGS :nlang.builtins.void
    UN(@#) :(nlang.builtins.MercurialRef t00.syntax.enu)
     IDENT(this) :t00.syntax.enu
  DEFCHOICE :t00.syntax.enu
   IDENT(V2) :__internal_not_typeable__
   BIN( + ) :nlang.builtins.u32
    NUMBER(0) :nlang.builtins.u32
    NUMBER(1) :nlang.builtins.u32
   IDENT(void) :nlang.builtins.void
   DEFFUN :t00.syntax.enu.V2.mk
    BIN(.) :__internal_not_typeable__
     BIN(.) :__internal_not_typeable__
      BIN(.) :__internal_not_typeable__
       BIN(.) :__internal_not_typeable__
        DIRECTDEF :__internal_not_typeable__
        IDENT(nlang) :__internal_not_typeable__
       IDENT(builtins) :__internal_not_typeable__
      IDENT(DefaultCtor) :__internal_not_typeable__
     IDENT(mk) :__internal_not_typeable__
    GENARGS :nlang.builtins.void
    DEFARG :t00.syntax.enu
     IDENT(__gensym2) :t00.syntax.enu
     IDENT(this) :t00.syntax.enu
   DEFFUN :t00.syntax.enu.V2.new
    BIN(.) :__internal_not_typeable__
     BIN(.) :__internal_not_typeable__
      BIN(.) :__internal_not_typeable__
       BIN(.) :__internal_not_typeable__
        DIRECTDEF :__internal_not_typeable__
        IDENT(nlang) :__internal_not_typeable__
       IDENT(builtins) :__internal_not_typeable__
      IDENT(DefaultCtor) :__internal_not_typeable__
     IDENT(new) :__internal_not_typeable__
    GENARGS :nlang.builtins.void
    UN(@#) :(nlang.builtins.MercurialRef t00.syntax.enu)
     IDENT(this) :t00.syntax.enu
  DEFCHOICE :t00.syntax.enu
   IDENT(V3) :__internal_not_typeable__
   BIN( + ) :nlang.builtins.u32
    BIN( + ) :nlang.builtins.u32
     NUMBER(0) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(1) :nlang.builtins.u32
   IDENT(void) :nlang.builtins.void
   DEFFUN :t00.syntax.enu.V3.mk
    BIN(.) :__internal_not_typeable__
     BIN(.) :__internal_not_typeable__
      BIN(.) :__internal_not_typeable__
       BIN(.) :__internal_not_typeable__
        DIRECTDEF :__internal_not_typeable__
        IDENT(nlang) :__internal_not_typeable__
       IDENT(builtins) :__internal_not_typeable__
      IDENT(DefaultCtor) :__internal_not_typeable__
     IDENT(mk) :__internal_not_typeable__
    GENARGS :nlang.builtins.void
    DEFARG :t00.syntax.enu
     IDENT(__gensym3) :t00.syntax.enu
     IDENT(this) :t00.syntax.enu
   DEFFUN :t00.syntax.enu.V3.new
    BIN(.) :__internal_not_typeable__
     BIN(.) :__internal_not_typeable__
      BIN(.) :__internal_not_typeable__
       BIN(.) :__internal_not_typeable__
        DIRECTDEF :__internal_not_typeable__
        IDENT(nlang) :__internal_not_typeable__
       IDENT(builtins) :__internal_not_typeable__
      IDENT(DefaultCtor) :__internal_not_typeable__
     IDENT(new) :__internal_not_typeable__
    GENARGS :nlang.builtins.void
    UN(@#) :(nlang.builtins.MercurialRef t00.syntax.enu)
     IDENT(this) :t00.syntax.enu
