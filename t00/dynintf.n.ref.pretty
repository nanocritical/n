from nlang import *

type d = `d <root>.nlang.builtins.`trivial_ctor
  final = t00.dynintf.d
  this = t00.dynintf.d
  x:i32
  fun answer = _nretval:i32 
  _Ngensym0 = 42
  return _Ngensym0

  d method get = _nretval:i32 
  noop
  return self.x

  d method <root>.nlang.builtins.`trivial_ctor.ctor = _nretval:void 

  fun <root>.nlang.builtins.`trivial_ctor.mk = r:final 

  fun <root>.nlang.builtins.`trivial_ctor.new = _nretval:@#final 


type dc = `d <root>.nlang.builtins.`trivial_ctor
  final = t00.dynintf.dc
  this = t00.dynintf.dc
  dummy:i32
  fun answer = _nretval:i32 
  _Ngensym2 = 42
  return _Ngensym2

  dc method get = _nretval:i32 
  _Ngensym3 = 42
  return _Ngensym3

  dc method <root>.nlang.builtins.`trivial_ctor.ctor = _nretval:void 

  fun <root>.nlang.builtins.`trivial_ctor.mk = r:final 

  fun <root>.nlang.builtins.`trivial_ctor.new = _nretval:@#final 


fun foo v:@`d = _nretval:i32 
  _Ngensym4 = t00.dynintf.`d.get v
  return _Ngensym4

example block 
  _Ngensym9 = { }
  block
    block
      noop
      _Ngensym5 = 42
      x = { x=_Ngensym5 }
    _Ngensym6 = 42
    _Ngensym19 = @x
    _Ngensym1e = _Ngensym19
    _Ngensym7 = foo _Ngensym1e
    _Ngensym8 = _Ngensym6 == _Ngensym7
    _Ngensym9 = _Ngensym8
  noop
  __example__ _Ngensym9;;
fun rfoo pv:@`d = _nretval:i32 
  _Ngensymb = pv.answer
  return _Ngensymb

fun bar pv:@d = _nretval:i32 
  _Ngensym1f = pv
  _Ngensymc = foo _Ngensym1f
  return _Ngensymc

export fun main = _nretval:i32 
  block
    noop
    _Ngensymd = 42
    xd = { x=_Ngensymd }
  noop
  xdc = { }
  if block 
  _Ngensym1c = @xd
  _Ngensym20 = _Ngensym1c
  _Ngensyme = foo _Ngensym20
  _Ngensym1d = @xdc
  _Ngensym21 = _Ngensym1d
  _Ngensymf = foo _Ngensym21
  _Ngensym10 = _Ngensyme != _Ngensymf
  _Ngensym10;;
    _Ngensym11 = 1
    return _Ngensym11
  else
    noop
  noop
  pxd = @xd
  if block 
  _Ngensym12 = bar pxd
  _Ngensym22 = pxd
  _Ngensym13 = rfoo _Ngensym22
  _Ngensym14 = _Ngensym12 != _Ngensym13
  _Ngensym14;;
    _Ngensym15 = 1
    return _Ngensym15
  else
    noop
  _Ngensym16 = 0
  return _Ngensym16
