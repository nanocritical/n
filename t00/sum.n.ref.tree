MODULE_BODY :nlang.builtins.__internal_not_typeable__
 IMPORT :nlang.builtins.__internal_not_typeable__
  IDENT(nlang)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__literal_null__)
  IMPORT :<import>
   IDENT(nlang)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(memory)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__literal_integer__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__literal_floating__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__internal_not_typeable__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__call_function_slot__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__mutable__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__mercurial__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`any)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`prevent_dyn)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`copyable)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`copyable_but_owned)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`trivial_copy)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`trivial_copy_but_owned)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`return_by_copy)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`default_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`default_dtor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`error_dtor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`trivial_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`trivial_dtor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`matchable)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`has_equality)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`trivial_equality)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`has_compare)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`ordered)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`trivial_order)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`ordered_by_compare)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`arithmetic)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`bitwise)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`sum_copy)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`sum_equality)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`sum_order)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(void)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`__ref_compatible)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`any_any_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`any_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`any_mutable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`any_nullable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`any_nullable_mutable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(mutable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(mercurial_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(nullable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(nullable_mutable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(nullable_mercurial_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`any_tuple)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_2)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_3)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_4)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_5)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_6)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_7)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_8)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_9)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_10)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_11)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_12)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_13)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_14)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_15)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_16)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`numeric)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`signed_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`unsigned_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`native_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`native_signed_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`native_unsigned_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`native_anysign_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`generalized_boolean)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`bool_compatible)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`native_boolean)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`floating)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`native_floating)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`enum)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`union)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(bool)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i8)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i16)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i32)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i64)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(u8)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(u16)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(u32)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(u64)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(ssize)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(size)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(float)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(double)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`auto_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`trivial_array_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`array_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(static_array)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(abort)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(assert)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(unreached)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__pre__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__post__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__invariant__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__example__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(likely)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(unlikely)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(unused)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(optional)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(optional_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(min)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(max)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`error)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(error)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(drop)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(fatal)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(valist)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(vararg)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`any_environment)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(`environment)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(`locus)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(`fwd_locus)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(`bidir_locus)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(`iterator)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(index_range)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(index_iterator)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(range)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(memory)
    IDENT(`allocator)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(memory)
    IDENT(slice)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(char)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(`static_string_compatible)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(`const_string)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(`string)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(`string_buffer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(static_string)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(`show)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(vpr)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(pr)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(vsay)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(say)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(just_const)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(just_mutable)
 DEFTYPE :t00.sum.en
  IDENT(en) :nlang.builtins.__internal_not_typeable__
  GENARGS :nlang.builtins.__internal_not_typeable__
  ISALIST :nlang.builtins.__internal_not_typeable__
   ISA :nlang.builtins.`trivial_copy
    BIN(.) :nlang.builtins.`trivial_copy
     BIN(.) :nlang.builtins
      BIN(.) :nlang
       DIRECTDEF :<root>
       IDENT(nlang) :nlang.builtins.__internal_not_typeable__
      IDENT(builtins) :nlang.builtins.__internal_not_typeable__
     IDENT(`trivial_copy) :nlang.builtins.__internal_not_typeable__
   ISA :nlang.builtins.`trivial_dtor
    BIN(.) :nlang.builtins.`trivial_dtor
     BIN(.) :nlang.builtins
      BIN(.) :nlang
       DIRECTDEF :<root>
       IDENT(nlang) :nlang.builtins.__internal_not_typeable__
      IDENT(builtins) :nlang.builtins.__internal_not_typeable__
     IDENT(`trivial_dtor) :nlang.builtins.__internal_not_typeable__
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(tag_type) :nlang.builtins.u32
    DIRECTDEF :nlang.builtins.u32
    DEFNAME(tag_type) :nlang.builtins.u32
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(final) :t00.sum.en
    DIRECTDEF :t00.sum.en
    DEFNAME(final) :t00.sum.en
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(this) :t00.sum.en
    DIRECTDEF :t00.sum.en
    DEFNAME(this) :t00.sum.en
  DEFCHOICE :t00.sum.en
   IDENT(A) :nlang.builtins.__internal_not_typeable__
   NUMBER(0) :nlang.builtins.u32
   NUMBER(0) :nlang.builtins.u32
  DEFCHOICE :t00.sum.en
   IDENT(B) :nlang.builtins.__internal_not_typeable__
   TYPECONSTRAINT :nlang.builtins.u32
    NUMBER(3) :nlang.builtins.u32
    IDENT(u32) :nlang.builtins.u32
   NUMBER(0) :nlang.builtins.u32
  DEFCHOICE :t00.sum.en
   IDENT(C) :nlang.builtins.__internal_not_typeable__
   BIN( + ) :nlang.builtins.u32
    TYPECONSTRAINT :nlang.builtins.u32
     NUMBER(3) :nlang.builtins.u32
     IDENT(u32) :nlang.builtins.u32
    NUMBER(1) :nlang.builtins.u32
   NUMBER(0) :nlang.builtins.u32
  DEFMETHOD :t00.sum.en.copy_ctor
   BIN(.) :nlang.builtins.__internal_not_typeable__
    BIN(.) :nlang.builtins.__internal_not_typeable__
     BIN(.) :nlang.builtins.__internal_not_typeable__
      BIN(.) :nlang.builtins.__internal_not_typeable__
       DIRECTDEF :nlang.builtins.__internal_not_typeable__
       IDENT(nlang) :nlang.builtins.__internal_not_typeable__
      IDENT(builtins) :nlang.builtins.__internal_not_typeable__
     IDENT(`copyable) :nlang.builtins.__internal_not_typeable__
    IDENT(copy_ctor) :nlang.builtins.__internal_not_typeable__
   GENARGS :nlang.builtins.__internal_not_typeable__
   FUNARGS :nlang.builtins.__internal_not_typeable__
    DEFARG :(nlang.builtins.mercurial_ref t00.sum.en)
     IDENT(self) :nlang.builtins.__internal_not_typeable__
     UN(@#) :(nlang.builtins.mercurial_ref t00.sum.en)
      IDENT(final) :t00.sum.en
    DEFARG :(nlang.builtins.ref t00.sum.en)
     IDENT(other) :nlang.builtins.__internal_not_typeable__
     UN(@) :(nlang.builtins.ref t00.sum.en)
      IDENT(final) :t00.sum.en
    IDENT(void) :nlang.builtins.void
   WITHIN :nlang.builtins.void
 DEFTYPE :t00.sum.hen
  IDENT(hen) :nlang.builtins.__internal_not_typeable__
  GENARGS :nlang.builtins.__internal_not_typeable__
  ISALIST :nlang.builtins.__internal_not_typeable__
   ISA :nlang.builtins.`trivial_copy
    BIN(.) :nlang.builtins.`trivial_copy
     BIN(.) :nlang.builtins
      BIN(.) :nlang
       DIRECTDEF :<root>
       IDENT(nlang) :nlang.builtins.__internal_not_typeable__
      IDENT(builtins) :nlang.builtins.__internal_not_typeable__
     IDENT(`trivial_copy) :nlang.builtins.__internal_not_typeable__
   ISA :nlang.builtins.`trivial_dtor
    BIN(.) :nlang.builtins.`trivial_dtor
     BIN(.) :nlang.builtins
      BIN(.) :nlang
       DIRECTDEF :<root>
       IDENT(nlang) :nlang.builtins.__internal_not_typeable__
      IDENT(builtins) :nlang.builtins.__internal_not_typeable__
     IDENT(`trivial_dtor) :nlang.builtins.__internal_not_typeable__
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(tag_type) :nlang.builtins.u32
    DIRECTDEF :nlang.builtins.u32
    DEFNAME(tag_type) :nlang.builtins.u32
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(final) :t00.sum.hen
    DIRECTDEF :t00.sum.hen
    DEFNAME(final) :t00.sum.hen
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(this) :t00.sum.hen
    DIRECTDEF :t00.sum.hen
    DEFNAME(this) :t00.sum.hen
  DEFCHOICE :t00.sum.hen
   IDENT(A) :nlang.builtins.__internal_not_typeable__
   NUMBER(0) :nlang.builtins.u32
   NUMBER(0) :nlang.builtins.u32
  DEFCHOICE :t00.sum.hen
   IDENT(B) :nlang.builtins.__internal_not_typeable__
   BIN( + ) :nlang.builtins.u32
    NUMBER(0) :nlang.builtins.u32
    NUMBER(1) :nlang.builtins.u32
   BIN( + ) :nlang.builtins.u32
    BIN( + ) :nlang.builtins.u32
     BIN( + ) :nlang.builtins.u32
      NUMBER(0) :nlang.builtins.u32
      NUMBER(1) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(1) :nlang.builtins.u32
   DEFCHOICE :t00.sum.hen
    IDENT(BA) :nlang.builtins.__internal_not_typeable__
    BIN( + ) :nlang.builtins.u32
     NUMBER(0) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(0) :nlang.builtins.u32
   DEFCHOICE :t00.sum.hen
    IDENT(BB) :nlang.builtins.__internal_not_typeable__
    BIN( + ) :nlang.builtins.u32
     BIN( + ) :nlang.builtins.u32
      NUMBER(0) :nlang.builtins.u32
      NUMBER(1) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(0) :nlang.builtins.u32
   DEFCHOICE :t00.sum.hen
    IDENT(BC) :nlang.builtins.__internal_not_typeable__
    BIN( + ) :nlang.builtins.u32
     BIN( + ) :nlang.builtins.u32
      BIN( + ) :nlang.builtins.u32
       NUMBER(0) :nlang.builtins.u32
       NUMBER(1) :nlang.builtins.u32
      NUMBER(1) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(0) :nlang.builtins.u32
  DEFCHOICE :t00.sum.hen
   IDENT(C) :nlang.builtins.__internal_not_typeable__
   BIN( + ) :nlang.builtins.u32
    BIN( + ) :nlang.builtins.u32
     NUMBER(0) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(1) :nlang.builtins.u32
   NUMBER(0) :nlang.builtins.u32
  DEFMETHOD :t00.sum.hen.copy_ctor
   BIN(.) :nlang.builtins.__internal_not_typeable__
    BIN(.) :nlang.builtins.__internal_not_typeable__
     BIN(.) :nlang.builtins.__internal_not_typeable__
      BIN(.) :nlang.builtins.__internal_not_typeable__
       DIRECTDEF :nlang.builtins.__internal_not_typeable__
       IDENT(nlang) :nlang.builtins.__internal_not_typeable__
      IDENT(builtins) :nlang.builtins.__internal_not_typeable__
     IDENT(`copyable) :nlang.builtins.__internal_not_typeable__
    IDENT(copy_ctor) :nlang.builtins.__internal_not_typeable__
   GENARGS :nlang.builtins.__internal_not_typeable__
   FUNARGS :nlang.builtins.__internal_not_typeable__
    DEFARG :(nlang.builtins.mercurial_ref t00.sum.hen)
     IDENT(self) :nlang.builtins.__internal_not_typeable__
     UN(@#) :(nlang.builtins.mercurial_ref t00.sum.hen)
      IDENT(final) :t00.sum.hen
    DEFARG :(nlang.builtins.ref t00.sum.hen)
     IDENT(other) :nlang.builtins.__internal_not_typeable__
     UN(@) :(nlang.builtins.ref t00.sum.hen)
      IDENT(final) :t00.sum.hen
    IDENT(void) :nlang.builtins.void
   WITHIN :nlang.builtins.void
 DEFTYPE :t00.sum.un
  IDENT(un) :nlang.builtins.__internal_not_typeable__
  GENARGS :nlang.builtins.__internal_not_typeable__
  ISALIST :nlang.builtins.__internal_not_typeable__
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(tag_type) :nlang.builtins.u8
    DIRECTDEF :nlang.builtins.u8
    DEFNAME(tag_type) :nlang.builtins.u8
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(final) :t00.sum.un
    DIRECTDEF :t00.sum.un
    DEFNAME(final) :t00.sum.un
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(this) :t00.sum.un
    DIRECTDEF :t00.sum.un
    DEFNAME(this) :t00.sum.un
  DEFCHOICE :t00.sum.un
   IDENT(A) :nlang.builtins.__internal_not_typeable__
   NUMBER(0) :nlang.builtins.u8
   NUMBER(0) :nlang.builtins.u8
  DEFCHOICE :t00.sum.un
   IDENT(B) :nlang.builtins.__internal_not_typeable__
   BIN( + ) :nlang.builtins.u8
    NUMBER(0) :nlang.builtins.u8
    NUMBER(1) :nlang.builtins.u8
   NUMBER(0) :nlang.builtins.u8
   DEFFIELD :nlang.builtins.u32
    IDENT(x) :nlang.builtins.__internal_not_typeable__
    IDENT(u32) :nlang.builtins.u32
  DEFCHOICE :t00.sum.un
   IDENT(C) :nlang.builtins.__internal_not_typeable__
   TYPECONSTRAINT :nlang.builtins.u8
    NUMBER(2) :nlang.builtins.u8
    IDENT(u8) :nlang.builtins.u8
   NUMBER(0) :nlang.builtins.u8
   DEFFIELD :t00.sum.en
    IDENT(x) :nlang.builtins.__internal_not_typeable__
    IDENT(en) :t00.sum.en
 DEFTYPE :t00.sum.hun
  IDENT(hun) :nlang.builtins.__internal_not_typeable__
  GENARGS :nlang.builtins.__internal_not_typeable__
  ISALIST :nlang.builtins.__internal_not_typeable__
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(tag_type) :nlang.builtins.u32
    DIRECTDEF :nlang.builtins.u32
    DEFNAME(tag_type) :nlang.builtins.u32
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(final) :t00.sum.hun
    DIRECTDEF :t00.sum.hun
    DEFNAME(final) :t00.sum.hun
  LET :nlang.builtins.void
   DEFPATTERN :nlang.builtins.void
    IDENT(this) :t00.sum.hun
    DIRECTDEF :t00.sum.hun
    DEFNAME(this) :t00.sum.hun
  DEFCHOICE :t00.sum.hun
   IDENT(A) :nlang.builtins.__internal_not_typeable__
   NUMBER(0) :nlang.builtins.u32
   NUMBER(0) :nlang.builtins.u32
  DEFCHOICE :t00.sum.hun
   IDENT(B) :nlang.builtins.__internal_not_typeable__
   BIN( + ) :nlang.builtins.u32
    NUMBER(0) :nlang.builtins.u32
    NUMBER(1) :nlang.builtins.u32
   BIN( + ) :nlang.builtins.u32
    BIN( + ) :nlang.builtins.u32
     NUMBER(0) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(1) :nlang.builtins.u32
   DEFFIELD :nlang.builtins.u32
    IDENT(x) :nlang.builtins.__internal_not_typeable__
    IDENT(u32) :nlang.builtins.u32
   DEFCHOICE :t00.sum.hun
    IDENT(BA) :nlang.builtins.__internal_not_typeable__
    BIN( + ) :nlang.builtins.u32
     NUMBER(0) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(0) :nlang.builtins.u32
    DEFFIELD :nlang.builtins.u32
     IDENT(y) :nlang.builtins.__internal_not_typeable__
     IDENT(u32) :nlang.builtins.u32
    DEFFIELD :nlang.builtins.u32
     IDENT(z) :nlang.builtins.__internal_not_typeable__
     IDENT(u32) :nlang.builtins.u32
   DEFCHOICE :t00.sum.hun
    IDENT(BB) :nlang.builtins.__internal_not_typeable__
    BIN( + ) :nlang.builtins.u32
     BIN( + ) :nlang.builtins.u32
      NUMBER(0) :nlang.builtins.u32
      NUMBER(1) :nlang.builtins.u32
     NUMBER(1) :nlang.builtins.u32
    NUMBER(0) :nlang.builtins.u32
    DEFFIELD :nlang.builtins.i64
     IDENT(z) :nlang.builtins.__internal_not_typeable__
     IDENT(i64) :nlang.builtins.i64
 DEFFUN :t00.sum.main
  IDENT(main) :nlang.builtins.__internal_not_typeable__
  GENARGS :nlang.builtins.__internal_not_typeable__
  FUNARGS :nlang.builtins.__internal_not_typeable__
   IDENT(i32) :nlang.builtins.i32
  WITHIN :nlang.builtins.void
  BLOCK :nlang.builtins.void
   LET :nlang.builtins.void
    DEFPATTERN :nlang.builtins.void
     IDENT(e) :t00.sum.en
     BIN(.) :t00.sum.en
      IDENT(en) :t00.sum.en
      IDENT(A) :nlang.builtins.__internal_not_typeable__
     DEFNAME(e) :t00.sum.en
   MATCH :nlang.builtins.void
    IDENT(e) :t00.sum.en
    IDENT(A) :t00.sum.en
    BLOCK :nlang.builtins.void
     NOOP :nlang.builtins.void
    IDENT(_) :t00.sum.en
    BLOCK :nlang.builtins.void
     RETURN :nlang.builtins.void
      NUMBER(1) :nlang.builtins.i32
   LET :nlang.builtins.void
    DEFPATTERN :nlang.builtins.void
     IDENT(f) :t00.sum.hen
     BIN(.) :t00.sum.hen
      IDENT(hen) :t00.sum.hen
      IDENT(BA) :nlang.builtins.__internal_not_typeable__
     DEFNAME(f) :t00.sum.hen
   MATCH :nlang.builtins.void
    IDENT(f) :t00.sum.hen
    IDENT(B) :t00.sum.hen
    BLOCK :nlang.builtins.void
     NOOP :nlang.builtins.void
    IDENT(_) :t00.sum.hen
    BLOCK :nlang.builtins.void
     RETURN :nlang.builtins.void
      NUMBER(1) :nlang.builtins.i32
   MATCH :nlang.builtins.void
    IDENT(f) :t00.sum.hen
    IDENT(BA) :t00.sum.hen
    BLOCK :nlang.builtins.void
     NOOP :nlang.builtins.void
    IDENT(_) :t00.sum.hen
    BLOCK :nlang.builtins.void
     RETURN :nlang.builtins.void
      NUMBER(1) :nlang.builtins.i32
   RETURN :nlang.builtins.void
    NUMBER(0) :nlang.builtins.i32
