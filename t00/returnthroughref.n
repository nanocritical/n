from n import *

struct t =
	isa `Trivial_copy
	x	:I32
	xx	:I32

fun Foo = t
	return { x=3 }

fun bar = t
	return Foo

fun bar2 = r:t
	r = bar
	return r

struct stringbuf =
	isa `Not_copyable
	s	:Stringbuf

fun check_empty = ret:stringbuf
	assert ret.s.Count == 0
	ret#s#Cat "test"

fun check_empty_tuple = Error, ret:Stringbuf
	assert ret.Count == 0
	ret#Cat "test"

fun Main = I32
	let y = bar
	if y.x != bar2.x
		return 1

	let s = check_empty
	assert s.s == "test"
	s = check_empty
	assert s.s == "test"

	var t
	t = check_empty
	assert t.s == "test"
	t = check_empty
	assert t.s == "test"

	var t2 = {s="a"}
	t2 = check_empty
	assert t2.s == "test"
	t2 = check_empty
	assert t2.s == "test"

	var t3 = "a"
	var err
	err , t3 = check_empty_tuple
	assert err == OK and t3 == "test"

	return y.xx
