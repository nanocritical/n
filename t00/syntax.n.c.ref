#include <lib/nlang/runtime.h>
#define NLANG_DECLARE_TYPES
# include "lib/nlang/module.n.h.out"
#undef NLANG_DECLARE_TYPES

#define NLANG_DECLARE_TYPES
# include "lib/nlang/strings.n.h.out"
#undef NLANG_DECLARE_TYPES

#define NLANG_DECLARE_TYPES
# include "t00/syntax.n.h.out"
#undef NLANG_DECLARE_TYPES





struct _Ndyn_t00_syntax_ia;
struct t00_syntax_ia;
typedef struct t00_syntax_ia t00_syntax_ia;

struct t00_syntax_test;
typedef struct t00_syntax_test t00_syntax_test;
typedef const t00_syntax_test* _Ngen_nlang_builtins_ref__t00_syntax_test_genN_;
typedef _Ngen_nlang_builtins_ref__t00_syntax_test_genN_ _Ngen_nlang_builtins_nullable_ref__t00_syntax_test_genN_;
typedef t00_syntax_test* _Ngen_nlang_builtins_mutable_ref__t00_syntax_test_genN_;
typedef _Ngen_nlang_builtins_mutable_ref__t00_syntax_test_genN_ _Ngen_nlang_builtins_mercurial_ref__t00_syntax_test_genN_;
typedef _Ngen_nlang_builtins_mutable_ref__t00_syntax_test_genN_ _Ngen_nlang_builtins_nullable_mutable_ref__t00_syntax_test_genN_;
typedef _Ngen_nlang_builtins_mercurial_ref__t00_syntax_test_genN_ _Ngen_nlang_builtins_nullable_mercurial_ref__t00_syntax_test_genN_;



typedef nlang_builtins_u32 t00_syntax_enu;
typedef const t00_syntax_enu* _Ngen_nlang_builtins_ref__t00_syntax_enu_genN_;
typedef _Ngen_nlang_builtins_ref__t00_syntax_enu_genN_ _Ngen_nlang_builtins_nullable_ref__t00_syntax_enu_genN_;
typedef t00_syntax_enu* _Ngen_nlang_builtins_mutable_ref__t00_syntax_enu_genN_;
typedef _Ngen_nlang_builtins_mutable_ref__t00_syntax_enu_genN_ _Ngen_nlang_builtins_mercurial_ref__t00_syntax_enu_genN_;
typedef _Ngen_nlang_builtins_mutable_ref__t00_syntax_enu_genN_ _Ngen_nlang_builtins_nullable_mutable_ref__t00_syntax_enu_genN_;
typedef _Ngen_nlang_builtins_mercurial_ref__t00_syntax_enu_genN_ _Ngen_nlang_builtins_nullable_mercurial_ref__t00_syntax_enu_genN_;
#define NLANG_DEFINE_TYPES
# include "lib/nlang/module.n.h.out"
#undef NLANG_DEFINE_TYPES

#define NLANG_DEFINE_TYPES
# include "lib/nlang/strings.n.h.out"
#undef NLANG_DEFINE_TYPES

#define NLANG_DEFINE_TYPES
# include "t00/syntax.n.h.out"
#undef NLANG_DEFINE_TYPES





struct _Ndyn_t00_syntax_ia {
nlang_builtins_u8 __Nfiller;
};
struct t00_syntax_ia {
const struct _Ndyn_t00_syntax_ia *vptr;
void *obj;
};

struct t00_syntax_test {
nlang_builtins_i32 t;
}
;



#define t00_syntax_enu_V1_label__ ((nlang_builtins_u32)0)
static const t00_syntax_enu t00_syntax_enu_V1 = t00_syntax_enu_V1_label__;
#define t00_syntax_enu_V2_label__ (((nlang_builtins_u32)0 + (nlang_builtins_u32)1))
static const t00_syntax_enu t00_syntax_enu_V2 = t00_syntax_enu_V2_label__;
#define t00_syntax_enu_V3_label__ ((((nlang_builtins_u32)0 + (nlang_builtins_u32)1) + (nlang_builtins_u32)1))
static const t00_syntax_enu t00_syntax_enu_V3 = t00_syntax_enu_V3_label__;
#define NLANG_DECLARE_FUNCTIONS
# include "lib/nlang/module.n.h.out"
#undef NLANG_DECLARE_FUNCTIONS

#define NLANG_DECLARE_FUNCTIONS
# include "lib/nlang/strings.n.h.out"
#undef NLANG_DECLARE_FUNCTIONS

#define NLANG_DECLARE_FUNCTIONS
# include "t00/syntax.n.h.out"
#undef NLANG_DECLARE_FUNCTIONS



static inline nlang_builtins_i32 t00_syntax_other4(nlang_builtins_i32 x);

extern nlang_builtins_i32 t00_syntax_other5(nlang_builtins_i32 x);


nlang_builtins_i32 t00_syntax_test_foo(_Ngen_nlang_builtins_ref__t00_syntax_test_genN_ self, nlang_builtins_i32 x) __attribute__((__nonnull__(1)));
;
nlang_builtins_void t00_syntax_test_ctor(_Ngen_nlang_builtins_mercurial_ref__t00_syntax_test_genN_ self) __attribute__((__nonnull__(1)));
;
void t00_syntax_test_mk(t00_syntax_test *_nrtr_r);
;
_Ngen_nlang_builtins_mercurial_ref__t00_syntax_test_genN_ t00_syntax_test_new(void);
;
static inline t00_syntax_ia t00_syntax_test_mkdyn__t00_syntax_ia(t00_syntax_test *obj);

static nlang_builtins_i32 t00_syntax_foobar(nlang_builtins_i32 x);

static nlang_builtins_void t00_syntax_foobar2(void);

nlang_builtins_void t00_syntax_enu_copy_ctor(_Ngen_nlang_builtins_mercurial_ref__t00_syntax_enu_genN_ self, _Ngen_nlang_builtins_ref__t00_syntax_enu_genN_ other) __attribute__((__nonnull__(1, 2)));
;
#define NLANG_DEFINE_FUNCTIONS
# include "lib/nlang/module.n.h.out"
#undef NLANG_DEFINE_FUNCTIONS

#define NLANG_DEFINE_FUNCTIONS
# include "lib/nlang/strings.n.h.out"
#undef NLANG_DEFINE_FUNCTIONS

#define NLANG_DEFINE_FUNCTIONS
# include "t00/syntax.n.h.out"
#undef NLANG_DEFINE_FUNCTIONS
nlang_builtins_i32 _Nmain(void) {
 {
nlang_builtins_i32 x = (nlang_builtins_i32)1;
;
nlang_builtins_i32 y = ((nlang_builtins_i32)2 + x);
;
return ((nlang_builtins_i32)0 + y);
}
}

nlang_builtins_i32 t00_syntax_main2(void) {
 {
return (nlang_builtins_i32)0;
}
}





nlang_builtins_i32 t00_syntax_test_foo(_Ngen_nlang_builtins_ref__t00_syntax_test_genN_ self, nlang_builtins_i32 x) {
#define THIS(x) t00_syntax_test##x
 {
nlang_builtins_i32 y = x;
;
return y;
}
#undef THIS
}
;
nlang_builtins_void t00_syntax_test_ctor(_Ngen_nlang_builtins_mercurial_ref__t00_syntax_test_genN_ self) {
#define THIS(x) t00_syntax_test##x
#undef THIS
}
;
void t00_syntax_test_mk(t00_syntax_test *_nrtr_r) {
#define THIS(x) t00_syntax_test##x
#define r (*_nrtr_r)
#undef r
#undef THIS
}
;
_Ngen_nlang_builtins_mercurial_ref__t00_syntax_test_genN_ t00_syntax_test_new(void) {
#define THIS(x) t00_syntax_test##x
return calloc(1, sizeof(THIS()));
#undef THIS
}
;
static inline t00_syntax_ia t00_syntax_test_mkdyn__t00_syntax_ia(t00_syntax_test *obj) {
static const struct _Ndyn_t00_syntax_ia vtable = {
0,
};
return (t00_syntax_ia){ .vptr = &vtable, .obj = obj };
}

static nlang_builtins_i32 t00_syntax_foobar(nlang_builtins_i32 x) {
 {
nlang_builtins_assert(({ (x != (nlang_builtins_i32)0);
; }));
nlang_builtins_assert(({ (x != (nlang_builtins_i32)0);
; }));
return (nlang_builtins_i32)0;
}
}

static nlang_builtins_void t00_syntax_foobar2(void) {
 {
return;
}
}

nlang_builtins_void t00_syntax_enu_copy_ctor(_Ngen_nlang_builtins_mercurial_ref__t00_syntax_enu_genN_ self, _Ngen_nlang_builtins_ref__t00_syntax_enu_genN_ other) {
#define THIS(x) t00_syntax_enu##x
memcpy(self, other, sizeof(*self));
#undef THIS
}
;
void t00_syntax_Nrunexamples(void) __attribute__((section(".text.nlang.examples")));
void t00_syntax_Nrunexamples(void) {
}
