from n import *

struct nocopy =
	isa `Not_return_by_copy
	x	:I32
	y	:I32

example
	let a = {}:nocopy such
		a!x = 1
		a!y = 2
		a = { x=3 }
	assert a.x == 3 and a.y == 0

	let b = {}:nocopy such
		b!x = 1
		b!y = 2
		b = { y=3 }
	assert b.x == 0 and b.y == 3

example
	let a = {}:tt such
		a!x = 1
		a!y = 2
		a = { x=3 }
	assert a.x == 3 and a.y == 0

	let b = {}:tt such
		b!x = 1
		b!y = 2
		b = { y=3 }
	assert b.x == 0 and b.y == 3


struct tt =
	isa `Trivial_copy
	x	:I32
	y	:I32

struct t =
	isa `Trivial_copy
	x	:I32
	y	:tt

fun Foo x:I32 y:I32 = I32
	return x

fun Main = I32
	let b = (Foo
		\ (Foo 0
			\ 1)
		\ 1)

	let c = (Foo
		\ (Foo 0
			\ 1) 1)

	let a = { x = 1
		\ y = {
			\ x = 1
			\ y = 0
			\ }
		\ }:t
	return 0 * c + b + a.y.x - 1
