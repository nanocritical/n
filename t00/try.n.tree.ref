MODULE_BODY :nlang.literals.__internal_not_typeable__
 IMPORT :nlang.literals.__internal_not_typeable__
  IDENT(nlang)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(literals)
    IDENT(__null__)
  IMPORT :<import>
   IDENT(nlang)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(literals)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(memory)
   IMPORT :<import>
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(literals)
    IDENT(integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(literals)
    IDENT(floating)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(literals)
    IDENT(__internal_not_typeable__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(literals)
    IDENT(__call_function_slot__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(literals)
    IDENT(__mutable__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(literals)
    IDENT(__mercurial__)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_any)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_copyable)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_copyable_but_owned)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_trivial_copy)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_trivial_copy_but_owned)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_return_by_copy)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_default_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_trivial_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_trivial_dtor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_matchable)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_has_equality)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_trivial_equality)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_has_compare)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_ordered)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_trivial_order)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_ordered_by_compare)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_arithmetic)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_bitwise)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_sum_copy)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_sum_equality)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_sum_order)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(void)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(__i_ref_compatible)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_any_any_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_any_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_any_mutable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_any_nullable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_any_nullable_mutable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(mutable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(mercurial_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(nullable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(nullable_mutable_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(nullable_mercurial_ref)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_any_tuple)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_2)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_3)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_4)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_5)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_6)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_7)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_8)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_9)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_10)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_11)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_12)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_13)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_14)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_15)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(tuple_16)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_numeric)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_signed_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_unsigned_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_native_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_native_signed_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_native_unsigned_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_native_anysign_integer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_generalized_boolean)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_bool_compatible)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_native_boolean)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_floating)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_native_floating)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(bool)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i8)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i16)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i32)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i64)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(u8)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(u16)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(u32)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(u64)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(ssize)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(size)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(float)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(double)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_auto_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_ctor_with)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_trivial_array_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_array_ctor)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(static_array)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_sum_ctor_with)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(abort)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(assert)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(likely)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(unlikely)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(unused)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(optional)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(min)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(max)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(i_error)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(error)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(drop)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(builtins)
    IDENT(fatal)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(i_locus)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(i_fwd_locus)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(i_bidir_locus)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(i_iterator)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(index_range)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(index_iterator)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(containers)
    IDENT(range)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(memory)
    IDENT(i_allocator)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(memory)
    IDENT(slice)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(char)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(i_static_string_compatible)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(i_const_string)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(i_string)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(i_string_buffer)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(static_string)
  IMPORT :<import>
   BIN(.)
    BIN(.)
     IDENT(nlang)
     IDENT(chars)
    IDENT(i_show)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(print)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(say)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(just_const)
  IMPORT :<import>
   BIN(.)
    IDENT(nlang)
    IDENT(just_mutable)
 DEFFUN :t00.try.inferred
  IDENT(inferred) :nlang.literals.__internal_not_typeable__
  GENARGS :nlang.literals.__internal_not_typeable__
  FUNARGS :nlang.literals.__internal_not_typeable__
   DEFARG :nlang.builtins.error
    IDENT(_nretval)
    IDENT(error) :nlang.builtins.error
  BLOCK :nlang.builtins.void
   TRY :nlang.builtins.void
    LET :nlang.builtins.void
     DEFPATTERN :nlang.builtins.void
      IDENT(_Ngensym0) :nlang.builtins.error
      DEFNAME(_Ngensym0) :nlang.builtins.error
     BLOCK :nlang.builtins.void
      BLOCK :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         TYPECONSTRAINT :nlang.builtins.error
          IDENT(_Ngensym16) :nlang.builtins.error
          DIRECTDEF :nlang.builtins.error
         DEFNAME(_Ngensym16) :nlang.builtins.error
        BLOCK :nlang.builtins.void
         THROW :nlang.builtins.void
          BLOCK :nlang.builtins.error
           BIN( = ) :nlang.builtins.void
            IDENT(_Ngensym16) :nlang.builtins.error
            INIT :nlang.builtins.error
             IDENT(code) :nlang.literals.__internal_not_typeable__
             NUMBER(1) :nlang.builtins.i32
           IDENT(_Ngensym16) :nlang.builtins.error
      CATCH :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         IDENT(err) :nlang.builtins.error
         IDENT(_Ngensym0) :nlang.builtins.error
         DEFNAME(err) :nlang.builtins.error
       BLOCK :nlang.builtins.void
        RETURN :nlang.builtins.void
         IDENT(err) :nlang.builtins.error
 DEFFUN :t00.try.foo
  IDENT(foo) :nlang.literals.__internal_not_typeable__
  GENARGS :nlang.literals.__internal_not_typeable__
  FUNARGS :nlang.literals.__internal_not_typeable__
   IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   TRY :nlang.builtins.void
    LET :nlang.builtins.void
     DEFPATTERN :nlang.builtins.void
      IDENT(_Ngensym2) :nlang.builtins.error
      DEFNAME(_Ngensym2) :nlang.builtins.error
     BLOCK :nlang.builtins.void
      BLOCK :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         TYPECONSTRAINT :nlang.builtins.error
          IDENT(_Ngensym17) :nlang.builtins.error
          DIRECTDEF :nlang.builtins.error
         DEFNAME(_Ngensym17) :nlang.builtins.error
        BLOCK :nlang.builtins.void
         THROW :nlang.builtins.void
          IDENT(ONE)
          BLOCK :nlang.builtins.error
           BIN( = ) :nlang.builtins.void
            IDENT(_Ngensym17) :nlang.builtins.error
            INIT :nlang.builtins.error
             IDENT(code) :nlang.literals.__internal_not_typeable__
             NUMBER(1) :nlang.builtins.i32
           IDENT(_Ngensym17) :nlang.builtins.error
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         TYPECONSTRAINT :nlang.builtins.error
          IDENT(_Ngensym18) :nlang.builtins.error
          DIRECTDEF :nlang.builtins.error
         DEFNAME(_Ngensym18) :nlang.builtins.error
        BLOCK :nlang.builtins.void
         THROW :nlang.builtins.void
          IDENT(ZERO)
          BLOCK :nlang.builtins.error
           BIN( = ) :nlang.builtins.void
            IDENT(_Ngensym18) :nlang.builtins.error
            INIT :nlang.builtins.error
             IDENT(code) :nlang.literals.__internal_not_typeable__
             NUMBER(0) :nlang.builtins.i32
           IDENT(_Ngensym18) :nlang.builtins.error
      CATCH :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         IDENT(_) :nlang.builtins.error
         IDENT(_Ngensym2) :nlang.builtins.error
         DEFNAME(_) :nlang.builtins.error
       BLOCK :nlang.builtins.void
        RETURN :nlang.builtins.void
         NUMBER(0) :nlang.builtins.i32
      CATCH :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         IDENT(_) :nlang.builtins.error
         IDENT(_Ngensym2) :nlang.builtins.error
         DEFNAME(_) :nlang.builtins.error
       BLOCK :nlang.builtins.void
        RETURN :nlang.builtins.void
         NUMBER(1) :nlang.builtins.i32
 DEFFUN :t00.try.bar
  IDENT(bar) :nlang.literals.__internal_not_typeable__
  GENARGS :nlang.literals.__internal_not_typeable__
  FUNARGS :nlang.literals.__internal_not_typeable__
   IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   TRY :nlang.builtins.void
    LET :nlang.builtins.void
     DEFPATTERN :nlang.builtins.void
      IDENT(_Ngensym3) :nlang.builtins.error
      DEFNAME(_Ngensym3) :nlang.builtins.error
     BLOCK :nlang.builtins.void
      BLOCK :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         IDENT(_Ngensyma) :nlang.builtins.error
         INIT :nlang.builtins.error
          IDENT(code) :nlang.literals.__internal_not_typeable__
          NUMBER(1) :nlang.builtins.i32
         DEFNAME(excep _Ngensym5 _Ngensyma) :nlang.builtins.error
          CALL :nlang.builtins.bool
           DIRECTDEF :nlang.builtins.error.operator_test
           UN(@) :(nlang.builtins.ref nlang.builtins.error)
            IDENT(_Ngensyma) :nlang.builtins.error
       RETURN :nlang.builtins.void
        NUMBER(0) :nlang.builtins.i32
      CATCH :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         IDENT(err) :nlang.builtins.error
         IDENT(_Ngensym3) :nlang.builtins.error
         DEFNAME(err) :nlang.builtins.error
       BLOCK :nlang.builtins.void
        TRY :nlang.builtins.void
         LET :nlang.builtins.void
          DEFPATTERN :nlang.builtins.void
           IDENT(_Ngensym4) :nlang.builtins.error
           DEFNAME(_Ngensym4) :nlang.builtins.error
          BLOCK :nlang.builtins.void
           BLOCK :nlang.builtins.void
            LET :nlang.builtins.void
             DEFPATTERN :nlang.builtins.void
              IDENT(_Ngensymb) :nlang.builtins.error
              INIT :nlang.builtins.error
               IDENT(code) :nlang.literals.__internal_not_typeable__
               BIN( + ) :nlang.builtins.i32
                BIN(.) :nlang.builtins.i32
                 IDENT(err) :nlang.builtins.error
                 IDENT(code) :nlang.literals.__internal_not_typeable__
                NUMBER(1) :nlang.builtins.i32
              DEFNAME(excep ONE _Ngensymb) :nlang.builtins.error
               CALL :nlang.builtins.bool
                DIRECTDEF :nlang.builtins.error.operator_test
                UN(@) :(nlang.builtins.ref nlang.builtins.error)
                 IDENT(_Ngensymb) :nlang.builtins.error
            LET :nlang.builtins.void
             DEFPATTERN :nlang.builtins.void
              IDENT(_Ngensymc) :nlang.builtins.error
              INIT :nlang.builtins.error
               IDENT(code) :nlang.literals.__internal_not_typeable__
               NUMBER(0) :nlang.builtins.i32
              DEFNAME(excep ZERO _Ngensymc) :nlang.builtins.error
               CALL :nlang.builtins.bool
                DIRECTDEF :nlang.builtins.error.operator_test
                UN(@) :(nlang.builtins.ref nlang.builtins.error)
                 IDENT(_Ngensymc) :nlang.builtins.error
            RETURN :nlang.builtins.void
             NUMBER(0) :nlang.builtins.i32
           CATCH :nlang.builtins.void
            LET :nlang.builtins.void
             DEFPATTERN :nlang.builtins.void
              IDENT(err) :nlang.builtins.error
              IDENT(_Ngensym4) :nlang.builtins.error
              DEFNAME(err) :nlang.builtins.error
            BLOCK :nlang.builtins.void
             RETURN :nlang.builtins.void
              BIN( - ) :nlang.builtins.i32
               BIN(.) :nlang.builtins.i32
                IDENT(err) :nlang.builtins.error
                IDENT(code) :nlang.literals.__internal_not_typeable__
               NUMBER(1) :nlang.builtins.i32
           CATCH :nlang.builtins.void
            LET :nlang.builtins.void
             DEFPATTERN :nlang.builtins.void
              IDENT(_) :nlang.builtins.error
              IDENT(_Ngensym4) :nlang.builtins.error
              DEFNAME(_) :nlang.builtins.error
            BLOCK :nlang.builtins.void
             RETURN :nlang.builtins.void
              NUMBER(0) :nlang.builtins.i32
 DEFFUN :t00.try.noerror
  IDENT(noerror) :nlang.literals.__internal_not_typeable__
  GENARGS :nlang.literals.__internal_not_typeable__
  FUNARGS :nlang.literals.__internal_not_typeable__
   IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   TRY :nlang.builtins.void
    LET :nlang.builtins.void
     DEFPATTERN :nlang.builtins.void
      IDENT(_Ngensym6) :nlang.builtins.error
      DEFNAME(_Ngensym6) :nlang.builtins.error
     BLOCK :nlang.builtins.void
      BLOCK :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         IDENT(_Ngensymd) :nlang.builtins.error
         INIT :nlang.builtins.error
          IDENT(code) :nlang.literals.__internal_not_typeable__
          NUMBER(0) :nlang.builtins.i32
         DEFNAME(excep _Ngensym7 _Ngensymd) :nlang.builtins.error
          CALL :nlang.builtins.bool
           DIRECTDEF :nlang.builtins.error.operator_test
           UN(@) :(nlang.builtins.ref nlang.builtins.error)
            IDENT(_Ngensymd) :nlang.builtins.error
       RETURN :nlang.builtins.void
        NUMBER(0) :nlang.builtins.i32
      CATCH :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         IDENT(_) :nlang.builtins.error
         IDENT(_Ngensym6) :nlang.builtins.error
         DEFNAME(_) :nlang.builtins.error
       BLOCK :nlang.builtins.void
        RETURN :nlang.builtins.void
         NUMBER(1) :nlang.builtins.i32
 DEFFUN :t00.try.main
  IDENT(main) :nlang.literals.__internal_not_typeable__
  GENARGS :nlang.literals.__internal_not_typeable__
  FUNARGS :nlang.literals.__internal_not_typeable__
   IDENT(i32) :nlang.builtins.i32
  BLOCK :nlang.builtins.void
   LET :nlang.builtins.void
    DEFPATTERN :nlang.builtins.void
     TYPECONSTRAINT :nlang.builtins.error
      IDENT(_Ngensym19) :nlang.builtins.error
      DIRECTDEF :nlang.builtins.error
     DEFNAME(_Ngensym19) :nlang.builtins.error
    BLOCK :nlang.builtins.void
     CALL :nlang.builtins.void
      IDENT(assert) :nlang.builtins.assert
      CALL :nlang.builtins.bool
       DIRECTDEF :nlang.builtins.error.operator_ne
       BLOCK :(nlang.builtins.ref nlang.builtins.error)
        BIN( = ) :nlang.builtins.void
         IDENT(_Ngensym19) :nlang.builtins.error
         CALL :nlang.builtins.error
          IDENT(inferred) :t00.try.inferred
        UN(@) :(nlang.builtins.ref nlang.builtins.error)
         IDENT(_Ngensym19) :nlang.builtins.error
       UN(@) :(nlang.builtins.ref nlang.builtins.error)
        BIN(.) :nlang.builtins.error
         IDENT(error) :nlang.builtins.error
         IDENT(OK) :nlang.literals.__internal_not_typeable__
   CALL :nlang.builtins.void
    IDENT(assert) :nlang.builtins.assert
    BIN( == ) :nlang.builtins.bool
     CALL :nlang.builtins.i32
      IDENT(foo) :t00.try.foo
     NUMBER(1) :nlang.builtins.i32
   CALL :nlang.builtins.void
    IDENT(assert) :nlang.builtins.assert
    BIN( == ) :nlang.builtins.bool
     CALL :nlang.builtins.i32
      IDENT(bar) :t00.try.bar
     NUMBER(1) :nlang.builtins.i32
   CALL :nlang.builtins.void
    IDENT(assert) :nlang.builtins.assert
    BIN( == ) :nlang.builtins.bool
     CALL :nlang.builtins.i32
      IDENT(noerror) :t00.try.noerror
     NUMBER(0) :nlang.builtins.i32
   TRY :nlang.builtins.void
    LET :nlang.builtins.void
     DEFPATTERN :nlang.builtins.void
      IDENT(_Ngensym8) :nlang.builtins.error
      DEFNAME(_Ngensym8) :nlang.builtins.error
     BLOCK :nlang.builtins.void
      BLOCK :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         TYPECONSTRAINT :nlang.builtins.error
          IDENT(_Ngensym1a) :nlang.builtins.error
          DIRECTDEF :nlang.builtins.error
         DEFNAME(_Ngensym1a) :nlang.builtins.error
        BLOCK :nlang.builtins.void
         THROW :nlang.builtins.void
          BLOCK :nlang.builtins.error
           BIN( = ) :nlang.builtins.void
            IDENT(_Ngensym1a) :nlang.builtins.error
            INIT :nlang.builtins.error
             IDENT(code) :nlang.literals.__internal_not_typeable__
             CALL :nlang.builtins.i32
              IDENT(bar) :t00.try.bar
           IDENT(_Ngensym1a) :nlang.builtins.error
       RETURN :nlang.builtins.void
        NUMBER(1) :nlang.builtins.i32
      CATCH :nlang.builtins.void
       LET :nlang.builtins.void
        DEFPATTERN :nlang.builtins.void
         IDENT(err) :nlang.builtins.error
         IDENT(_Ngensym8) :nlang.builtins.error
         DEFNAME(err) :nlang.builtins.error
       BLOCK :nlang.builtins.void
        RETURN :nlang.builtins.void
         BIN( - ) :nlang.builtins.i32
          BIN(.) :nlang.builtins.i32
           IDENT(err) :nlang.builtins.error
           IDENT(code) :nlang.literals.__internal_not_typeable__
          NUMBER(1) :nlang.builtins.i32
