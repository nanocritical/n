#include <lib/nlang/runtime.h>
#define NLANG_DECLARE_TYPES
# include "lib/nlang/module.n.h.out"
#undef NLANG_DECLARE_TYPES

#define NLANG_DECLARE_TYPES
# include "t00/optional.n.h.out"
#undef NLANG_DECLARE_TYPES




#define NLANG_DEFINE_TYPES
# include "lib/nlang/module.n.h.out"
#undef NLANG_DEFINE_TYPES

#define NLANG_DEFINE_TYPES
# include "t00/optional.n.h.out"
#undef NLANG_DEFINE_TYPES




#define NLANG_DECLARE_FUNCTIONS
# include "lib/nlang/module.n.h.out"
#undef NLANG_DECLARE_FUNCTIONS

#define NLANG_DECLARE_FUNCTIONS
# include "t00/optional.n.h.out"
#undef NLANG_DECLARE_FUNCTIONS
static nlang_builtins_i32 t00_optional_opts(_Ngen_nlang_builtins_nullable_ref__nlang_builtins_i32_genN_ a);

static nlang_builtins_i32 t00_optional_chained(_Ngen_nlang_builtins_mutable_ref___Ngen_nlang_builtins_vararg___Ngen_nlang_builtins_ref__nlang_builtins_i32_genN__genN__genN_ v) __attribute__((__nonnull__(1)));

static nlang_builtins_i32 t00_optional_var(nlang_builtins_i32 a, _Ngen_nlang_builtins_nullable_ref__nlang_builtins_i32_genN_ b, nlang_builtins_size _Nvararg_count, ...);

static nlang_builtins_i32 t00_optional_onlyvar(nlang_builtins_size _Nvararg_count, ...);

#define NLANG_DEFINE_FUNCTIONS
# include "lib/nlang/module.n.h.out"
#undef NLANG_DEFINE_FUNCTIONS

#define NLANG_DEFINE_FUNCTIONS
# include "t00/optional.n.h.out"
#undef NLANG_DEFINE_FUNCTIONS
static nlang_builtins_i32 t00_optional_opts(_Ngen_nlang_builtins_nullable_ref__nlang_builtins_i32_genN_ a) {
 {
return _Ngen_nlang_builtins_optional__nlang_builtins_i32_genN_(a, (nlang_builtins_i32)1);
}
}

static nlang_builtins_i32 t00_optional_chained(_Ngen_nlang_builtins_mutable_ref___Ngen_nlang_builtins_vararg___Ngen_nlang_builtins_ref__nlang_builtins_i32_genN__genN__genN_ v) {
 {
nlang_builtins_i32 s = (nlang_builtins_i32)0;
_Ngen_nlang_builtins_vararg___Ngen_nlang_builtins_ref__nlang_builtins_i32_genN__genN_ _Ngensym0 = ((*v));
while (_Ngen_nlang_builtins_vararg___Ngen_nlang_builtins_ref__nlang_builtins_i32_genN__genN__has_next(((&_Ngensym0)))) {
_Ngen_nlang_builtins_ref__nlang_builtins_i32_genN_ i = NLANG_BUILTINS_VARARG_NEXT(_Ngen_nlang_builtins_ref__nlang_builtins_i32_genN_, *(((&_Ngensym0))));
s += ((*i));
;
};
;
;
return s;
}
}

static nlang_builtins_i32 t00_optional_var(nlang_builtins_i32 a, _Ngen_nlang_builtins_nullable_ref__nlang_builtins_i32_genN_ b, nlang_builtins_size _Nvararg_count, ...) {
_Ngen_nlang_builtins_vararg___Ngen_nlang_builtins_ref__nlang_builtins_i32_genN__genN_ v = { 0 };
NLANG_BUILTINS_VARARG_START(v);
 {
nlang_builtins_i32 s = t00_optional_chained(((&v)));
;
return ((a + _Ngen_nlang_builtins_optional__nlang_builtins_i32_genN_(b, (nlang_builtins_i32)0)) + s);
}
NLANG_BUILTINS_VARARG_END(v);
}

static nlang_builtins_i32 t00_optional_onlyvar(nlang_builtins_size _Nvararg_count, ...) {
_Ngen_nlang_builtins_vararg___Ngen_nlang_builtins_ref__nlang_builtins_i32_genN__genN_ v = { 0 };
NLANG_BUILTINS_VARARG_START(v);
 {
nlang_builtins_i32 s = (nlang_builtins_i32)0;
_Ngen_nlang_builtins_vararg___Ngen_nlang_builtins_ref__nlang_builtins_i32_genN__genN_ _Ngensym1 = v;
while (_Ngen_nlang_builtins_vararg___Ngen_nlang_builtins_ref__nlang_builtins_i32_genN__genN__has_next(((&_Ngensym1)))) {
_Ngen_nlang_builtins_ref__nlang_builtins_i32_genN_ i = NLANG_BUILTINS_VARARG_NEXT(_Ngen_nlang_builtins_ref__nlang_builtins_i32_genN_, *(((&_Ngensym1))));
s += ((*i));
;
};
;
;
return s;
}
NLANG_BUILTINS_VARARG_END(v);
}

nlang_builtins_i32 _Nmain(void) {
 {
nlang_builtins_i32 _Ngensym2 = { 0 };
if ((t00_optional_opts(({ _Ngensym2 = (nlang_builtins_i32)1;
((&_Ngensym2));
; })) != (nlang_builtins_i32)1)) {
return (nlang_builtins_i32)1;
};
;
nlang_builtins_i32 _Ngensym3 = { 0 };
if ((t00_optional_opts(({ _Ngensym3 = (nlang_builtins_i32)1;
((&_Ngensym3));
; })) != t00_optional_opts(NULL))) {
return (nlang_builtins_i32)1;
};
;
nlang_builtins_i32 _Ngensym4 = { 0 };
nlang_builtins_i32 _Ngensym5 = { 0 };
nlang_builtins_i32 _Ngensym6 = { 0 };
nlang_builtins_i32 _Ngensym7 = { 0 };
nlang_builtins_assert(((nlang_builtins_i32)10 == t00_optional_var((nlang_builtins_i32)0, ({ _Ngensym4 = (nlang_builtins_i32)1;
((&_Ngensym4));
; }), 3, ({ _Ngensym5 = (nlang_builtins_i32)2;
((&_Ngensym5));
; }), ({ _Ngensym6 = (nlang_builtins_i32)3;
((&_Ngensym6));
; }), ({ _Ngensym7 = (nlang_builtins_i32)4;
((&_Ngensym7));
; }))));
;
nlang_builtins_i32 _Ngensym8 = { 0 };
nlang_builtins_i32 _Ngensym9 = { 0 };
nlang_builtins_i32 _Ngensyma = { 0 };
nlang_builtins_i32 _Ngensymb = { 0 };
nlang_builtins_i32 _Ngensymc = { 0 };
nlang_builtins_assert(((nlang_builtins_i32)10 == t00_optional_onlyvar(5, ({ _Ngensym8 = (nlang_builtins_i32)0;
((&_Ngensym8));
; }), ({ _Ngensym9 = (nlang_builtins_i32)1;
((&_Ngensym9));
; }), ({ _Ngensyma = (nlang_builtins_i32)2;
((&_Ngensyma));
; }), ({ _Ngensymb = (nlang_builtins_i32)3;
((&_Ngensymb));
; }), ({ _Ngensymc = (nlang_builtins_i32)4;
((&_Ngensymc));
; }))));
;
nlang_builtins_i32 _Ngensymd = { 0 };
return t00_optional_opts(({ _Ngensymd = (nlang_builtins_i32)0;
((&_Ngensymd));
; }));
;
}
}
void t00_optional_Nrunexamples(void) __attribute__((section(".text.nlang.examples")));
void t00_optional_Nrunexamples(void) {
}
