from n import *

fun Foo = I32, I32
	return 1, -1

fun bar = x:I32, y:I32
	x = 1
	y = -1

fun refcompat x:!I32 y:!I32 = *I32, !I32
	return x, y

-- fun bar2 = x:I32, (y:I32, z:I32)
--   x = 1
--   y = 1
--   z = 2
--
-- struct nocopy =
--   s	:I32
--
-- fun byref = x:nocopy, y:nocopy
--   x = { s=1 }:nocopy
--   y = { s=-1 }:nocopy
--
-- fun byref2 = x:I32, y:nocopy
--   x = 1
--   y!s = -1
--

fun Main = Error
	let x0, y0 = 1, -1
	let x, y = Foo
	assert x0*y0*x*y == 1

	let x1, _ = Foo
	let _, y1 = Foo

	let x2, y2 = bar
	assert x2 + y2 == 0

	let x3, y3 = 0, 0 such
		let _, _ = refcompat !x3 !y3

--  let x3, (y3, z3) = bar2
--  assert x3 + y3 - z3 == 0

	if 0 != (x0 + y0) + (x + y) + (x1 + y1)
		return INVAL
	return OK
