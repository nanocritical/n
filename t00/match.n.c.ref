#include <lib/nlang/runtime.h>
#include "lib/nlang/module.n.h.out"
typedef nlang_builtins_u32 t00_match_enu;
static const t00_match_enu t00_match_enu_A = (nlang_builtins_u32)0;
static const t00_match_enu t00_match_enu_B = (nlang_builtins_u32)0 + (nlang_builtins_u32)1;
typedef const t00_match_enu* _ngen_nlang_builtins_i_ref__t00_match_enu;
typedef _ngen_nlang_builtins_i_ref__t00_match_enu _ngen_nlang_builtins_i_nullable_ref__t00_match_enu;
typedef t00_match_enu* _ngen_nlang_builtins_i_mutable_ref__t00_match_enu;
typedef _ngen_nlang_builtins_i_mutable_ref__t00_match_enu _ngen_nlang_builtins_i_mercurial_ref__t00_match_enu;
typedef _ngen_nlang_builtins_i_mutable_ref__t00_match_enu _ngen_nlang_builtins_i_nullable_mutable_ref__t00_match_enu;
typedef _ngen_nlang_builtins_i_mercurial_ref__t00_match_enu _ngen_nlang_builtins_i_nullable_mercurial_ref__t00_match_enu;

nlang_builtins_void t00_match_enu_operator_copy(_ngen_nlang_builtins_i_mercurial_ref__t00_match_enu self, _ngen_nlang_builtins_i_ref__t00_match_enu other) {
#define THIS(x) t00_match_enu##x
memcpy(self, other, sizeof(*self));
#undef THIS
}

nlang_builtins_i32 main(void){
 {
t00_match_enu n; memset(&n, 0, sizeof(n));
n = t00_match_enu_A;
;
if (n == t00_match_enu_B) {
return (nlang_builtins_i32)0;
}
else  {
return (nlang_builtins_i32)1;
};
}
}
