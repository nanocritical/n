#!/usr/bin/env bash

export TDIFF_WHAT="stderr stdout"

wd=$(dirname $0)
WD="$wd/"
if [ "$WD" == "./" ]; then
	WD=""
fi

list=$*
if [ -z "$list" ]; then
	list=${WD}t[0-9][0-9]/*.n
fi

ret=0

function build_and_run() {
	$wd/ncc0 $1 2> $1.o.stderr || return
	./a.out > $1.o.stdout 2>> $1.o.stderr || return
}

function pretty_status() {
	if (( $ret == 0 )); then
		echo exit 0
	elif (( $ret <= 128 )); then
		echo exit $ret
	else
		echo signal $(($ret - 128))
	fi
}

for t in $list; do
	rm -f $t.o.{stderr,stdout}
	# Assume that having a .ref.stderr file means the test should fail.
	if [ -f $t.ref.stderr ]; then
		build_and_run $t
		ret=$?
		if (( $ret == 0 )); then
			echo "FAILED $t: did not fail ($(pretty_status $ret))"
			if ! [ -s $t.o.stderr ]; then
				# Remove empty.
				rm $t.o.stderr
			fi
		fi
	else
		build_and_run $t
		ret=$?
		if (( $ret != 0 )); then
			echo "FAILED $t: did not succeed ($(pretty_status $ret))"
		fi
		if ! [ -s $t.o.stderr ]; then
			# Remove empty.
			rm $t.o.stderr
		fi
	fi

	if ! [ -s $t.o.stdout ]; then
		# Remove empty.
		rm -f $t.o.stdout
	fi

	if [ -s $t.o.stderr ]; then
		perl -i -ne 'if (!m/^\tE: /) { print; }' $t.o.stderr
	fi

        ./tdiff $t
done

exit $ret
