#!/usr/bin/env bash

wd=$(dirname $0)
WD="$wd/"
if [ "$WD" == "./" ]; then
	WD=""
fi

list=$*
if [ -z "$list" ]; then
	list=${WD}t[0-9][0-9]/*.n
fi

ret=0

function build_and_run() {
	$wd/ncc0 $1 2> $1.stderr.out || return
	./a.out > $1.stdout.out 2>> $1.stderr.out || return
}

function pretty_status() {
	if (( $ret == 0 )); then
		echo exit 0
	elif (( $ret <= 128 )); then
		echo exit $ret
	else
		echo signal $(($ret - 128))
	fi
}

for t in $list; do
	rm -f $t.*.out
	# Assume that having a .stderr.ref file means the test should fail.
	if [ -f $t.stderr.ref ]; then
		build_and_run $t
		ret=$?
		if (( $ret == 0 )); then
			echo "FAILED $t: did not fail ($(pretty_status $ret))"
			if ! [ -s $t.stderr.out ]; then
				# Remove empty.
				rm $t.stderr.out
			fi
		fi
	else
		build_and_run $t
		ret=$?
		if (( $ret != 0 )); then
			echo "FAILED $t: did not succeed ($(pretty_status $ret))"
		fi
		if ! [ -s $t.stderr.out ]; then
			# Remove empty.
			rm $t.stderr.out
		fi
	fi

	if ! [ -s $t.stdout.out ]; then
		# Remove empty.
		rm -f $t.stdout.out
	fi

	if [ -s $t.stderr.out ]; then
		perl -i -ne 'if (!m/^\tE: /) { print; }' $t.stderr.out
	fi

	need_hr=0
	for all in stderr stdout; do
		if [ -f $t.$all.ref ] || [ -f $t.$all.out ]; then
			if ! cmp -s $t.$all.ref $t.$all.out; then
				ret=1
				need_hr=1
				echo "FAILED $t: different output '$all'"
				if [[ "$all" = "stderr" || "$all" = "stdout" ]]; then
					diff -Nu $t.$all.ref $t.$all.out
				fi
			fi
		fi
	done

	if (( $need_hr )); then
		echo "---------------------------------------------------------------"
	fi
done

exit $ret
