#!/usr/bin/env bash

export TDIFF_WHAT="stderr stdout"

wd=$(dirname $0)
WD="$wd/"
if [ "$WD" == "./" ]; then
	WD=""
fi

list=$*
if [ -z "$list" ]; then
	list=$(find ${WD}t[0-9][0-9] -name \*.n |grep -v '_')
fi

ret=0

function build_and_run() {
	$wd/ncc0 $1 2> $1.o.stderr || return
	./a.out > $1.o.stdout 2>> $1.o.stderr || return
}

function pretty_status() {
	if (( $1 == 0 )); then
		echo exit 0
	elif (( $1 <= 128 )); then
		echo exit $1
	else
		echo signal $(($1 - 128))
	fi
}

for t in $list; do
	rm -f $t.o.{stderr,stdout,status}
	if [ -f $t.ref.status ]; then
		build_and_run $t
		ret=$?
		if (( $ret == 0 )); then
			if cmp $t.o.stderr $t.ref.stderr && test -s $t.o.stderr; then
				echo "FAILED $t: did not fail" \
					"(expected $(pretty_status $(cat $t.ref.status)))"
			fi
		else
			echo $ret > $t.o.status
		fi
	else
		build_and_run $t
		ret=$?
		if (( $ret != 0 )); then
			echo $ret > $t.o.status
			echo "FAILED $t: did not succeed ($(pretty_status $ret))"
		fi
	fi

	if ! [ -s $t.o.stderr ]; then
		# Remove empty.
		rm $t.o.stderr
	fi
	if ! [ -s $t.o.stdout ]; then
		# Remove empty.
		rm -f $t.o.stdout
	fi

	if [ -s $t.o.stderr ]; then
		perl -i -ne 'if (!m/^\tE: /) { print; }' $t.o.stderr
	fi

        ./tdiff $t
done

exit $ret
