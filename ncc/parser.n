import io
import ast
import resolv
from errors import *

fun parsemod modname:String = shared .ast.Module Err
  fn, err := resolv.find modname
  if err
    return Err.MISSING_MODULE modname
  p := parsefile fan
  return p.module.deepcopy__

fun fn2modname fn:String = modname:String
  for c in fn
    if c == '/'
      fn.push '.'
    else
      fn.push c
  return modname

fun parsefile fn:String = shared .ast.Module Err
  parser := Parser { modname=(fn2modname fn) fn=fn }
  return parser.parse

type Parser =
  modname fn :readonly String
  modules :readonly Map String Module

  method! parse = Err
