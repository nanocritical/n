from nlang.prelude import *

type accordion t =
  _data:@![]t
  _len:size

  method! _ctor = void
    self!_data = (slice t).new

  method! _dtor = void
    self!_data.clear

  method capacity = size
    return self._data.len

  method len = size
    return self._len

  method operator_get__ n:size = t
    return self._data.[n]

  method! operator_set__ n:size x:t = void
    self._data![n] = x

  method! reserve c:size = void
    if c > self.capacity
      self._data!resize c

  method! resize new_size:size = void
    if new_size > self.capacity
      self._data!resize (max new_size 2*self.capacity)
    else
      self._data!resize (max new_size self.capacity/2)
    self!_len = new_size

  method! clear = void
    self._data!resize 0
    self!_len = 0

  method all_index = index_range
    return self._data.all_index
