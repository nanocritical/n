from nlang import *
from nlang.show import *

type auto_format_s t:show = format
  method format_s ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return t.format_s self flags=flags width=width precision=precision


intf has_format_value t =
  method format_value = t

-- FIXME: We should have t:(has_format_value u) but limitiation in the bootstrap compiler
-- prevent it.
(type u:format_numeric) auto_format_value t = format_numeric
  method format_s ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_s flags=flags width=width precision=precision
  method format_d ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_d flags=flags width=width precision=precision
  method format_o ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_o flags=flags width=width precision=precision
  method format_u ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_u flags=flags width=width precision=precision
  method format_x ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_x flags=flags width=width precision=precision
  method format_X ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_X flags=flags width=width precision=precision
  method format_e ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_e flags=flags width=width precision=precision
  method format_f ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_f flags=flags width=width precision=precision
  method format_g ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_g flags=flags width=width precision=precision
  method format_a ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_a flags=flags width=width precision=precision
  method format_A ?flags:?@nlang.numbers.u32 ?width:?@nlang.numbers.size ?precision:?@nlang.numbers.size = nlang.stringmod.string
    return (t.format_value self).format_A flags=flags width=width precision=precision
