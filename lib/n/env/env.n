from n import *
import n.cstring
import n.unsafe
import n.syscall

intf `Env =
	met Args = []String
	met Getvar name:String = Error, Stringbuf
	met! Setvar name:String value:String = Error

globalenv Env:@!`Env

fun Install_sys argc:Uint argv:@@U8 within Env
	let e = Alloc Sysenv
	e!Init argc argv
	let header = Alloc (Envheader @!`Env)
	header#Env = e
	Globalenv_install Env header

struct Sysenv =
	isa `Env
	argv	:(Buf String)

Sysenv met! Init argc:Uint argv:@@U8
	let v = {}:[]@U8 such v#Unsafe_wrap ((unsafe.Cast @@U8 @U8) argv) argc argc
	foreach i in 0 .. argc
		self!argv#Push# = (cstring.Wrap_raw_cstring v.[i].).String

Sysenv met Args = []String
	return self.argv.[..]

Sysenv met Getvar name:String = Error, Stringbuf
	return syscall.Getenv name

Sysenv met Setvar name:String value:String = Error
	return syscall.Setenv name value
