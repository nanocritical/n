export type void =

export intf Copyable =
export intf TrivialCopy = export Copyable
export intf ReturnByCopy =
export intf Matchable =
export intf Comparable = export Matchable
export intf Ordered = export Comparable
export intf Arithmetic = export Ordered
export intf Bitwise =

export intf AnyRef = export Copyable
export intf Ref = export AnyRef
export intf MutableRef = export Ref
export intf MercurialRef = export MutableRef
export intf NullableRef = export AnyRef
export intf NullableMutableRef = export NullableRef
export intf NullableMercurialRef = export NullableMutableRef

export type __pseudo_tuple__ = export Copyable
export type ref = export Ref
export type mref = export MutableRef
export type mmref = export MercurialRef
export type nref = export NullableRef
export type nmref = export NullableMutableRef
export type nmmref = export NullableMercurialRef
export type __internal_dyn__ =

export intf Integer = \
    export Arithmetic \
    export Ordered \
    export Bitwise

export intf NativeInteger = \
    export TrivialCopy \
    export ReturnByCopy \
    export Integer

export extern type bool = export NativeInteger
export extern type i8 = export NativeInteger
export extern type i16 = export NativeInteger
export extern type i32 = export NativeInteger
export extern type i64 = export NativeInteger
export extern type u8 = export NativeInteger
export extern type u16 = export NativeInteger
export extern type u32 = export NativeInteger
export extern type u64 = export NativeInteger
export extern type size = export NativeInteger
export extern type ssize = export NativeInteger

export intf Copyable =
  method# operator_copy other:@this = bool

export intf TrivialCopy = export Copyable

export intf Matchable =
  method operator_match other:@this = bool

export intf Comparable = export Matchable
  method operator_eq other:@this = bool
  method operator_ne other:@this = bool

export intf Boolean =
  method operator_or other:@this = this
  method operator_and other:@this = this
  method operator_not = this
  method operator_test = bool

export intf Ordered = export Comparable
  method operator_le other:@this = bool
  method operator_lt other:@this = bool
  method operator_gt other:@this = bool
  method operator_ge other:@this = bool

export intf Arithmetic = export Ordered
  method operator_plus other:@this = this
  method operator_minus other:@this = this
  method operator_divide other:@this = this
  method operator_modulo other:@this = this
  method operator_times other:@this = this
  method operator_uminus = this

export intf Bitwise =
  method operator_bwor other:@this = this
  method operator_bwxor other:@this = this
  method operator_bwand other:@this = this
  method operator_lshift by:u32 = this
  method operator_rshift by:u32 = this
  method operator_ubwnot = this

export intf DefaultCtor =
  method# ctor = void
  fun mk = this
  fun new = @#this

export intf ZeroCtor = DefaultCtor

export intf CtorWith =
  method# ctor_with = void
  fun mk_with = this
  fun new_with = @#this

--export intf CtorWith t:Copyable =
--  method# ctor_with c:t = void
--  fun mk_with c:t = this
--  fun new_with c:t = @#this
